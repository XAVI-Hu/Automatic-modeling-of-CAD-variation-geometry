'一定要记得还有无固定副的三副构件的多复合铰链的问题，最后完善吧(应该解决了）


Dim swApp As Object

Dim Part As Object
Dim boolstatus As Boolean
Dim longstatus As Long, longwarnings As Long

Public Sub draw_lines()
Set swApp = CreateObject("sldworks.application")
Set Part = swApp.ActiveDoc

Dim skSegment As Object
If m >= 1 And link(m).PorR(2) = 0 And (link(m).P_fixed = False And link(m).Xf = 0) Then    '判断是二副构件且无固定副
    DLink_Free
ElseIf m >= 1 And link(m).PorR(2) <> 0 And (link(m).P_fixed = False And link(m).Xf = 0) Then               '判断为3副构件且无固定副
    TLink_Free
ElseIf m >= 1 And link(m).PorR(2) = 0 And link(m).Xf Then       '判断是二副构件且 固定副 为R
    DLink_with_Rf
ElseIf m >= 1 And link(m).PorR(2) = 0 And link(m).P_fixed Then         '判断是二副构件且固定副为P
    DLink_with_Pf
ElseIf m >= 1 And link(m).PorR(2) <> 0 And link(m).Xf Then       '判断是三副构件且固定副为R
    Call TLink_with_Rf
    If link(m).fixed(0) Then
    Else
        Call End_Link_Judge         '三副的尾副固定才跳到此函数
    End If
ElseIf m >= 1 And link(m).PorR(2) <> 0 And link(m).P_fixed Then         '判断是三副构件且固定副为P
    TLink_with_Pf
    If link(m).fixed(0) Then
    Else
        Call End_Link_Judge         '三副的尾副固定才跳到此函数
    End If
End If

If m < 1 Then    '判断为首构件，也就是曲柄
    Set skSegment = Part.SketchManager.CreateLine(0, 0, 0#, 0, link(m).L(0) / 1000, 0#)
    Part.ClearSelection2 True
    LineX = LineX + 1
    boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
    Set myDisplayDim = Part.AddDimension2(-d_ref, link(m).L(0) / 2000, 0)
    Part.ClearSelection2 True
    no_dimen = no_dimen + 1
    ReDim Preserve IsDimension(LineX)
    IsDimension(LineX) = True               '表示LineX的尺寸已标注上
    boolstatus = Part.Extension.SelectByID2("Point6", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
    Part.SketchAddConstraints "sgFIXED"                                                                '固定曲柄中心点到原点
    Part.ClearSelection2 True
    If link(m).ch(1) Then
        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", 0, link(m).L(0) / 1000, 0, False, 0, Nothing, 0)
        Part.SketchAddConstraints "sgFIXED"                                                            '固定复合铰链
        Part.ClearSelection2 True
    End If
    If n = 3 Then      '在草图3才执行此操作
        Point_tail(0) = 0                       '首次跳转捕捉点
        Point_tail(1) = link(m).L(0) / 1000
    End If
    If link(m).Active Then                  '首副为主动构件
        boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
        boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
        Set myDisplayDim = Part.AddDimension2(0.05, 0.05, 0)        '添加主动位置尺寸
        Part.ClearSelection2 True
        no_dimen = no_dimen + 1
        If n = 1 Then       '在草图1才执行
            SD(no_of_SD) = no_dimen '这个不加的
            no_of_SD = no_of_SD + 1
        End If
    End If
    If link(m).PorR(1) = 1 Then         '曲柄的尾副为P副
        Set skSegment = Part.SketchManager.CreateLine(0, link(m).L(0) / 1000 + d_ref, 0#, d_ref, link(m).L(0) / 1000 + d_ref, 0#)
        Part.ClearSelection2 True
        LineX = LineX + 1
        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", 0, link(m).L(0) / 1000, 0, False, 0, Nothing, 0)
        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", 0, link(m).L(0) / 1000 + d_ref, 0, True, 0, Nothing, 0)
        Part.SketchAddConstraints "sgMERGEPOINTS"
        Part.ClearSelection2 True
        If n = 1 Then
            ReDim Preserve IsDimension(LineX)
            IsDimension(LineX) = True                                '表示LineX的尺寸已标注上（P副）
        End If
        boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
        boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
        Part.SketchAddConstraints "sgPERPENDICULAR"
        Part.ClearSelection2 True                                '添加P副与“长度1”直线的垂直约束
        boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
        boolstatus = Part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
        Part.SketchAddConstraints "sgSAMELENGTH"                 '添加P副与参考P副直线的相等约束
        Part.ClearSelection2 True
    End If
    If n < 3 Then
        If link(m).PorR(1) = 2 Then
            LineX = LineX - 1
            If link(m).Active Then
                no_dimen = no_dimen - 2
            Else
                no_dimen = no_dimen - 1
            End If
        Else
            LineX = LineX - 2
            If link(m).Active Then
                no_dimen = no_dimen - 2
            Else
                no_dimen = no_dimen - 1
            End If
        End If
    End If
End If
End Sub
Function TLink_Free()
    If n = 1 Then
        num_of_Empty = num_of_Empty + 1
        link(m).Empty_num = num_of_Empty
    End If
    If link(m).PorR(0) = 2 Then        '判断首副为R
        Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) + d_ref, 0#, Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0#)     '长度3直线
        Part.ClearSelection2 True
        LineX = LineX + 1
        If Xr > 0 Or Yr > 0 Then          '添加“替换”待求构件的辅助尺寸
            If n = 3 Then                  '仅在草图3里操作
                TMP_Cancel_fixed
                If m > 1 Then               '第二构件不操作（因为此为第二构件时 Xa（0）添加不上）
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                        Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定首副点
                        Part.ClearSelection2 True
                End If
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定尾副点
                Part.ClearSelection2 True
                If m > 1 Then               '第二构件不操作（因为此为第二构件时 Xa（0）添加不上）
                    boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0.05, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2 - link(m).L(0) / 2000, -d_ref, 0)
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1: Xa(0) = no_dimen           '添加了Xa(0)
                    boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0.05, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(-2 * d_ref, (Point_tail(1) + d_ref) / 2, 0)
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1: Ya(0) = no_dimen           '添加了Ya(0)
                    no_dimen_Shift = no_dimen_Shift + 2
                End If
                boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2, -2 * d_ref, 0)
                Part.ClearSelection2 True
                no_dimen = no_dimen + 1: Xa(1) = no_dimen           '添加了Xa(1)
                boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                Set myDisplayDim = Part.AddDimension2(-3 * d_ref, Point_tail(1) / 2, 0)
                Part.ClearSelection2 True
                no_dimen = no_dimen + 1: Ya(1) = no_dimen            '添加了Ya(1)
                no_dimen_Shift = no_dimen_Shift + 2
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                    Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除首副点固定约束
                    Part.ClearSelection2 True
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除尾副点固定约束
                Part.ClearSelection2 True
                
            End If
        End If
        boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
        Set myDisplayDim = Part.AddDimension2(Point_tail(0) + link(m).L(0) / 2000, Point_tail(1) + d_ref, 0)
        Part.ClearSelection2 True
        no_dimen = no_dimen + 1
        If n = 1 Then           '在草图1才执行此操作
            ReDim Preserve IsDimension(LineX)
            IsDimension(LineX) = True               '表示长度3的尺寸已标注上
        End If
        Set skSegment = Part.SketchManager.CreateLine(Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + 2 * d_ref, 0#, Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + 2 * d_ref + link(m).L(1) / 1000, 0#)     '长度2直线
        Part.ClearSelection2 True
        LineX = LineX + 1
        If n = 1 Then           '在草图1才执行此操作
            ReDim Preserve undimen(LineX)
            undimen(LineX) = link(m).L(1)           '记录下未标注的长度2
            If link(m).TBS Then
                Get_dimen(0) = LineX
            End If
        End If
        Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) + 2 * d_ref, 0#, Point_tail(0), Point_tail(1) + 2 * d_ref + link(m).L(2) / 1000, 0#)         '长度1直线
        Part.ClearSelection2 True
        LineX = LineX + 1
        If Xr > 0 Or Yr > 0 Then          '添加“替换”待求构件的辅助尺寸
            If n = 3 Then                  '仅在草图3里操作
                If m > 1 Then               '第二构件不操作（因为此为第二构件时 Xa（2）添加不上）
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + 2 * d_ref + link(m).L(2) / 1000, 0, False, 0, Nothing, 0)
                    Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定未配合的空副点
                    Part.ClearSelection2 True
                    boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + 2 * d_ref + link(m).L(2) / 1000, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0.05, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2 - link(m).L(0) / 2000, -3 * d_ref, 0)
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1: Xa(2) = no_dimen           '添加了Xa(2)
                    boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0.05, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + 2 * d_ref + link(m).L(2) / 1000, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(-3 * d_ref, (Point_tail(1) + d_ref) / 2, 0)
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1: Ya(2) = no_dimen           '添加了Ya(2)
                    no_dimen_Shift = no_dimen_Shift + 2
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + 2 * d_ref + link(m).L(2) / 1000, 0, False, 0, Nothing, 0)
                    Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除未配合的空副点固定约束
                    Part.ClearSelection2 True
                ElseIf m = 1 Then
                    Line_Get_Xaa2 = LineX               '记录下辅助直线序号
                    L_of_Line_Get_Xaa2 = link(m).L(2) / 1000
                End If
                TMP_Cancel_fixed_Recover
                Xr = 0: Yr = 0
                dimen_tobe_Delete(0) = no_dimen - no_dimen_Shift            '待删除的长度3，此数值是对于草图1/2来说的
                dimen_tobe_Delete(2) = no_dimen - no_dimen_Shift + 1          '待删除的长度1，此数值是对于草图1/2来说的

            End If
        End If
        boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
        Set myDisplayDim = Part.AddDimension2(Point_tail(0) - d_ref, Point_tail(1) + 2 * d_ref + link(m).L(2) / 2000, 0)
        Part.ClearSelection2 True
        no_dimen = no_dimen + 1
        If n = 1 Then           '在草图1才执行此操作
            ReDim Preserve IsDimension(LineX)
            IsDimension(LineX) = True               '表示长度1的尺寸已标注上
        End If
        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1), 0, False, 0, Nothing, 0)
        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
        Part.SketchAddConstraints "sgMERGEPOINTS"
        Part.ClearSelection2 True
        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1), 0, False, 0, Nothing, 0)
        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + 2 * d_ref, 0, True, 0, Nothing, 0)
        Part.SketchAddConstraints "sgMERGEPOINTS"
        Part.ClearSelection2 True
        boolstatus = Part.Extension.SelectByID2("Point6", "SKETCHPOINT", Point_tail(0), Point_tail(1) + link(m).L(2) / 1000, 0, False, 0, Nothing, 0)
        Part.SketchAddConstraints "sgFIXED"                                                                '暂时固定空副点。如果这里是复合铰链，那么在从这里开始下一条链或者其他构件与其配合这两者之一第一次发生时，这个固定约束还不能删除，第二次发生两者之一才能删除
        Part.ClearSelection2 True
        If n = 1 Then           '在草图1才执行此操作
            link(m).Point_Empty(0) = Point_tail(0)
            link(m).Point_Empty(1) = Point_tail(1) + link(m).L(2) / 1000            '记录下空副的位置
            ReDim Preserve Point_undimen_ref(1, LineX - 1)                          '这里用LineX-1是因为 三副构件中 这条未标尺寸直线一定是LineX-1
            Point_undimen_ref(0, LineX - 1) = link(m).Point_Empty(0)
            Point_undimen_ref(1, LineX - 1) = link(m).Point_Empty(1)                  '记录一个补加尺寸的参考点
            If link(m).ch(0) Then                                                       '是复合铰链就记录坐标
                link(m).Point_ch(0, 0) = Point_tail(0)
                link(m).Point_ch(0, 1) = Point_tail(1) + link(m).L(2) / 1000
            End If
        End If
        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1), 0, False, 0, Nothing, 0)
        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + 2 * d_ref, 0, True, 0, Nothing, 0)
        Part.SketchAddConstraints "sgMERGEPOINTS"
        Part.ClearSelection2 True
        boolstatus = Part.Extension.SelectByID2("Point6", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1), 0, False, 0, Nothing, 0)
        Part.SketchAddConstraints "sgFIXED"                                                                 '暂时固定尾副
        Part.ClearSelection2 True
        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + link(m).L(2) / 1000, 0, False, 0, Nothing, 0)
        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + link(m).L(1) / 1000, 0, True, 0, Nothing, 0)
        Part.SketchAddConstraints "sgMERGEPOINTS"
        Part.ClearSelection2 True
        If link(m).ch(1) Then
            If n = 1 Then           '在草图1才执行此操作
                link(m).Point_ch(1, 0) = Point_tail(0) + link(m).L(0) / 1000                                '记录复合铰链坐标
                link(m).Point_ch(1, 1) = Point_tail(1)
            End If
        Else
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1), 0, False, 0, Nothing, 0)
            Part.SketchConstraintsDel 0, "sgFIXED"                                                          '不是复合铰链的话删除上面尾副的固定约束
            Part.ClearSelection2 True
        End If
        If link(m).PorR(2) = 1 Then            '空余副为P副
            Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) + d_ref + link(m).L(2) / 1000, 0#, Point_tail(0) - 0.045, Point_tail(1) + d_ref + link(m).L(2) / 1000, 0#)
            Part.ClearSelection2 True
            LineX = LineX + 1
            boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgSAMELENGTH"                 '添加P副与参考P副直线的相等约束
            Part.ClearSelection2 True
            If n = 1 Then           '在草图1才执行此操作
                ReDim Preserve IsDimension(LineX)
                IsDimension(LineX) = True               '看作P副直线的尺寸已标注上
                link(m).Line_Empty = LineX              '记录下此空余P的直线序号，方便后续配合时使用
            End If
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + link(m).L(2) / 1000, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref + link(m).L(2) / 1000, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
            Set myDisplayDim = Part.AddDimension2(Point_tail(0) - 0.05, Point_tail(1) + link(m).L(2) / 1000 - 0.05, 0)     '添加上P副的内部角度尺寸（须做更改）
            Part.ClearSelection2 True
            no_dimen = no_dimen + 1
            boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
            Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
            myDimension.SystemValue = link(m).beta(2) / 180 * pi
            Part.ClearSelection2 True
        End If
        If link(m).PorR(1) = 1 Then             '尾副为P副
            Set skSegment = Part.SketchManager.CreateLine(Point_tail(0) + link(m).L(0) / 1000 + d_ref, Point_tail(1), 0#, Point_tail(0) + link(m).L(0) / 1000 + d_ref, Point_tail(1) + d_ref, 0#)
            Part.ClearSelection2 True
            LineX = LineX + 1
            boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgSAMELENGTH"                 '添加P副与参考P副直线的相等约束
            Part.ClearSelection2 True
            If n = 1 Then           '在草图1才执行此操作
                ReDim Preserve IsDimension(LineX)
                IsDimension(LineX) = True               '看作P副直线的尺寸已标注上
            End If
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1), 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000 + d_ref, Point_tail(1), 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            If link(m).PorR(2) = 1 Then
                boolstatus = Part.Extension.SelectByID2("Line" & LineX - 3, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                Set myDisplayDim = Part.AddDimension2(Point_tail(0) + link(m).L(0) / 1000 - 0.01, Point_tail(1) + 0.1, 0) '添加上P副的内部角度尺寸（须做更改）
                Part.ClearSelection2 True
            ElseIf link(m).PorR(2) = 2 Then
                boolstatus = Part.Extension.SelectByID2("Line" & LineX - 2, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                Set myDisplayDim = Part.AddDimension2(Point_tail(0) + link(m).L(0) / 1000 - 0.01, Point_tail(1) + 0.1, 0) '添加上P副的内部角度尺寸（须做更改）
                Part.ClearSelection2 True
            End If
            no_dimen = no_dimen + 1
            boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
            Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
            myDimension.SystemValue = link(m).beta(1) / 180 * pi
            Part.ClearSelection2 True
            
        End If
        If n = 3 Then           '在草图3才执行此操作
            Point_tail(0) = Point_tail(0) + link(m).L(0) / 1000             '首副为R副时跳转尾副点
            Point_tail(1) = Point_tail(1)
        End If
        If n < 3 Then           '在草图1、2才执行此操作，防止多加LineX和no_dimen
            If link(m).PorR(1) = 2 And link(m).PorR(2) = 2 Then     'RRR
                LineX = LineX - 3
                no_dimen = no_dimen - 2
            ElseIf link(m).PorR(1) = 1 And link(m).PorR(2) = 2 Then     'RRP
                LineX = LineX - 4
                no_dimen = no_dimen - 3
            ElseIf link(m).PorR(1) = 2 And link(m).PorR(2) = 1 Then     'RPR
                LineX = LineX - 4
                no_dimen = no_dimen - 3
            ElseIf link(m).PorR(1) = 1 And link(m).PorR(2) = 1 Then     'RPP
                LineX = LineX - 5
                no_dimen = no_dimen - 4
            End If
        End If
    ElseIf link(m).PorR(0) = 1 Then           '判断首副为P
        If n = 3 Then           '在草图3才执行此操作
            link(m).Line_Unset = LineX            '记录下未与首副点重合的直线序号，其实是上一构件的尾端P副直线
        End If
        If link(m - 1).PorR(2) <> 0 Or (link(m - 1).PorR(2) = 0 And link(m - 1).L(0) <> 0 And m >= 2) Then       'OnenNote中2.二.(2).A
            Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) + d_ref, 0#, Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0#)     '长度3直线
            Part.ClearSelection2 True
            LineX = LineX + 1
            If Xr > 0 Or Yr > 0 Then          '添加“替换”待求构件的辅助尺寸
                If n = 3 Then                  '仅在草图3里操作
                    TMP_Cancel_fixed
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                    Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定首副点
                    Part.ClearSelection2 True
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                    Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定尾副点
                    Part.ClearSelection2 True
                    boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0.05, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2 - link(m).L(0) / 2000, -d_ref, 0)
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1: Xa(0) = no_dimen           '添加了Xa(0)
                    boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0.05, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(-2 * d_ref, (Point_tail(1) + d_ref) / 2, 0)
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1: Ya(0) = no_dimen           '添加了Ya(0)
                    no_dimen_Shift = no_dimen_Shift + 2
                    boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2, -2 * d_ref, 0)
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1: Xa(1) = no_dimen           '添加了Xa(1)
                    boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(-3 * d_ref, Point_tail(1) / 2, 0)
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1: Ya(1) = no_dimen            '添加了Ya(1)
                    no_dimen_Shift = no_dimen_Shift + 2
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                    Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除首副点固定约束
                    Part.ClearSelection2 True
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                    Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除尾副点固定约束
                    Part.ClearSelection2 True
                End If
            End If
            boolstatus = Part.Extension.SelectByID2("Point6", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
            Part.SketchAddConstraints "sgFIXED"                                                                '暂时固定首副点
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Point6", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
            Part.SketchAddConstraints "sgFIXED"                                                                '暂时固定尾副点
            Part.ClearSelection2 True
            Set skSegment = Part.SketchManager.CreateLine(Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + 2 * d_ref, 0#, Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + 2 * d_ref + link(m).L(1) / 1000, 0#)     '长度2直线
            Part.ClearSelection2 True
            LineX = LineX + 1
            If n = 1 Then           '在草图1才执行此操作
                ReDim Preserve undimen(LineX)
                undimen(LineX) = link(m).L(1)           '记录下未标注的长度2
                If link(m).TBS Then
                    Get_dimen(0) = LineX
                End If
            End If
            Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) + 2 * d_ref, 0#, Point_tail(0), Point_tail(1) + 2 * d_ref + link(m).L(2) / 1000, 0#)         '长度1直线
            Part.ClearSelection2 True
            LineX = LineX + 1
            If Xr > 0 Or Yr > 0 Then          '添加“替换”待求构件的辅助尺寸
                If n = 3 Then                  '仅在草图3里操作
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + 2 * d_ref + link(m).L(2) / 1000, 0, False, 0, Nothing, 0)
                    Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定未配合的空副点
                    Part.ClearSelection2 True
                    boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + 2 * d_ref + link(m).L(2) / 1000, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0.05, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2 - link(m).L(0) / 2000, -3 * d_ref, 0)
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1: Xa(2) = no_dimen           '添加了Xa(2)
                    boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0.05, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + 2 * d_ref + link(m).L(2) / 1000, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(-3 * d_ref, (Point_tail(1) + d_ref) / 2, 0)
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1: Ya(2) = no_dimen           '添加了Ya(2)
                    no_dimen_Shift = no_dimen_Shift + 2
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + 2 * d_ref + link(m).L(2) / 1000, 0, False, 0, Nothing, 0)
                    Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除未配合的空副点固定约束
                    Part.ClearSelection2 True
                    TMP_Cancel_fixed_Recover
                    Xr = 0: Yr = 0
                    dimen_tobe_Delete(0) = no_dimen - no_dimen_Shift + 3          '待删除的长度3，此数值是对于草图1/2来说的
                    no_dimen_Shift_A = 2
                    dimen_tobe_Delete(2) = no_dimen - no_dimen_Shift + 1          '待删除的长度1，此数值是对于草图1/2来说的
    
                End If
            End If
            boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            Set myDisplayDim = Part.AddDimension2(Point_tail(0) - d_ref, Point_tail(1) + link(m).L(2) / 2000 + d_ref, 0)
            Part.ClearSelection2 True
            no_dimen = no_dimen + 1
            If n = 1 Then           '在草图1才执行此操作
                ReDim Preserve IsDimension(LineX)
                IsDimension(LineX) = True               '表示长度1的尺寸已标注上
            End If
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + 2 * d_ref, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + 2 * d_ref, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Point6", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref + link(m).L(2) / 1000, 0, False, 0, Nothing, 0)
            Part.SketchAddConstraints "sgFIXED"                                                                 '暂时固定空副点。如果这里是复合铰链，那么在从这里开始下一条链或者其他构件与其配合这两者之一第一次发生时，这个固定约束还不能删除，第二次发生两者之一才能删除
            Part.ClearSelection2 True
            If link(m).ch(0) Then
                If n = 1 Then           '在草图1才执行此操作
                    link(m).Point_ch(0, 0) = Point_tail(0)                                '记录复合铰链坐标
                    link(m).Point_ch(0, 1) = Point_tail(1) + d_ref + link(m).L(2) / 1000
                End If
            End If
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref + link(m).L(2) / 1000, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref + link(m).L(1) / 1000, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Line" & LineX - 3, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Line" & LineX - 2, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
            Set myDisplayDim = Part.AddDimension2(Point_tail(0) + link(m).L(0) / 4000, Point_tail(1) + d_ref - 0.005, 0) '添加上首P副的内部角度尺寸（须做下面更改）
            Part.ClearSelection2 True
            no_dimen = no_dimen + 1
            boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
            Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
            myDimension.SystemValue = link(m).beta(0) / 180 * pi
            Part.ClearSelection2 True
            If link(m).ch(1) = False Then                        '不是复合铰链就删这个固定约束
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除尾副的固定约束
                Part.ClearSelection2 True
            Else
                If n = 1 Then           '在草图1才执行此操作
                    link(m).Point_ch(1, 0) = Point_tail(0) + link(m).L(0) / 1000                                '记录复合铰链坐标
                    link(m).Point_ch(1, 1) = Point_tail(1) + d_ref
                End If
            End If
            boolstatus = Part.Extension.SelectByID2("Line" & LineX - 2, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            Set myDisplayDim = Part.AddDimension2(Point_tail(0) + link(m).L(0) / 2000, Point_tail(1) + 2 * d_ref, 0)
            Part.ClearSelection2 True
            no_dimen = no_dimen + 1
            If n = 1 Then           '在草图1才执行此操作
                IsDimension(LineX - 2) = True             '表示长度3的尺寸已标注上
                link(m).Point_unset(0) = Point_tail(0)
                link(m).Point_unset(1) = Point_tail(1) + d_ref          '记录未配合的首副点坐标
                link(m).Point_Empty(0) = Point_tail(0)
                link(m).Point_Empty(1) = Point_tail(1) + d_ref + link(m).L(2) / 1000          '记录下空副的位置
                ReDim Preserve Point_undimen_ref(1, LineX - 1)
                Point_undimen_ref(0, LineX - 1) = link(m).Point_Empty(0)
                Point_undimen_ref(1, LineX - 1) = link(m).Point_Empty(1)                  '记录一个补加尺寸的参考点
            End If
            If link(m).PorR(2) = 1 Then            '空余副为P副
                Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) + 2 * d_ref + link(m).L(2) / 1000, 0#, Point_tail(0) - 0.045, Point_tail(1) + 2 * d_ref + link(m).L(2) / 1000, 0#)
                Part.ClearSelection2 True
                LineX = LineX + 1
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgSAMELENGTH"                 '添加P副与参考P副直线的相等约束
                Part.ClearSelection2 True
                If n = 1 Then           '在草图1才执行此操作
                    ReDim Preserve IsDimension(LineX)
                    IsDimension(LineX) = True               '看作P副直线的尺寸已标注上
                    link(m).Line_Empty = LineX              '记录下此空余P的直线序号，方便后续配合时使用
                End If
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + 2 * d_ref + link(m).L(2) / 1000, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref + link(m).L(2) / 1000, 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgMERGEPOINTS"
                Part.ClearSelection2 True
                boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                Set myDisplayDim = Part.AddDimension2(Point_tail(0) - 0.05, Point_tail(1) + link(m).L(2) / 1000, 0)     '添加上P副的内部角度尺寸（须做更改）
                Part.ClearSelection2 True
                no_dimen = no_dimen + 1
                boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
                Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
                myDimension.SystemValue = link(m).beta(2) / 180 * pi
                Part.ClearSelection2 True
            End If
            If link(m).PorR(1) = 1 Then             '尾副为P副
                Set skSegment = Part.SketchManager.CreateLine(Point_tail(0) + link(m).L(0) / 1000 + d_ref, Point_tail(1) + d_ref, 0#, Point_tail(0) + link(m).L(0) / 1000 + d_ref, Point_tail(1) + 2 * d_ref, 0#)
                Part.ClearSelection2 True
                LineX = LineX + 1
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgSAMELENGTH"                 '添加P副与参考P副直线的相等约束
                Part.ClearSelection2 True
                If n = 1 Then           '在草图1才执行此操作
                    ReDim Preserve IsDimension(LineX)
                    IsDimension(LineX) = True               '看作P副直线的尺寸已标注上
                End If
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000 + d_ref, Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgMERGEPOINTS"
                Part.ClearSelection2 True
                If link(m).PorR(2) = 1 Then
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX - 3, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(Point_tail(0) + link(m).L(0) / 1000 - 0.01, Point_tail(1) + 0.1, 0) '添加上P副的内部角度尺寸（须做更改）
                    Part.ClearSelection2 True
                ElseIf link(m).PorR(2) = 2 Then
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX - 2, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(Point_tail(0) + link(m).L(0) / 1000 - 0.01, Point_tail(1) + 0.1, 0) '添加上P副的内部角度尺寸（须做更改）
                    Part.ClearSelection2 True
                End If
                no_dimen = no_dimen + 1
                boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
                Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
                myDimension.SystemValue = link(m).beta(1) / 180 * pi
                Part.ClearSelection2 True
            End If
            If n = 3 Then           '在草图3才执行此操作
                Point_tail(0) = Point_tail(0) + link(m).L(0) / 1000
                Point_tail(1) = Point_tail(1) + d_ref                   '跳转尾副点
            End If
            If n < 3 Then           '在草图1、2才执行此操作，防止多加LineX
                If link(m).PorR(1) = 2 And link(m).PorR(2) = 2 Then             'PRR
                    LineX = LineX - 3
                    no_dimen = no_dimen - 3
                ElseIf link(m).PorR(1) = 1 And link(m).PorR(2) = 2 Then         'PRP
                    LineX = LineX - 4
                    no_dimen = no_dimen - 4
                ElseIf link(m).PorR(1) = 2 And link(m).PorR(2) = 1 Then         'PPR
                    LineX = LineX - 4
                    no_dimen = no_dimen - 4
                ElseIf link(m).PorR(1) = 1 And link(m).PorR(2) = 1 Then         'PPP
                    LineX = LineX - 5
                    no_dimen = no_dimen - 5
                End If
            End If
        ElseIf (link(m - 1).PorR(2) = 0 And link(m - 1).L(0) = 0) Or m = 1 Then                                  'OnenNote中2.二.(2).B
            Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) + d_ref, 0#, Point_tail(0), Point_tail(1) + d_ref - link(m).L(0) / 1000, 0#)     '长度3直线
            Part.ClearSelection2 True
            LineX = LineX + 1
            Set skSegment = Part.SketchManager.CreateLine(Point_tail(0) + d_ref, Point_tail(1) + d_ref - link(m).L(0) / 1000, 0#, Point_tail(0) + d_ref + link(m).L(1) / 1000, Point_tail(1) + d_ref - link(m).L(0) / 1000, 0#) '长度2直线
            Part.ClearSelection2 True
            LineX = LineX + 1
            ReDim Preserve undimen(LineX)
            undimen(LineX) = link(m).L(1)           '记录下未标注的长度2
            Set skSegment = Part.SketchManager.CreateLine(Point_tail(0) + d_ref, Point_tail(1) + d_ref, 0#, Point_tail(0) + d_ref + link(m).L(2) / 1000, Point_tail(1) + d_ref, 0#)     '长度1直线
            Part.ClearSelection2 True
            LineX = LineX + 1
            boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            Set myDisplayDim = Part.AddDimension2(Point_tail(0) + d_ref + link(m).L(2) / 2000, Point_tail(1) + 2 * d_ref, 0)
            Part.ClearSelection2 True
            no_dimen = no_dimen + 1
            ReDim Preserve IsDimension(LineX)
            IsDimension(LineX) = True                       '表示长度1直线尺寸已标注
            boolstatus = Part.Extension.SelectByID2("Point6", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
            Part.SketchAddConstraints "sgFIXED"                                                                '暂时固定首副点
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Point6", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref - link(m).L(0) / 1000, 0, False, 0, Nothing, 0)
            Part.SketchAddConstraints "sgFIXED"                                                                '暂时固定尾副点
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + d_ref, Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Point6", "SKETCHPOINT", Point_tail(0) + link(m).L(2) / 1000, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
            Part.SketchAddConstraints "sgFIXED"                                                                 '暂时固定空副点。如果这里是复合铰链，那么在从这里开始下一条链或者其他构件与其配合这两者之一第一次发生时，这个固定约束还不能删除，第二次发生两者之一才能删除
            Part.ClearSelection2 True
            If link(m).ch(0) Then
                link(m).Point_ch(0, 0) = Point_tail(0) + link(m).L(2) / 1000                                '记录复合铰链坐标
                link(m).Point_ch(0, 1) = Point_tail(1) + d_ref
            End If
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref - link(m).L(0) / 1000, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + d_ref, Point_tail(1) + d_ref - link(m).L(0) / 1000, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(2) / 1000, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(1) / 1000, Point_tail(1) + d_ref - link(m).L(0) / 1000, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Line" & LineX - 3, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Line" & LineX - 2, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
            Set myDisplayDim = Part.AddDimension2(Point_tail(0) - 0.05, Point_tail(1) - 0.1, 0) '添加上首P副的内部角度尺寸（须做更改）
            Part.ClearSelection2 True
            no_dimen = no_dimen + 1
            boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
            Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
            myDimension.SystemValue = link(m).beta(0) / 180 * pi
            Part.ClearSelection2 True
            If link(m).ch(1) = False Then               '不是复合铰链就删这个固定约束
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref - link(m).L(0) / 1000, 0, False, 0, Nothing, 0)
                Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除尾副的固定约束
                Part.ClearSelection2 True
            Else
                link(m).Point_ch(1, 0) = Point_tail(0)                                 '记录复合铰链坐标
                link(m).Point_ch(1, 1) = Point_tail(1) + d_ref - link(m).L(0) / 1000
            End If
            boolstatus = Part.Extension.SelectByID2("Line" & LineX - 2, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            Set myDisplayDim = Part.AddDimension2(Point_tail(0) - 0.05, Point_tail(1) + d_ref - link(m).L(0) / 2000, 0)
            Part.ClearSelection2 True
            no_dimen = no_dimen + 1
            IsDimension(LineX - 2) = True             '表示长度3的尺寸已标注上
            link(m).Point_unset(0) = Point_tail(0)
            link(m).Point_unset(1) = Point_tail(1) + d_ref          '记录首副点坐标
            link(m).Point_Empty(0) = Point_tail(0) + link(m).L(2) / 1000
            link(m).Point_Empty(1) = Point_tail(1) + d_ref          '记录空副点坐标
            ReDim Preserve Point_undimen_ref(1, LineX - 1)
            Point_undimen_ref(0, LineX - 1) = link(m).Point_Empty(0)
            Point_undimen_ref(1, LineX - 1) = link(m).Point_Empty(1)                  '记录一个补加尺寸的参考点
            If link(m).PorR(2) = 1 Then            '空余副为P副
                Set skSegment = Part.SketchManager.CreateLine(Point_tail(0) + d_ref + link(m).L(2) / 1000, Point_tail(1) + d_ref, 0#, Point_tail(0) + d_ref + link(m).L(2) / 1000, Point_tail(1) + d_ref + 0.045, 0#)
                Part.ClearSelection2 True
                LineX = LineX + 1
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgSAMELENGTH"                 '添加P副与参考P副直线的相等约束
                Part.ClearSelection2 True
                ReDim Preserve IsDimension(LineX)
                IsDimension(LineX) = True               '看作P副直线的尺寸已标注上
                link(m).Line_Empty = LineX              '记录下此空余P的直线序号，方便后续配合时使用
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + d_ref + link(m).L(2) / 1000, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(2) / 1000, Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgMERGEPOINTS"
                Part.ClearSelection2 True
                boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                Set myDisplayDim = Part.AddDimension2(Point_tail(0) + link(m).L(2) / 1200, Point_tail(1) + 2 * d_ref, 0)  '添加上P副的内部角度尺寸（须做更改）
                Part.ClearSelection2 True
                no_dimen = no_dimen + 1
                boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
                Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
                myDimension.SystemValue = link(m).beta(2) / 180 * pi
                Part.ClearSelection2 True
            End If
            If link(m).PorR(1) = 1 Then             '尾副为P副
                Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) - link(m).L(0) / 1000, 0#, Point_tail(0) + 0.045, Point_tail(1) - link(m).L(0) / 1000, 0#)
                Part.ClearSelection2 True
                LineX = LineX + 1
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgSAMELENGTH"                 '添加P副与参考P副直线的相等约束
                Part.ClearSelection2 True
                ReDim Preserve IsDimension(LineX)
                IsDimension(LineX) = True               '看作P副直线的尺寸已标注上
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) - link(m).L(0) / 1000, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref - link(m).L(0) / 1000, 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgMERGEPOINTS"
                Part.ClearSelection2 True
                If link(m).PorR(2) = 1 Then
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX - 3, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(Point_tail(0) + d_ref, Point_tail(1) + 0.055 - link(m).L(0) / 1000, 0) '添加上P副的内部角度尺寸（须做更改）
                    Part.ClearSelection2 True
                ElseIf link(m).PorR(2) = 2 Then
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX - 2, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(Point_tail(0) + d_ref, Point_tail(1) + 0.055 - link(m).L(0) / 1000, 0) '添加上P副的内部角度尺寸（须做更改）
                    Part.ClearSelection2 True
                End If
                no_dimen = no_dimen + 1
                boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
                Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
                myDimension.SystemValue = link(m).beta(1) / 180 * pi
                Part.ClearSelection2 True
            End If
            If n = 3 Then               '在草图3才执行此操作
                Point_tail(0) = Point_tail(0)                                   '特殊跳转尾副点
                Point_tail(1) = Point_tail(1) + d_ref - link(m).L(0) / 1000
            End If
            If n < 3 Then           '在草图1、2才执行此操作，防止多加LineX、no_dimen
                If link(m).PorR(1) = 2 And link(m).PorR(2) = 2 Then             'PRR
                    LineX = LineX - 3
                    no_dimen = no_dimen - 3
                ElseIf link(m).PorR(1) = 1 And link(m).PorR(2) = 2 Then         'PRP
                    LineX = LineX - 4
                    no_dimen = no_dimen - 4
                ElseIf link(m).PorR(1) = 2 And link(m).PorR(2) = 1 Then         'PPR
                    LineX = LineX - 4
                    no_dimen = no_dimen - 4
                ElseIf link(m).PorR(1) = 1 And link(m).PorR(2) = 1 Then         'PPP
                    LineX = LineX - 5
                    no_dimen = no_dimen - 5
                End If
            End If
        End If
    End If
End Function
Function DLink_Free()
Dim myDisplayDim As Object
If link(m).PorR(0) = 2 Then        '判断首副为R
    If link(m).PorR(1) = 2 Then     '判断为RR副
        If link(m).ch_junction_num = 0 And link(m).Empty_junction_num = 0 Then         '未与复合铰链或空副重合
            Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) + d_ref, 0#, Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0#)
            Part.ClearSelection2 True
            LineX = LineX + 1
            If Xr > 0 Or Yr > 0 Then          '添加“替换”待求构件的辅助尺寸
                If n = 3 Then                  '仅在草图3里操作
                    TMP_Cancel_fixed
                    If m > 1 Then               '第二构件不操作（因为此为第二构件时 Xa（0）添加不上）
                            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                            Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定首副点
                            Part.ClearSelection2 True
                    End If
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                    Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定尾副点
                    Part.ClearSelection2 True
                    If m > 1 Then               '第二构件不操作（因为此为第二构件时 Xa（0）添加不上）
                        boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                        boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0.05, 0, True, 0, Nothing, 0)
                        Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2 - link(m).L(0) / 2000, -d_ref, 0)
                        Part.ClearSelection2 True
                        no_dimen = no_dimen + 1: Xa(0) = no_dimen           '添加了Xa(0)
                        boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0.05, 0, 0, False, 0, Nothing, 0)
                        boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                        Set myDisplayDim = Part.AddDimension2(-2 * d_ref, (Point_tail(1) + d_ref) / 2, 0)
                        Part.ClearSelection2 True
                        no_dimen = no_dimen + 1: Ya(0) = no_dimen           '添加了Ya(0)
                        no_dimen_Shift = no_dimen_Shift + 2
                    End If
                    boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2, -2 * d_ref, 0)
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1: Xa(1) = no_dimen           '添加了Xa(1)
                    boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(-3 * d_ref, Point_tail(1) / 2, 0)
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1: Ya(1) = no_dimen            '添加了Ya(1)
                    no_dimen_Shift = no_dimen_Shift + 2
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                        Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除首副点固定约束
                        Part.ClearSelection2 True
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                    Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除尾副点固定约束
                    Part.ClearSelection2 True
                    TMP_Cancel_fixed_Recover
                    Xr = 0: Yr = 0
                    dimen_tobe_Delete(0) = no_dimen - no_dimen_Shift + 1            '此数值是对于草图1/2来说的
                End If
            End If
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1), 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            Set myDisplayDim = Part.AddDimension2(Point_tail(0) + link(m).L(0) / 2000, Point_tail(1) + d_ref, 0)
            Part.ClearSelection2 True
            no_dimen = no_dimen + 1
            If n = 1 Then
                ReDim Preserve IsDimension(LineX)
                IsDimension(LineX) = True               '表示LineX的尺寸已标注上
            End If
            If link(m).ch(1) Then
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1), 0, False, 0, Nothing, 0)
                Part.SketchAddConstraints "sgFIXED"                                                            '固定复合铰链
                Part.ClearSelection2 True
                If n = 1 Then       '在草图1才执行此操作
                    link(m).Point_ch(1, 0) = Point_tail(0) + link(m).L(0) / 1000                                   '记录复合铰链坐标
                    link(m).Point_ch(1, 1) = Point_tail(1)
                End If
            End If
            If n < 3 Then
                LineX = LineX - 1: no_dimen = no_dimen - 1
            End If
            If n = 3 Then       '在草图3才执行此操作
                Point_tail(0) = Point_tail(0) + link(m).L(0) / 1000             '跳转尾副点
                Point_tail(1) = Point_tail(1)
            End If
        ElseIf link(m).ch_junction_num > 0 Then      '与复合铰链重合
            For i = 1 To m - 1
                If link(i).ch_num(1) = link(m).ch_junction_num Then        '三副构件或二副构件尾部的复合铰链
                    Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) + d_ref, 0#, link(i).Point_ch(1, 0), link(i).Point_ch(1, 1) + 2 * d_ref, 0#)
                    Part.ClearSelection2 True
                    LineX = LineX + 1
                    If Xr > 0 Or Yr > 0 Then          '添加“替换”待求构件的辅助尺寸
                        If n = 3 Then                  '仅在草图3里操作
                            TMP_Cancel_fixed
                                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                                Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定首副点
                                Part.ClearSelection2 True
                            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(i).Point_ch(1, 0), link(i).Point_ch(1, 1) + 2 * d_ref, 0, False, 0, Nothing, 0)
                            Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定尾副点
                            Part.ClearSelection2 True
                            boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                            boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0.05, 0, True, 0, Nothing, 0)
                            Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2 - link(m).L(0) / 2000, -d_ref, 0)
                            Part.ClearSelection2 True
                            no_dimen = no_dimen + 1: Xa(0) = no_dimen           '添加了Xa(0)
                            boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0.05, 0, 0, False, 0, Nothing, 0)
                            boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                            Set myDisplayDim = Part.AddDimension2(-2 * d_ref, (Point_tail(1) + d_ref) / 2, 0)
                            Part.ClearSelection2 True
                            no_dimen = no_dimen + 1: Ya(0) = no_dimen           '添加了Ya(0)
                            no_dimen_Shift = no_dimen_Shift + 2
                            boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(i).Point_ch(1, 0), link(i).Point_ch(1, 1) + 2 * d_ref, 0, True, 0, Nothing, 0)
                            Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2, -2 * d_ref, 0)
                            Part.ClearSelection2 True
                            no_dimen = no_dimen + 1: Xa(1) = no_dimen           '添加了Xa(1)
                            boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(i).Point_ch(1, 0), link(i).Point_ch(1, 1) + 2 * d_ref, 0, True, 0, Nothing, 0)
                            Set myDisplayDim = Part.AddDimension2(-3 * d_ref, Point_tail(1) / 2, 0)
                            Part.ClearSelection2 True
                            no_dimen = no_dimen + 1: Ya(1) = no_dimen            '添加了Ya(1)
                            no_dimen_Shift = no_dimen_Shift + 2
                                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                                Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除首副点固定约束
                                Part.ClearSelection2 True
                            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(i).Point_ch(1, 0), link(i).Point_ch(1, 1) + 2 * d_ref, 0, False, 0, Nothing, 0)
                            Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除尾副点固定约束
                            Part.ClearSelection2 True
                            TMP_Cancel_fixed_Recover
                            Xr = 0: Yr = 0
                            dimen_tobe_Delete(0) = no_dimen - no_dimen_Shift + 1            '此数值是对于草图1/2来说的
                        End If
                    End If
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1), 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                    Part.SketchAddConstraints "sgMERGEPOINTS"
                    Part.ClearSelection2 True
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2 + link(i).Point_ch(1, 0) / 2, (Point_tail(1) + link(i).Point_ch(1, 1) + d_ref) / 2, 0)
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1
                    If n = 1 Then
                        ReDim Preserve IsDimension(LineX)
                        IsDimension(LineX) = True               '表示LineX的尺寸已标注上
                    End If
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(i).Point_ch(1, 0), link(i).Point_ch(1, 1) + d_ref, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(i).Point_ch(1, 0), link(i).Point_ch(1, 1), 0, True, 0, Nothing, 0)
                    Part.SketchAddConstraints "sgMERGEPOINTS"
                    Part.ClearSelection2 True
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(i).Point_ch(1, 0), link(i).Point_ch(1, 1), 0, False, 0, Nothing, 0)
                    Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除尾副处复合铰链点的固定约束
                    Part.ClearSelection2 True
                    If n = 3 Then
                        link(i).ch(1) = False   '清除复合铰链标记
                    End If
                    boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)     '画草图2和3的时候需要再改名称
                    Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
                    myDimension.SystemValue = link(m).L(0) / 1000
                    Part.ClearSelection2 True
                    Exit For
                ElseIf link(i).ch_num(0) = link(m).ch_junction_num Then              '重合到的构件是三副构件的②副位置
                    Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) + d_ref, 0#, link(i).Point_ch(0, 0), link(i).Point_ch(0, 1) + 2 * d_ref, 0#)
                    Part.ClearSelection2 True
                    LineX = LineX + 1
                    If Xr > 0 Or Yr > 0 Then          '添加“替换”待求构件的辅助尺寸
                        If n = 3 Then                  '仅在草图3里操作
                            TMP_Cancel_fixed
                                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                                Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定首副点
                                Part.ClearSelection2 True
                            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(i).Point_ch(0, 0), link(i).Point_ch(0, 1) + 2 * d_ref, 0, False, 0, Nothing, 0)
                            Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定尾副点
                            Part.ClearSelection2 True
                            boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                            boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0.05, 0, True, 0, Nothing, 0)
                            Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2 - link(m).L(0) / 2000, -d_ref, 0)
                            Part.ClearSelection2 True
                            no_dimen = no_dimen + 1: Xa(0) = no_dimen           '添加了Xa(0)
                            boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0.05, 0, 0, False, 0, Nothing, 0)
                            boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                            Set myDisplayDim = Part.AddDimension2(-2 * d_ref, (Point_tail(1) + d_ref) / 2, 0)
                            Part.ClearSelection2 True
                            no_dimen = no_dimen + 1: Ya(0) = no_dimen           '添加了Ya(0)
                            no_dimen_Shift = no_dimen_Shift + 2
                            boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(i).Point_ch(0, 0), link(i).Point_ch(0, 1) + 2 * d_ref, 0, True, 0, Nothing, 0)
                            Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2, -2 * d_ref, 0)
                            Part.ClearSelection2 True
                            no_dimen = no_dimen + 1: Xa(1) = no_dimen           '添加了Xa(1)
                            boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(i).Point_ch(0, 0), link(i).Point_ch(0, 1) + 2 * d_ref, 0, True, 0, Nothing, 0)
                            Set myDisplayDim = Part.AddDimension2(-3 * d_ref, Point_tail(1) / 2, 0)
                            Part.ClearSelection2 True
                            no_dimen = no_dimen + 1: Ya(1) = no_dimen            '添加了Ya(1)
                            no_dimen_Shift = no_dimen_Shift + 2
                                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                                Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除首副点固定约束
                                Part.ClearSelection2 True
                            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(i).Point_ch(0, 0), link(i).Point_ch(0, 1) + 2 * d_ref, 0, False, 0, Nothing, 0)
                            Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除尾副点固定约束
                            Part.ClearSelection2 True
                            TMP_Cancel_fixed_Recover
                            Xr = 0: Yr = 0
                            dimen_tobe_Delete(0) = no_dimen - no_dimen_Shift + 1            '此数值是对于草图1/2来说的
                        End If
                    End If
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1), 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                    Part.SketchAddConstraints "sgMERGEPOINTS"
                    Part.ClearSelection2 True
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2 + link(i).Point_ch(0, 0) / 2, (Point_tail(1) + link(i).Point_ch(0, 1) + d_ref) / 2, 0)
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1
                    If n = 1 Then
                        ReDim Preserve IsDimension(LineX)
                        IsDimension(LineX) = True               '表示LineX的尺寸已标注上
                    End If
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(i).Point_ch(0, 0), link(i).Point_ch(0, 1) + d_ref, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(i).Point_ch(0, 0), link(i).Point_ch(0, 1), 0, True, 0, Nothing, 0)
                    Part.SketchAddConstraints "sgMERGEPOINTS"
                    Part.ClearSelection2 True
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(i).Point_ch(0, 0), link(i).Point_ch(0, 1) + d_ref, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(i).Point_ch(0, 0), link(i).Point_ch(0, 1), 0, True, 0, Nothing, 0)
                    Part.SketchAddConstraints "sgMERGEPOINTS"
                    Part.ClearSelection2 True
                    If link(i).PE = False And link(i).RE = False Then           '也就是该②副的空副标记为假时才能删除对应的固定约束
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(i).Point_ch(0, 0), link(i).Point_ch(0, 1), 0, False, 0, Nothing, 0)
                        Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除②副处复合铰链点的固定约束
                        Part.ClearSelection2 True
                    End If
                    If n = 1 Then
                        link(i).ch(0) = False   '清除复合铰链标记
                    End If
                    boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)     '画草图2和3的时候需要再改名称
                    Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
                    myDimension.SystemValue = link(m).L(0) / 1000
                    Part.ClearSelection2 True
                    Exit For
                End If
            Next
            
            
            '这段未验证
            If n < 3 Then           '在草图1、2才执行此操作，防止多加LineX、no_dimen
                For i1 = 1 To m
                    If link(i1).PE Or link(i1).RE Then     '若还有空副就减
                        LineX = LineX - 1
                        no_dimen = no_dimen - 1
                        Exit For
                    ElseIf i1 = m Then
                        For i2 = 1 To m
                            If link(i2).ch(0) Then               '若还有②处复合铰链就减
                                LineX = LineX - 1
                                no_dimen = no_dimen - 1
                                Exit For
                            ElseIf i2 = m Then
                                For i3 = 1 To m
                                    If link(i3).ch(1) Then               '若还有③处复合铰链或者二副构件的尾副是复合铰就减
                                        LineX = LineX - 1
                                        no_dimen = no_dimen - 1
                                        Exit For
                                    ElseIf i3 = m Then
                                        ReDim Preserve undimen(LineX)
                                        For i4 = 3 To LineX
                                            If undimen(i4) > 0 Then          '如果有还未添加尺寸的直线就暂时不减相应尺寸数（前提是程序能够以跳进这个最内层的循环，也就是空副和固定铰链都已经完成）
                                                no_dimen_not_minus = no_dimen_not_minus + 1
                                            ElseIf i4 = LineX Then
                                                no_dimen_not_minus = no_dimen_not_minus + 1: LineX_not_minus = LineX_not_minus + 1        '这里+1是因为此RR（固）副的尺寸数和直线数未减，在End_Link_Judge中减去
                                            End If
                                        Next
                                        For i5 = 1 To m
                                            If link(i5).Line_Unfixed Then     '如果有还需要构造但是还没构造的直线就暂时不减相应直线数和相应的尺寸数（前提是程序能够以跳进这个最内层的循环，也就是空副和固定铰链都已经完成）
                                                If link(i5).D > 0 Then
                                                    LineX_not_minus = LineX_not_minus + 1: no_dimen_not_minus = no_dimen_not_minus + 2      '1、补充直线目前只是三副构件固定P副，这两个变量分别变化1、2
                                                ElseIf link(i5).D = 0 Then
                                                    LineX_not_minus = LineX_not_minus + 1: no_dimen_not_minus = no_dimen_not_minus + 1      '2、补充直线目前只是三副构件固定P副，这两个变量同时变化1
                                                End If
                                            End If
                                        Next
                                    End If
                                Next
                            End If
                        Next
                    End If
                Next
            End If
            
            
            End_Link_Judge
        ElseIf link(m).Empty_junction_num > 0 Then      '尾副与某 空余R副 配合
            For i = 1 To m - 1
                If link(i).Empty_num = link(m).Empty_junction_num Then
                    Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) + d_ref, 0#, link(i).Point_Empty(0), link(i).Point_Empty(1) + 2 * d_ref, 0#)
                    Part.ClearSelection2 True
                    LineX = LineX + 1
                    If Xr > 0 Or Yr > 0 Then          '添加“替换”待求构件的辅助尺寸
                        If n = 3 Then                  '仅在草图3里操作
                            TMP_Cancel_fixed
                                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                                Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定首副点
                                Part.ClearSelection2 True
                            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(i).Point_Empty(0), link(i).Point_Empty(1) + 2 * d_ref, 0, False, 0, Nothing, 0)
                            Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定尾副点
                            Part.ClearSelection2 True
                            boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                            boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0.05, 0, True, 0, Nothing, 0)
                            Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2 - link(m).L(0) / 2000, -d_ref, 0)
                            Part.ClearSelection2 True
                            no_dimen = no_dimen + 1: Xa(0) = no_dimen           '添加了Xa(0)
                            boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0.05, 0, 0, False, 0, Nothing, 0)
                            boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                            Set myDisplayDim = Part.AddDimension2(-2 * d_ref, (Point_tail(1) + d_ref) / 2, 0)
                            Part.ClearSelection2 True
                            no_dimen = no_dimen + 1: Ya(0) = no_dimen           '添加了Ya(0)
                            no_dimen_Shift = no_dimen_Shift + 2
                            boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(i).Point_Empty(0), link(i).Point_Empty(1) + 2 * d_ref, 0, True, 0, Nothing, 0)
                            Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2, -2 * d_ref, 0)
                            Part.ClearSelection2 True
                            no_dimen = no_dimen + 1: Xa(1) = no_dimen           '添加了Xa(1)
                            boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(i).Point_Empty(0), link(i).Point_Empty(1) + 2 * d_ref, 0, True, 0, Nothing, 0)
                            Set myDisplayDim = Part.AddDimension2(-3 * d_ref, Point_tail(1) / 2, 0)
                            Part.ClearSelection2 True
                            no_dimen = no_dimen + 1: Ya(1) = no_dimen            '添加了Ya(1)
                            no_dimen_Shift = no_dimen_Shift + 2
                                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                                Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除首副点固定约束
                                Part.ClearSelection2 True
                            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(i).Point_Empty(0), link(i).Point_Empty(1) + 2 * d_ref, 0, False, 0, Nothing, 0)
                            Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除尾副点固定约束
                            Part.ClearSelection2 True
                            TMP_Cancel_fixed_Recover
                            Xr = 0: Yr = 0
                            dimen_tobe_Delete(0) = no_dimen - no_dimen_Shift + 1            '此数值是对于草图1/2来说的
                        End If
                    End If
                    
                    
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1), 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                    Part.SketchAddConstraints "sgMERGEPOINTS"
                    Part.ClearSelection2 True
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2 + link(i).Point_Empty(0) / 2, (Point_tail(1) + link(i).Point_Empty(1) + d_ref) / 2, 0)
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1
                    If n = 1 Then
                        ReDim Preserve IsDimension(LineX)
                        IsDimension(LineX) = True               '表示LineX的尺寸已标注上
                    End If
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(i).Point_Empty(0), link(i).Point_Empty(1) + d_ref, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(i).Point_Empty(0), link(i).Point_Empty(1), 0, True, 0, Nothing, 0)
                    Part.SketchAddConstraints "sgMERGEPOINTS"
                    Part.ClearSelection2 True
                    If link(i).ch(0) = False Then           '该空副复合铰链标记为假才可以删除其固定约束
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(i).Point_Empty(0), link(i).Point_Empty(1), 0, False, 0, Nothing, 0)
                        Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除空余副处的固定约束
                        Part.ClearSelection2 True
                    End If
                    If n = 1 Then
                        link(i).RE = False       '清除空余副标记
                    End If
                    boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)     '画草图2和3的时候需要再改名称
                    Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
                    myDimension.SystemValue = link(m).L(0) / 1000
                    Part.ClearSelection2 True
                    Exit For
                End If
            Next
            
            
            '这段未验证
            If n < 3 Then           '在草图1、2才执行此操作，防止多加LineX、no_dimen
                For i1 = 1 To m
                    If link(i1).PE Or link(i1).RE Then     '若还有空副就减
                        LineX = LineX - 1
                        no_dimen = no_dimen - 1
                        Exit For
                    ElseIf i1 = m Then
                        For i2 = 1 To m
                            If link(i2).ch(0) Then               '若还有②处复合铰链就减
                                LineX = LineX - 1
                                no_dimen = no_dimen - 1
                                Exit For
                            ElseIf i2 = m Then
                                For i3 = 1 To m
                                    If link(i3).ch(1) Then               '若还有③处复合铰链或者二副构件的尾副是复合铰就减
                                        LineX = LineX - 1
                                        no_dimen = no_dimen - 1
                                        Exit For
                                    ElseIf i3 = m Then
                                        ReDim Preserve undimen(LineX)
                                        For i4 = 3 To LineX
                                            If undimen(i4) > 0 Then          '如果有还未添加尺寸的直线就暂时不减相应尺寸数（前提是程序能够以跳进这个最内层的循环，也就是空副和固定铰链都已经完成）
                                                no_dimen_not_minus = no_dimen_not_minus + 1
                                            ElseIf i4 = LineX Then
                                                no_dimen_not_minus = no_dimen_not_minus + 1: LineX_not_minus = LineX_not_minus + 1        '这里+1是因为此RR（固）副的尺寸数和直线数未减，在End_Link_Judge中减去
                                            End If
                                        Next
                                        For i5 = 1 To m
                                            If link(i5).Line_Unfixed Then     '如果有还需要构造但是还没构造的直线就暂时不减相应直线数和相应的尺寸数（前提是程序能够以跳进这个最内层的循环，也就是空副和固定铰链都已经完成）
                                                If link(i5).D > 0 Then
                                                    LineX_not_minus = LineX_not_minus + 1: no_dimen_not_minus = no_dimen_not_minus + 2      '1、补充直线目前只是三副构件固定P副，这两个变量分别变化1、2
                                                ElseIf link(i5).D = 0 Then
                                                    LineX_not_minus = LineX_not_minus + 1: no_dimen_not_minus = no_dimen_not_minus + 1      '2、补充直线目前只是三副构件固定P副，这两个变量同时变化1
                                                End If
                                            End If
                                        Next
                                    End If
                                Next
                            End If
                        Next
                    End If
                Next
            End If
            
            
            End_Link_Judge
        End If
    ElseIf link(m).PorR(1) = 1 Then         '判断为RP副
        If link(m).L(0) = 0 Then            'R与P重合
            Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) + d_ref, 0#, Point_tail(0) + 0.045, Point_tail(1) + d_ref, 0#)
            Part.ClearSelection2 True
            LineX = LineX + 1
            If Xr > 0 Or Yr > 0 Then          '添加“替换”待求构件的辅助尺寸
                If n = 3 Then                  '仅在草图3里操作
                    Equal_tobe_Delete = LineX
                    TMP_Cancel_fixed
                    If m > 1 Then               '第二构件不操作（因为此为第二构件时 Xa（0）添加不上）
                            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                            Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定首副点
                            Part.ClearSelection2 True
                    End If
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + 0.045, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                    Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定尾副点
                    Part.ClearSelection2 True
                    If m > 1 Then               '第二构件不操作（因为此为第二构件时 Xa（0）添加不上）
                        boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                        boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0.05, 0, True, 0, Nothing, 0)
                        Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2 - link(m).L(0) / 2000, -d_ref, 0)
                        Part.ClearSelection2 True
                        no_dimen = no_dimen + 1: Xa(0) = no_dimen           '添加了Xa(0)
                        boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0.05, 0, 0, False, 0, Nothing, 0)
                        boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                        Set myDisplayDim = Part.AddDimension2(-2 * d_ref, (Point_tail(1) + d_ref) / 2, 0)
                        Part.ClearSelection2 True
                        no_dimen = no_dimen + 1: Ya(0) = no_dimen           '添加了Ya(0)
                        no_dimen_Shift = no_dimen_Shift + 2
                    End If
                    boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + 0.045, Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2, -2 * d_ref, 0)
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1: Xa(1) = no_dimen           '添加了Xa(1)
                    boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + 0.045, Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(-3 * d_ref, Point_tail(1) / 2, 0)
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1: Ya(1) = no_dimen            '添加了Ya(1)
                    no_dimen_Shift = no_dimen_Shift + 2
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                        Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除首副点固定约束
                        Part.ClearSelection2 True
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + 0.045, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                    Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除尾副点固定约束
                    Part.ClearSelection2 True
                    TMP_Cancel_fixed_Recover
                    Xr = 0: Yr = 0
                    'dimen_tobe_Delete(0) = no_dimen - no_dimen_Shift + 1            '此数值是对于草图1/2来说的     这个这里用不上
                End If
            End If
            
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1), 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgSAMELENGTH"                 '添加P副与参考P副直线的相等约束
            Part.ClearSelection2 True
            If n = 1 Then
                ReDim Preserve IsDimension(LineX)
                IsDimension(LineX) = True               '看作P副直线的尺寸已标注上
            End If
            If link(m).Empty_junction_num = 0 Then          '未与空P副配合
                If n < 3 Then
                    LineX = LineX - 1
                End If
                If n = 3 Then
                    Point_tail(0) = Point_tail(0) + 0.05             '跳转尾副点
                End If
            ElseIf link(m).Empty_junction_num > 0 Then         '与空P副重合
                For i = 1 To m - 1
                    If link(i).Empty_num = link(m).Empty_junction_num Then
                        boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                        boolstatus = Part.Extension.SelectByID2("Line" & link(i).Line_Empty, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                        Part.SketchAddConstraints "sgCOLINEAR"                 '添加P副与对应空P副的共线约束
                        Part.ClearSelection2 True
                        If n = 3 Then
                            link(i).PE = False       '清除空余副标记
                        End If
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(i).Point_Empty(0), link(i).Point_Empty(1), 0, False, 0, Nothing, 0)
                        Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除空余副处的固定约束
                        Part.ClearSelection2 True
                        Exit For
                    End If
                Next
                
                
                '这段未验证
                If n < 3 Then           '在草图1、2才执行此操作，防止多加LineX、no_dimen
                    For i1 = 1 To m
                        If link(i1).PE Or link(i1).RE Then     '若还有空副就减
                            LineX = LineX - 1
                            Exit For
                        ElseIf i1 = m Then
                            For i2 = 1 To m
                                If link(i2).ch(0) Then               '若还有②处复合铰链就减
                                    LineX = LineX - 1
                                    Exit For
                                ElseIf i2 = m Then
                                    For i3 = 1 To m
                                        If link(i3).ch(1) Then               '若还有③处复合铰链或者二副构件的尾副是复合铰就减
                                            LineX = LineX - 1
                                            Exit For
                                        ElseIf i3 = m Then
                                            ReDim Preserve undimen(LineX)
                                            For i4 = 3 To LineX
                                                If undimen(i4) > 0 Then          '如果有还未添加尺寸的直线就暂时不减相应尺寸数（前提是程序能够以跳进这个最内层的循环，也就是空副和固定铰链都已经完成）
                                                    no_dimen_not_minus = no_dimen_not_minus + 1
                                                ElseIf i4 = LineX Then
                                                    no_dimen_not_minus = no_dimen_not_minus + 1: LineX_not_minus = LineX_not_minus + 1        '这里+1是因为此RR（固）副的尺寸数和直线数未减，在End_Link_Judge中减去
                                                End If
                                            Next
                                            For i5 = 1 To m
                                                If link(i5).Line_Unfixed Then     '如果有还需要构造但是还没构造的直线就暂时不减相应直线数和相应的尺寸数（前提是程序能够以跳进这个最内层的循环，也就是空副和固定铰链都已经完成）
                                                    If link(i5).D > 0 Then
                                                        LineX_not_minus = LineX_not_minus + 1: no_dimen_not_minus = no_dimen_not_minus + 2      '1、补充直线目前只是三副构件固定P副，这两个变量分别变化1、2
                                                    ElseIf link(i5).D = 0 Then
                                                        LineX_not_minus = LineX_not_minus + 1: no_dimen_not_minus = no_dimen_not_minus + 1      '2、补充直线目前只是三副构件固定P副，这两个变量同时变化1
                                                    End If
                                                End If
                                            Next
                                        End If
                                    Next
                                End If
                            Next
                        End If
                    Next
                End If
                
                
                End_Link_Judge
            End If
        ElseIf link(m).L(0) <> 0 Then       'R与P 不 重合
            Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) + d_ref, 0#, Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0#)
            Part.ClearSelection2 True
            LineX = LineX + 1
            If Xr > 0 Or Yr > 0 Then          '添加“替换”待求构件的辅助尺寸
                If n = 3 Then                  '仅在草图3里操作
                    TMP_Cancel_fixed
                    If m > 1 Then               '第二构件不操作（因为此为第二构件时 Xa（0）添加不上）
                            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                            Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定首副点
                            Part.ClearSelection2 True
                    End If
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                    Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定尾副点
                    Part.ClearSelection2 True
                    If m > 1 Then               '第二构件不操作（因为此为第二构件时 Xa（0）添加不上）
                        boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                        boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0.05, 0, True, 0, Nothing, 0)
                        Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2 - link(m).L(0) / 2000, -d_ref, 0)
                        Part.ClearSelection2 True
                        no_dimen = no_dimen + 1: Xa(0) = no_dimen           '添加了Xa(0)
                        boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0.05, 0, 0, False, 0, Nothing, 0)
                        boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                        Set myDisplayDim = Part.AddDimension2(-2 * d_ref, (Point_tail(1) + d_ref) / 2, 0)
                        Part.ClearSelection2 True
                        no_dimen = no_dimen + 1: Ya(0) = no_dimen           '添加了Ya(0)
                        no_dimen_Shift = no_dimen_Shift + 2
                    End If
                    boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2, -2 * d_ref, 0)
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1: Xa(1) = no_dimen           '添加了Xa(1)
                    boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(-3 * d_ref, Point_tail(1) / 2, 0)
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1: Ya(1) = no_dimen            '添加了Ya(1)
                    no_dimen_Shift = no_dimen_Shift + 2
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                        Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除首副点固定约束
                        Part.ClearSelection2 True
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                    Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除尾副点固定约束
                    Part.ClearSelection2 True
                    TMP_Cancel_fixed_Recover
                    Xr = 0: Yr = 0
                    dimen_tobe_Delete(0) = no_dimen - no_dimen_Shift + 1            '此数值是对于草图1/2来说的
                End If
            End If
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1), 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            Set myDisplayDim = Part.AddDimension2(Point_tail(0) + link(m).L(0) / 2000, Point_tail(1) + d_ref, 0)
            Part.ClearSelection2 True
            no_dimen = no_dimen + 1
            ReDim Preserve IsDimension(LineX)
            IsDimension(LineX) = True               '表示LineX的尺寸已标注上
            Set skSegment = Part.SketchManager.CreateLine(Point_tail(0) + link(m).L(0) / 1000 + d_ref, Point_tail(1), 0#, Point_tail(0) + link(m).L(0) / 1000 + d_ref, Point_tail(1) - d_ref, 0#)
            Part.ClearSelection2 True
            LineX = LineX + 1
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1), 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000 + d_ref, Point_tail(1), 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            ReDim Preserve IsDimension(LineX)
            IsDimension(LineX) = True               '看作P副直线的尺寸已标注上
            boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgPERPENDICULAR"                 '添加P副与“长度1”直线的垂直约束
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgSAMELENGTH"                 '添加P副与参考P副直线的相等约束
            Part.ClearSelection2 True
            If link(m).Empty_junction_num = 0 Then
                            If n < 3 Then                       '在草图1、2才执行此操作，防止多加LineX
                                LineX = LineX - 2: no_dimen = no_dimen - 1
                            End If
            ElseIf link(m).Empty_junction_num > 0 Then         '与空P副重合
                For i = 1 To m - 1
                    If link(i).Empty_num = link(m).Empty_junction_num Then
                        boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                        boolstatus = Part.Extension.SelectByID2("Line" & link(i).Line_Empty, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                        Part.SketchAddConstraints "sgCOLINEAR"                 '添加P副与对应空P副的共线约束
                        Part.ClearSelection2 True
                        If n = 3 Then
                            link(i).PE = False       '清除空余副标记
                        End If
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(i).Point_Empty(0), link(i).Point_Empty(1), 0, False, 0, Nothing, 0)
                        Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除空余副处的固定约束
                        Part.ClearSelection2 True
                        Exit For
                    End If
                Next
                
                '这段未验证
                If n < 3 Then           '在草图1、2才执行此操作，防止多加LineX、no_dimen
                    For i1 = 1 To m
                        If link(i1).PE Or link(i1).RE Then     '若还有空副就减
                            LineX = LineX - 2
                            no_dimen = no_dimen - 1
                            Exit For
                        ElseIf i1 = m Then
                            For i2 = 1 To m
                                If link(i2).ch(0) Then               '若还有②处复合铰链就减
                                    LineX = LineX - 2
                                    no_dimen = no_dimen - 1
                                    Exit For
                                ElseIf i2 = m Then
                                    For i3 = 1 To m
                                        If link(i3).ch(1) Then               '若还有③处复合铰链或者二副构件的尾副是复合铰就减
                                            LineX = LineX - 2
                                            no_dimen = no_dimen - 1
                                            Exit For
                                        ElseIf i3 = m Then
                                            ReDim Preserve undimen(LineX)
                                            For i4 = 3 To LineX
                                                If undimen(i4) > 0 Then          '如果有还未添加尺寸的直线就暂时不减相应尺寸数（前提是程序能够以跳进这个最内层的循环，也就是空副和固定铰链都已经完成）
                                                    no_dimen_not_minus = no_dimen_not_minus + 1
                                                ElseIf i4 = LineX Then
                                                    no_dimen_not_minus = no_dimen_not_minus + 1: LineX_not_minus = LineX_not_minus + 1        '这里+1是因为此RR（固）副的尺寸数和直线数未减，在End_Link_Judge中减去
                                                End If
                                            Next
                                            For i5 = 1 To m
                                                If link(i5).Line_Unfixed Then     '如果有还需要构造但是还没构造的直线就暂时不减相应直线数和相应的尺寸数（前提是程序能够以跳进这个最内层的循环，也就是空副和固定铰链都已经完成）
                                                    If link(i5).D > 0 Then
                                                        LineX_not_minus = LineX_not_minus + 1: no_dimen_not_minus = no_dimen_not_minus + 2      '1、补充直线目前只是三副构件固定P副，这两个变量分别变化1、2
                                                    ElseIf link(i5).D = 0 Then
                                                        LineX_not_minus = LineX_not_minus + 1: no_dimen_not_minus = no_dimen_not_minus + 1      '2、补充直线目前只是三副构件固定P副，这两个变量同时变化1
                                                    End If
                                                End If
                                            Next
                                        End If
                                    Next
                                End If
                            Next
                        End If
                    Next
                End If
                
                
                End_Link_Judge
            End If

            If n = 3 Then       '在草图3才执行此操作
                Point_tail(0) = Point_tail(0) + link(m).L(0) / 1000             '跳转尾副点
                Point_tail(1) = Point_tail(1)
            End If
        End If
    End If
ElseIf link(m).PorR(0) = 1 Then           '判断首副为P
    If link(m).PorR(1) = 2 Then             '为PR构件
        If link(m).L(0) = 0 Then               '判断P与R重合
            If link(m - 1).Xf Or link(m - 1).P_fixed Then                 '上一构件尾副为固定副，此构件为跳转到空副为P副的情况
            
            
                If n = 1 Then
                    '/******测试跳转到的P副相对于X轴的角度（<90时其后的P副平着画，>90时竖着画)
                    boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 10, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Line" & Line_Empty, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(10, 1, 0)      '添加上P副的测试角度尺寸
                    Part.ClearSelection2 True
                    boolstatus = Part.Extension.SelectByID2("D" & no_dimen + 1 & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)
                    Set myDimension = Part.Parameter("D" & no_dimen + 1 & "@草图" & n & "@求解模块1.SLDPRT")
                    If myDimension.SystemValue > pi / 2 Then
                        UorT = True
                    Else
                        UorT = False
                    End If
                    Part.EditUndo2 1        '回撤一步，取消刚才添加的判断尺寸
                    Part.ClearSelection2 True                                   '******/
                End If
                
                
            End If
            If UorT = True Then                 '需要竖着画
                Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) + d_ref, 0#, Point_tail(0), Point_tail(1) + d_ref + 0.05, 0#)
                Part.ClearSelection2 True
                LineX = LineX + 1
                If Xr > 0 Or Yr > 0 Then          '添加“替换”待求构件的辅助尺寸
                    If n = 3 Then                  '仅在草图3里操作
                        Equal_tobe_Delete = LineX
                        TMP_Cancel_fixed
                        If m > 1 Then               '第二构件不操作（因为此为第二构件时 Xa（0）添加不上）
                                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                                Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定首副点
                                Part.ClearSelection2 True
                        End If
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref + 0.05, 0, False, 0, Nothing, 0)
                        Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定尾副点
                        Part.ClearSelection2 True
                        If m > 1 Then               '第二构件不操作（因为此为第二构件时 Xa（0）添加不上）
                            boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                            boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0.05, 0, True, 0, Nothing, 0)
                            Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2 - link(m).L(0) / 2000, -d_ref, 0)
                            Part.ClearSelection2 True
                            no_dimen = no_dimen + 1: Xa(0) = no_dimen           '添加了Xa(0)
                            boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0.05, 0, 0, False, 0, Nothing, 0)
                            boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                            Set myDisplayDim = Part.AddDimension2(-2 * d_ref, (Point_tail(1) + d_ref) / 2, 0)
                            Part.ClearSelection2 True
                            no_dimen = no_dimen + 1: Ya(0) = no_dimen           '添加了Ya(0)
                            no_dimen_Shift = no_dimen_Shift + 2
                        End If
                        boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref + 0.05, 0, True, 0, Nothing, 0)
                        Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2, -2 * d_ref, 0)
                        Part.ClearSelection2 True
                        no_dimen = no_dimen + 1: Xa(1) = no_dimen           '添加了Xa(1)
                        boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref + 0.05, 0, True, 0, Nothing, 0)
                        Set myDisplayDim = Part.AddDimension2(-3 * d_ref, Point_tail(1) / 2, 0)
                        Part.ClearSelection2 True
                        no_dimen = no_dimen + 1: Ya(1) = no_dimen            '添加了Ya(1)
                        no_dimen_Shift = no_dimen_Shift + 2
                            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                            Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除首副点固定约束
                            Part.ClearSelection2 True
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref + 0.05, 0, False, 0, Nothing, 0)
                        Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除尾副点固定约束
                        Part.ClearSelection2 True
                        TMP_Cancel_fixed_Recover
                        Xr = 0: Yr = 0
                    End If
                End If
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref + 0.05, 0, False, 0, Nothing, 0)
                Part.SketchAddConstraints "sgFIXED"                                                                '暂时固定上端点
                Part.ClearSelection2 True
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgSAMELENGTH"                 '添加P副与参考P副直线的相等约束
                Part.ClearSelection2 True
                If n = 1 Then
                    ReDim Preserve IsDimension(LineX)
                    IsDimension(LineX) = True               '看作P副直线的尺寸已标注上
                End If
                If link(m - 1).Xf Or link(m - 1).P_fixed Then                 '上一构件尾副为固定副，此构件为跳转到空副为P副的情况
                    boolstatus = Part.Extension.SelectByID2("Line" & Line_Empty, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                    Part.SketchAddConstraints "sgCOLINEAR"                   '选择该直线与正确的空余P副直线共线
                    Part.ClearSelection2 True
                Else
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                    Part.SketchAddConstraints "sgCOLINEAR"                   '选择该直线与上一P副直线共线
                    Part.ClearSelection2 True
                End If
                If n = 1 Then       '在草图1才执行此操作
                    TMP_fixed(0) = Point_tail(0)
                    TMP_fixed(1) = Point_tail(1) + d_ref + 0.05         '记录下暂时固定点，在End_Link_Judge中再判断是否删除其固定
                End If
                If link(m).ch(1) = True Then                       '是复合铰链就记录坐标
                    Isch_TMP_fixed = True
                    If n = 1 Then       '在草图1才执行此操作
                        link(m).Point_ch(1, 0) = Point_tail(0)
                        link(m).Point_ch(1, 1) = Point_tail(1) + d_ref + 0.05
                    End If
                End If
                If n < 3 Then
                    LineX = LineX - 1
                End If
                If n = 3 Then       '在草图3才执行此操作
                    Point_tail(0) = Point_tail(0)             '特殊跳转尾副点
                    Point_tail(1) = Point_tail(1) + d_ref + 0.05
                End If
            Else                    '需要横着画
                Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) + d_ref, 0#, Point_tail(0) + 0.05, Point_tail(1) + d_ref, 0#)
                Part.ClearSelection2 True
                LineX = LineX + 1
                If Xr > 0 Or Yr > 0 Then          '添加“替换”待求构件的辅助尺寸
                    If n = 3 Then                  '仅在草图3里操作
                        Equal_tobe_Delete = LineX
                        TMP_Cancel_fixed
                        If m > 1 Then               '第二构件不操作（因为此为第二构件时 Xa（0）添加不上）
                                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                                Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定首副点
                                Part.ClearSelection2 True
                        End If
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + 0.05, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                        Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定尾副点
                        Part.ClearSelection2 True
                        If m > 1 Then               '第二构件不操作（因为此为第二构件时 Xa（0）添加不上）
                            boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                            boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0.05, 0, True, 0, Nothing, 0)
                            Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2 - link(m).L(0) / 2000, -d_ref, 0)
                            Part.ClearSelection2 True
                            no_dimen = no_dimen + 1: Xa(0) = no_dimen           '添加了Xa(0)
                            boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0.05, 0, 0, False, 0, Nothing, 0)
                            boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                            Set myDisplayDim = Part.AddDimension2(-2 * d_ref, (Point_tail(1) + d_ref) / 2, 0)
                            Part.ClearSelection2 True
                            no_dimen = no_dimen + 1: Ya(0) = no_dimen           '添加了Ya(0)
                            no_dimen_Shift = no_dimen_Shift + 2
                        End If
                        boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + 0.05, Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                        Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2, -2 * d_ref, 0)
                        Part.ClearSelection2 True
                        no_dimen = no_dimen + 1: Xa(1) = no_dimen           '添加了Xa(1)
                        boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + 0.05, Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                        Set myDisplayDim = Part.AddDimension2(-3 * d_ref, Point_tail(1) / 2, 0)
                        Part.ClearSelection2 True
                        no_dimen = no_dimen + 1: Ya(1) = no_dimen            '添加了Ya(1)
                        no_dimen_Shift = no_dimen_Shift + 2
                            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                            Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除首副点固定约束
                            Part.ClearSelection2 True
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + 0.05, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                        Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除尾副点固定约束
                        Part.ClearSelection2 True
                        TMP_Cancel_fixed_Recover
                        Xr = 0: Yr = 0
                    End If
                End If
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + 0.05, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                Part.SketchAddConstraints "sgFIXED"                                                                '暂时固定右端点
                Part.ClearSelection2 True
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgSAMELENGTH"                 '添加P副与参考P副直线的相等约束
                Part.ClearSelection2 True
                If n = 1 Then
                    ReDim Preserve IsDimension(LineX)
                    IsDimension(LineX) = True               '看作P副直线的尺寸已标注上
                End If
                If link(m - 1).Xf Or link(m - 1).P_fixed Then                 '上一构件尾副为固定副，此构件为跳转到空副为P副的情况
                    boolstatus = Part.Extension.SelectByID2("Line" & Line_Empty, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                    Part.SketchAddConstraints "sgCOLINEAR"                   '选择该直线与正确的空余P副直线共线
                    Part.ClearSelection2 True
                Else
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                    Part.SketchAddConstraints "sgCOLINEAR"                   '选择该直线与上一P副直线共线
                    Part.ClearSelection2 True
                End If
                If link(m - 1).Xf = 0 And link(m - 1).P_fixed = False Then             '上一构件尾副不是固定副
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + 0.05, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                    Part.SketchConstraintsDel 0, "sgFIXED"                  '删除上面辅助的固定约束
                    Part.ClearSelection2 True
                End If
                If n = 1 Then       '在草图1才执行此操作
                    TMP_fixed(0) = Point_tail(0) + 0.05
                    TMP_fixed(1) = Point_tail(1) + d_ref                '记录下暂时固定点，在End_Link_Judge中再判断是否删除其固定
                End If
                If link(m).ch(1) = True Then                      '是复合铰链就记录坐标
                    Isch_TMP_fixed = True
                    If n = 1 Then       '在草图1才执行此操作
                        link(m).Point_ch(1, 0) = Point_tail(0) + 0.05
                        link(m).Point_ch(1, 1) = Point_tail(1) + d_ref
                    End If
                End If
                If n < 3 Then
                    LineX = LineX - 1
                End If
                If n = 3 Then       '在草图3才执行此操作
                    Point_tail(0) = Point_tail(0) + 0.05             '特殊跳转尾副点
                    Point_tail(1) = Point_tail(1) + d_ref
                End If
            End If
            If n = 3 Then
                UorT = False
            End If
        ElseIf link(m).L(0) <> 0 Then        '判断P与R 不 重合
            Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) + d_ref, 0#, Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0#)
            Part.ClearSelection2 True
            LineX = LineX + 1
            If Xr > 0 Or Yr > 0 Then          '添加“替换”待求构件的辅助尺寸
                If n = 3 Then                  '仅在草图3里操作
                    TMP_Cancel_fixed
                    If m > 1 Then               '第二构件不操作（因为此为第二构件时 Xa（0）添加不上）
                            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                            Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定首副点
                            Part.ClearSelection2 True
                    End If
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                    Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定尾副点
                    Part.ClearSelection2 True
                    If m > 1 Then               '第二构件不操作（因为此为第二构件时 Xa（0）添加不上）
                        boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                        boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0.05, 0, True, 0, Nothing, 0)
                        Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2 - link(m).L(0) / 2000, -d_ref, 0)
                        Part.ClearSelection2 True
                        no_dimen = no_dimen + 1: Xa(0) = no_dimen           '添加了Xa(0)
                        boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0.05, 0, 0, False, 0, Nothing, 0)
                        boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                        Set myDisplayDim = Part.AddDimension2(-2 * d_ref, (Point_tail(1) + d_ref) / 2, 0)
                        Part.ClearSelection2 True
                        no_dimen = no_dimen + 1: Ya(0) = no_dimen           '添加了Ya(0)
                        no_dimen_Shift = no_dimen_Shift + 2
                    End If
                    boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2, -2 * d_ref, 0)
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1: Xa(1) = no_dimen           '添加了Xa(1)
                    boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(-3 * d_ref, Point_tail(1) / 2, 0)
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1: Ya(1) = no_dimen            '添加了Ya(1)
                    no_dimen_Shift = no_dimen_Shift + 2
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                        Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除首副点固定约束
                        Part.ClearSelection2 True
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                    Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除尾副点固定约束
                    Part.ClearSelection2 True
                    TMP_Cancel_fixed_Recover
                    Xr = 0: Yr = 0
                    dimen_tobe_Delete(0) = no_dimen - no_dimen_Shift + 1            '此数值是对于草图1/2来说的
                End If
            End If
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
            Part.SketchAddConstraints "sgFIXED"                                                                '暂时固定右端点
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            Set myDisplayDim = Part.AddDimension2(Point_tail(0) + link(m).L(0) / 2000, Point_tail(1) + 2 * d_ref, 0)
            Part.ClearSelection2 True
            no_dimen = no_dimen + 1
            If n = 1 Then
                ReDim Preserve IsDimension(LineX)
                IsDimension(LineX) = True               '表示LineX的尺寸已标注上
            End If
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgCOINCIDENT"            '添加左端点与上一P副直线的重合约束
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgPERPENDICULAR"                     '添加该直线与上一P副的垂直约束
            Part.ClearSelection2 True
            If link(m).ch(1) = False Then                               '不是复合铰链就删这个固定约束
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                Part.SketchConstraintsDel 0, "sgFIXED"                  '删除上面辅助的固定约束
                Part.ClearSelection2 True
            Else                                                        '是复合铰链就不删约束且记录坐标
                If n = 1 Then       '在草图1才执行此操作
                    link(m).Point_ch(1, 0) = Point_tail(0) + link(m).L(0) / 1000
                    link(m).Point_ch(1, 1) = Point_tail(1) + d_ref
                End If
            End If
            If n < 3 Then
                    LineX = LineX - 1: no_dimen = no_dimen - 1
            End If
            If n = 3 Then       '在草图3才执行此操作
                Point_tail(0) = Point_tail(0) + link(m).L(0) / 1000
                Point_tail(1) = Point_tail(1) + d_ref           '特殊跳转尾副点
            End If
        End If
        
    ElseIf link(m).PorR(1) = 1 Then         '为PP构件
        Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) + d_ref, 0#, Point_tail(0) + 0.1, Point_tail(1) + d_ref, 0#)
        Part.ClearSelection2 True
        LineX = LineX + 1
        If Xr > 0 Or Yr > 0 Then          '添加“替换”待求构件的辅助尺寸
            If n = 3 Then                  '仅在草图3里操作
                TMP_Cancel_fixed
                If m > 1 Then               '第二构件不操作（因为此为第二构件时 Xa（0）添加不上）
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                        Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定首副点
                        Part.ClearSelection2 True
                End If
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + 0.1, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定尾副点
                Part.ClearSelection2 True
                If m > 1 Then               '第二构件不操作（因为此为第二构件时 Xa（0）添加不上）
                    boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0.05, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2 - link(m).L(0) / 2000, -d_ref, 0)
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1: Xa(0) = no_dimen           '添加了Xa(0)
                    boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0.05, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(-2 * d_ref, (Point_tail(1) + d_ref) / 2, 0)
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1: Ya(0) = no_dimen           '添加了Ya(0)
                    no_dimen_Shift = no_dimen_Shift + 2
                End If
                boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + 0.1, Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2, -2 * d_ref, 0)
                Part.ClearSelection2 True
                no_dimen = no_dimen + 1: Xa(1) = no_dimen           '添加了Xa(1)
                boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + 0.1, Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                Set myDisplayDim = Part.AddDimension2(-3 * d_ref, Point_tail(1) / 2, 0)
                Part.ClearSelection2 True
                no_dimen = no_dimen + 1: Ya(1) = no_dimen            '添加了Ya(1)
                no_dimen_Shift = no_dimen_Shift + 2
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                    Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除首副点固定约束
                    Part.ClearSelection2 True
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + 0.1, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除尾副点固定约束
                Part.ClearSelection2 True
                TMP_Cancel_fixed_Recover
                Xr = 0: Yr = 0
                dimen_tobe_Delete(0) = no_dimen - no_dimen_Shift + 1            '此数值是对于草图1/2来说的
            End If
        End If
        boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
        Set myDisplayDim = Part.AddDimension2(Point_tail(0) + 0.05, Point_tail(1) + d_ref, 0)
        Part.ClearSelection2 True
        no_dimen = no_dimen + 1
        If n = 1 Then
            ReDim Preserve IsDimension(LineX)
            IsDimension(LineX) = True               '表示LineX的尺寸已标注上
        End If
        Set skSegment = Part.SketchManager.CreateLine(Point_tail(0) + 0.1 + d_ref, Point_tail(1) + d_ref, 0#, Point_tail(0) + 0.1 + d_ref, Point_tail(1) + 2 * d_ref, 0#)
        Part.ClearSelection2 True
        LineX = LineX + 1
        If n = 1 Then
            ReDim Preserve IsDimension(LineX)
            IsDimension(LineX) = True               '看作P副直线的尺寸已标注上
        End If
        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + 0.1, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + 0.1 + d_ref, Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
        Part.SketchAddConstraints "sgMERGEPOINTS"
        Part.ClearSelection2 True
        boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
        boolstatus = Part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
        Part.SketchAddConstraints "sgSAMELENGTH"                 '添加P副与参考P副直线的相等约束
        Part.ClearSelection2 True
        boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
        boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
        Set myDisplayDim = Part.AddDimension2(Point_tail(0) + 0.05, Point_tail(1) + d_ref, 0)       '添加上PP副的内部角度尺寸（须做更改）
        Part.ClearSelection2 True
        no_dimen = no_dimen + 1
        boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", -7.75039311480838E-02, -2.34477472857427E-02, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
        Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
        myDimension.SystemValue = link(m).beta(0) / 180 * pi
        Part.ClearSelection2 True
        boolstatus = Part.Extension.SelectByID2("Line" & LineX - 2, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
        boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
        Part.SketchAddConstraints "sgCOLINEAR"                   '选择该直线与上一P副直线共线
        Part.ClearSelection2 True
        If n < 3 Then
            LineX = LineX - 2: no_dimen = no_dimen - 2
        End If
        If n = 3 Then       '在草图3才执行此操作
            Point_tail(0) = Point_tail(0) + 0.1             '为PP副时的特殊跳转尾副点
            Point_tail(1) = Point_tail(1)
        End If
    End If
End If
End Function
Function TLink_with_Pf()
    If link(m).PorR(0) = 2 Then       '首副为R
        If link(m).fixed(1) Then            '固定副为③副
            If n = 1 Then
                num_of_Empty = num_of_Empty + 1
                link(m).Empty_num = num_of_Empty
            End If
            Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) + d_ref, 0#, Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0#)     '长度3直线
            Part.ClearSelection2 True
            LineX = LineX + 1
            
            If Xr > 0 Or Yr > 0 Then          '添加“替换”待求构件的辅助尺寸
                If n = 3 Then                  '仅在草图3里操作
                    TMP_Cancel_fixed
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                    Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定首副点
                    Part.ClearSelection2 True
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                    Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定尾副点
                    Part.ClearSelection2 True
                    boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0.05, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2 - link(m).L(0) / 2000, -d_ref, 0)
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1: Xa(0) = no_dimen           '添加了Xa(0)
                    boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0.05, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(-2 * d_ref, (Point_tail(1) + d_ref) / 2, 0)
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1: Ya(0) = no_dimen           '添加了Ya(0)
                    no_dimen_Shift = no_dimen_Shift + 2
                    boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2, -2 * d_ref, 0)
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1: Xa(1) = no_dimen           '添加了Xa(1)
                    boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(-3 * d_ref, Point_tail(1) / 2, 0)
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1: Ya(1) = no_dimen            '添加了Ya(1)
                    no_dimen_Shift = no_dimen_Shift + 2
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                    Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除首副点固定约束
                    Part.ClearSelection2 True
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                    Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除尾副点固定约束
                    Part.ClearSelection2 True
                    TMP_Cancel_fixed_Recover
                    dimen_tobe_Delete(0) = no_dimen - no_dimen_Shift + 1            '此数值是对于草图1/2来说的
                End If
            End If
            
            boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            Set myDisplayDim = Part.AddDimension2(Point_tail(0) + link(m).L(0) / 2000, Point_tail(1) + d_ref, 0)
            Part.ClearSelection2 True
            no_dimen = no_dimen + 1
            If n = 1 Then
                ReDim Preserve IsDimension(LineX)
                IsDimension(LineX) = True               '表示长度3的尺寸已标注上
            End If
            Set skSegment = Part.SketchManager.CreateLine(Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + 2 * d_ref, 0#, Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + 2 * d_ref + link(m).L(1) / 1000, 0#)     '长度2直线
            Part.ClearSelection2 True
            LineX = LineX + 1
            If link(m).TBS Then
                Get_dimen(0) = LineX
            End If
            If n = 1 Then
                ReDim Preserve undimen(LineX)
                undimen(LineX) = link(m).L(1)           '记录下未标注的长度2
            End If
            Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) + 2 * d_ref, 0#, Point_tail(0), Point_tail(1) + 2 * d_ref + link(m).L(2) / 1000, 0#)         '长度1直线
            Part.ClearSelection2 True
            LineX = LineX + 1
            
            If Xr > 0 Or Yr > 0 Then          '添加“替换”待求构件的辅助尺寸
                If n = 3 Then                  '仅在草图3里操作
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + 2 * d_ref + link(m).L(2) / 1000, 0, False, 0, Nothing, 0)
                        Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定未配合的空副点
                        Part.ClearSelection2 True
                        boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + 2 * d_ref + link(m).L(2) / 1000, 0, False, 0, Nothing, 0)
                        boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0.05, 0, True, 0, Nothing, 0)
                        Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2 - link(m).L(0) / 2000, -3 * d_ref, 0)
                        Part.ClearSelection2 True
                        no_dimen = no_dimen + 1: Xa(2) = no_dimen           '添加了Xa(2)
                        boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0.05, 0, 0, False, 0, Nothing, 0)
                        boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + 2 * d_ref + link(m).L(2) / 1000, 0, True, 0, Nothing, 0)
                        Set myDisplayDim = Part.AddDimension2(-3 * d_ref, (Point_tail(1) + d_ref) / 2, 0)
                        Part.ClearSelection2 True
                        no_dimen = no_dimen + 1: Ya(2) = no_dimen           '添加了Ya(2)
                        no_dimen_Shift = no_dimen_Shift + 2
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + 2 * d_ref + link(m).L(2) / 1000, 0, False, 0, Nothing, 0)
                        Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除未配合的空副点固定约束
                        Part.ClearSelection2 True
                    TMP_Cancel_fixed_Recover
                    Xr = 0: Yr = 0
                    'dimen_tobe_Delete(0) = no_dimen - no_dimen_Shift            '待删除的长度3，此构件暂时没有，最后补加尺寸时才能知道
                    dimen_tobe_Delete(2) = no_dimen - no_dimen_Shift + 1          '待删除的长度1，此数值是对于草图1/2来说的
                End If
            End If
            
            boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            Set myDisplayDim = Part.AddDimension2(Point_tail(0) - d_ref, Point_tail(1) + d_ref + link(m).L(2) / 2000, 0)
            Part.ClearSelection2 True
            no_dimen = no_dimen + 1
            If n = 1 Then
                ReDim Preserve IsDimension(LineX)
                IsDimension(LineX) = True               '表示长度1的尺寸已标注上
            End If
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1), 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1), 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + 2 * d_ref, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Point6", "SKETCHPOINT", Point_tail(0), Point_tail(1) + link(m).L(2) / 1000, 0, False, 0, Nothing, 0)
            Part.SketchAddConstraints "sgFIXED"                                                                '暂时固定空副点。如果这里是复合铰链，那么在从这里开始下一条链或者其他构件与其配合这两者之一第一次发生时，这个固定约束还不能删除，第二次发生两者之一才能删除
            Part.ClearSelection2 True
            If n = 1 Then
                link(m).Point_Empty(0) = Point_tail(0)
                link(m).Point_Empty(1) = Point_tail(1) + link(m).L(2) / 1000            '记录下空副的位置
                ReDim Preserve Point_undimen_ref(1, LineX - 1)                          '这里用LineX-1是因为 三副构件中 这条未标尺寸直线一定是LineX-1
                Point_undimen_ref(0, LineX - 1) = link(m).Point_Empty(0)
                Point_undimen_ref(1, LineX - 1) = link(m).Point_Empty(1)                  '记录一个补加尺寸的参考点
                If link(m).ch(0) Then                                                       '空副是复合铰链就记录坐标
                    link(m).Point_ch(0, 0) = Point_tail(0)
                    link(m).Point_ch(0, 1) = Point_tail(1) + link(m).L(2) / 1000
                End If
            End If
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1), 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + 2 * d_ref, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Point6", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1), 0, False, 0, Nothing, 0)
            Part.SketchAddConstraints "sgFIXED"                                                                '暂时固定尾副点
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + link(m).L(2) / 1000, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + link(m).L(1) / 1000, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1), 0, False, 0, Nothing, 0)
            Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除对应尾副点的固定约束
            Part.ClearSelection2 True
            Set skSegment = Part.SketchManager.CreateLine(Point_tail(0) + link(m).L(0) / 1000 + d_ref, Point_tail(1), 0#, Point_tail(0) + link(m).L(0) / 1000 + d_ref, Point_tail(1) + d_ref, 0#) '尾P副直线（暂时不固定）
            Part.ClearSelection2 True
            LineX = LineX + 1
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000 + d_ref, Point_tail(1), 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1), 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgSAMELENGTH"                 '添加P副与参考P副直线的相等约束
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Line" & LineX - 2, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
            Set myDisplayDim = Part.AddDimension2(Point_tail(0) + link(m).L(0) / 1000 - 0.005, Point_tail(1) + d_ref, 0) '添加固定P副内部角度尺寸（须做更改）
            Part.ClearSelection2 True
            no_dimen = no_dimen + 1
            boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
            Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
            myDimension.SystemValue = link(m).beta(1) / 180 * pi
            link(m).Line_Unfixed = LineX
            If link(m).PorR(2) = 1 Then            '空余副为P副
                Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) + d_ref + link(m).L(2) / 1000, 0#, Point_tail(0) - 0.045, Point_tail(1) + d_ref + link(m).L(2) / 1000, 0#)
                Part.ClearSelection2 True
                LineX = LineX + 1
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgSAMELENGTH"                 '添加P副与参考P副直线的相等约束
                Part.ClearSelection2 True
                If n = 1 Then
                    ReDim Preserve IsDimension(LineX)
                    IsDimension(LineX) = True               '看作P副直线的尺寸已标注上
                    link(m).Line_Empty = LineX              '记录下此空余P的直线序号，方便后续配合时使用
                End If
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + link(m).L(2) / 1000, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref + link(m).L(2) / 1000, 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgMERGEPOINTS"
                Part.ClearSelection2 True
                boolstatus = Part.Extension.SelectByID2("Line" & LineX - 2, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                Set myDisplayDim = Part.AddDimension2(Point_tail(0) - 0.05, Point_tail(1) + link(m).L(2) / 1000 - 0.05, 0)     '添加上P副的内部角度尺寸（须做更改）
                Part.ClearSelection2 True
                no_dimen = no_dimen + 1
                boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
                Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
                myDimension.SystemValue = link(m).beta(2) / 180 * pi
                Part.ClearSelection2 True
            End If
            If n < 3 Then           '在草图1、2才执行此操作，防止多加LineX、no_dimen
                If link(m).PorR(2) = 2 Then         'RRP(固）
                    LineX = LineX - 4
                    no_dimen = no_dimen - 3
                ElseIf link(m).PorR(2) = 1 Then     'RPP(固）
                    LineX = LineX - 5
                    no_dimen = no_dimen - 4
                End If
            End If
        ElseIf link(m).fixed(0) Then    '固定副为②副
            Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) + d_ref, 0#, Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0#)     '长度3直线
            Part.ClearSelection2 True
            LineX = LineX + 1
            boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            Set myDisplayDim = Part.AddDimension2(Point_tail(0) + link(m).L(0) / 2000, Point_tail(1) + d_ref, 0)
            Part.ClearSelection2 True
            no_dimen = no_dimen + 1
            If n = 1 Then
                ReDim Preserve IsDimension(LineX)
                IsDimension(LineX) = True               '表示长度3的尺寸已标注上
            End If
            Set skSegment = Part.SketchManager.CreateLine(Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + 2 * d_ref, 0#, Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + 2 * d_ref + link(m).L(1) / 1000, 0#)     '长度2直线
            Part.ClearSelection2 True
            LineX = LineX + 1
            If n = 1 Then
                ReDim Preserve undimen(LineX)
                undimen(LineX) = link(m).L(1)           '记录下未标注的长度2
            End If
            Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) + 2 * d_ref, 0#, Point_tail(0), Point_tail(1) + 2 * d_ref + link(m).L(2) / 1000, 0#)         '长度1直线
            Part.ClearSelection2 True
            LineX = LineX + 1
            boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            Set myDisplayDim = Part.AddDimension2(Point_tail(0) - d_ref, Point_tail(1) + d_ref + link(m).L(2) / 2000, 0)
            Part.ClearSelection2 True
            no_dimen = no_dimen + 1
            If n = 1 Then
                ReDim Preserve IsDimension(LineX)
                IsDimension(LineX) = True               '表示长度1的尺寸已标注上
            End If
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1), 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1), 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + 2 * d_ref, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) + link(m).L(2) / 1000 + d_ref, 0#, Point_tail(0) - 0.045, Point_tail(1) + link(m).L(2) / 1000 + d_ref, 0#) '②处固定P副直线（暂时不固定）
            Part.ClearSelection2 True
            LineX = LineX + 1
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + link(m).L(2) / 1000 + d_ref, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + link(m).L(2) / 1000, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Point6", "SKETCHPOINT", Point_tail(0), Point_tail(1) + link(m).L(2) / 1000, 0, False, 0, Nothing, 0)
            Part.SketchAddConstraints "sgFIXED"                                                                '暂时固定空副点
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgSAMELENGTH"                 '添加P副与参考P副直线的相等约束
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
            Set myDisplayDim = Part.AddDimension2(Point_tail(0) - d_ref, Point_tail(1) + link(m).L(2) / 1000 - d_ref, 0) '添加固定P副内部的角度尺寸（须做更改）
            Part.ClearSelection2 True
            no_dimen = no_dimen + 1
            boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
            Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
            myDimension.SystemValue = link(m).beta(2) / 180 * pi
            If n = 1 Then
                link(m).Line_Unfixed = LineX
                ReDim Preserve Point_undimen_ref(1, LineX - 1)                          '这里用LineX-1是因为 三副构件中 这条未标尺寸直线一定是LineX-1
                Point_undimen_ref(0, LineX - 1) = Point_tail(0)
                Point_undimen_ref(1, LineX - 1) = Point_tail(1) + link(m).L(2) / 1000                  '记录一个补加尺寸的参考点
            End If
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1), 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + 2 * d_ref, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Point6", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1), 0, False, 0, Nothing, 0)
            Part.SketchAddConstraints "sgFIXED"                                                                '暂时固定尾副点
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + link(m).L(2) / 1000, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + link(m).L(1) / 1000, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + link(m).L(2) / 1000, 0, False, 0, Nothing, 0)
            Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除空副点的固定约束
            Part.ClearSelection2 True
            If link(m).ch(1) = False Then       '尾副不是复合铰链
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1), 0, False, 0, Nothing, 0)
                Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除变化后的捕捉点的固定约束
                Part.ClearSelection2 True
            Else                                '尾副是复合铰链就记录坐标
                link(m).Point_ch(1, 0) = Point_tail(0) + link(m).L(0) / 1000
                link(m).Point_ch(1, 1) = Point_tail(1)
            End If
            If link(m).PorR(1) = 1 Then             '尾副为P副
                Set skSegment = Part.SketchManager.CreateLine(Point_tail(0) + link(m).L(0) / 1000 + d_ref, Point_tail(1), 0#, Point_tail(0) + link(m).L(0) / 1000 + d_ref, Point_tail(1) + 0.045, 0#)
                Part.ClearSelection2 True
                LineX = LineX + 1
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgSAMELENGTH"                 '添加P副与参考P副直线的相等约束
                Part.ClearSelection2 True
                If n = 1 Then
                    ReDim Preserve IsDimension(LineX)
                    IsDimension(LineX) = True               '看作P副直线的尺寸已标注上
                End If
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1), 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000 + d_ref, Point_tail(1), 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgMERGEPOINTS"
                Part.ClearSelection2 True
                boolstatus = Part.Extension.SelectByID2("Line" & LineX - 3, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                Set myDisplayDim = Part.AddDimension2(Point_tail(0) + link(m).L(0) / 1000 - 0.005, Point_tail(1) + d_ref, 0) '添加上P副的内部角度尺寸（须做更改）
                Part.ClearSelection2 True
                no_dimen = no_dimen + 1
                boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
                Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
                myDimension.SystemValue = link(m).beta(1) / 180 * pi
                Part.ClearSelection2 True
            End If
            If n = 3 Then
                Point_tail(0) = Point_tail(0) + link(m).L(0) / 1000                 '特殊跳转捕捉点
            End If
            If n < 3 Then           '在草图1、2才执行此操作，防止多加LineX、no_dimen
                If link(m).PorR(1) = 2 Then         'RP(固）R
                    LineX = LineX - 4
                    no_dimen = no_dimen - 3
                ElseIf link(m).PorR(1) = 1 Then     'RP(固）P
                    LineX = LineX - 5
                    no_dimen = no_dimen - 4
                End If
            End If
        End If
    ElseIf link(m).PorR(0) = 1 Then       '首副为P
        If n = 1 Then
            link(m).Line_Unset = LineX            '记录下未与首副点重合的直线序号，其实是上一构件的尾端P副直线
        End If
        If link(m).fixed(1) Then                '固定副为③副
            If n = 1 Then
                num_of_Empty = num_of_Empty + 1
                link(m).Empty_num = num_of_Empty
            End If
            If link(m - 1).L(0) = 0 Then            '上一尾P副水平
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                Part.SketchAddConstraints "sgVERTICAL2D"
                Part.ClearSelection2 True
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                Part.SketchConstraintsDel 0, "sgVERTICAL2D"                                                             '变换上一P副的位姿
                Part.ClearSelection2 True
            End If
            Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) + d_ref, 0#, Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0#)     '长度3直线
            Part.ClearSelection2 True
            LineX = LineX + 1
            boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            Set myDisplayDim = Part.AddDimension2(Point_tail(0) + link(m).L(0) / 2000, Point_tail(1) + d_ref, 0)
            Part.ClearSelection2 True
            no_dimen = no_dimen + 1
            If n = 1 Then
                ReDim Preserve IsDimension(LineX)
                IsDimension(LineX) = True               '表示长度3的尺寸已标注上
            End If
            boolstatus = Part.Extension.SelectByID2("Point6", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
            Part.SketchAddConstraints "sgFIXED"                                                                '暂时固定首副点
            Part.ClearSelection2 True
            If n = 1 Then
                link(m).Point_unset(0) = Point_tail(0)
                link(m).Point_unset(1) = Point_tail(1) + d_ref          '记录首副点坐标(作最后配合用）
            End If
            boolstatus = Part.Extension.SelectByID2("Point6", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
            Part.SketchAddConstraints "sgFIXED"                                                                '暂时固定尾副点
            Part.ClearSelection2 True
            Set skSegment = Part.SketchManager.CreateLine(Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + 2 * d_ref, 0#, Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + 2 * d_ref + link(m).L(1) / 1000, 0#)     '长度2直线
            Part.ClearSelection2 True
            LineX = LineX + 1
            If n = 1 Then
                ReDim Preserve undimen(LineX)
                undimen(LineX) = link(m).L(1)           '记录下未标注的长度2
            End If
            Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) + 2 * d_ref, 0#, Point_tail(0), Point_tail(1) + 2 * d_ref + link(m).L(2) / 1000, 0#)         '长度1直线
            Part.ClearSelection2 True
            LineX = LineX + 1
            boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            Set myDisplayDim = Part.AddDimension2(Point_tail(0) - d_ref, Point_tail(1) + link(m).L(2) / 2000 + d_ref, 0)
            Part.ClearSelection2 True
            no_dimen = no_dimen + 1
            If n = 1 Then
                ReDim Preserve IsDimension(LineX)
                IsDimension(LineX) = True               '表示长度1的尺寸已标注上
            End If
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + 2 * d_ref, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + 2 * d_ref, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Point6", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref + link(m).L(2) / 1000, 0, False, 0, Nothing, 0)
            Part.SketchAddConstraints "sgFIXED"                                                                 '暂时固定空副点。如果这里是复合铰链，那么在从这里开始下一条链或者其他构件与其配合这两者之一第一次发生时，这个固定约束还不能删除，第二次发生两者之一才能删除
            Part.ClearSelection2 True
            If n = 1 Then
                link(m).Point_Empty(0) = Point_tail(0)
                link(m).Point_Empty(1) = Point_tail(1) + link(m).L(2) / 1000 + d_ref          '记录下空副的位置
                ReDim Preserve Point_undimen_ref(1, LineX - 1)                          '这里用LineX-1是因为 三副构件中 这条未标尺寸直线一定是LineX-1
                Point_undimen_ref(0, LineX - 1) = link(m).Point_Empty(0)
                Point_undimen_ref(1, LineX - 1) = link(m).Point_Empty(1)                  '记录一个补加尺寸的参考点
                If link(m).ch(0) Then
                    link(m).Point_ch(0, 0) = Point_tail(0)                                '记录复合铰链坐标
                    link(m).Point_ch(0, 1) = Point_tail(1) + d_ref + link(m).L(2) / 1000
                End If
            End If
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref + link(m).L(2) / 1000, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref + link(m).L(1) / 1000, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Line" & LineX - 3, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Line" & LineX - 2, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
            Set myDisplayDim = Part.AddDimension2(Point_tail(0) + link(m).L(0) / 4000, Point_tail(1) + d_ref - 0.005, 0) '添加上首P副的内部角度尺寸（须做下面更改）
            Part.ClearSelection2 True
            no_dimen = no_dimen + 1
            boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
            Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
            myDimension.SystemValue = link(m).beta(0) / 180 * pi
            Part.ClearSelection2 True
            Set skSegment = Part.SketchManager.CreateLine(Point_tail(0) + link(m).L(0) / 1000 + d_ref, Point_tail(1) + d_ref, 0#, Point_tail(0) + link(m).L(0) / 1000 + d_ref, Point_tail(1) + d_ref + 0.045, 0#) '尾P副直线（暂时不固定）
            Part.ClearSelection2 True
            LineX = LineX + 1
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000 + d_ref, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgSAMELENGTH"                 '添加P副与参考P副直线的相等约束
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Line" & LineX - 2, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
            Set myDisplayDim = Part.AddDimension2(Point_tail(0) + link(m).L(0) / 1000 - 0.005, Point_tail(1) + 2 * d_ref, 0) '添加固定P副内部角度尺寸（须做更改）
            Part.ClearSelection2 True
            no_dimen = no_dimen + 1
            boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
            Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
            myDimension.SystemValue = link(m).beta(1) / 180 * pi
            If n = 1 Then
                link(m).Line_Unfixed = LineX
            End If
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
            Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除尾副的固定约束
            Part.ClearSelection2 True
            If link(m).PorR(2) = 1 Then            '空余副为P副
                Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) + 2 * d_ref + link(m).L(2) / 1000, 0#, Point_tail(0) - 0.045, Point_tail(1) + 2 * d_ref + link(m).L(2) / 1000, 0#)
                Part.ClearSelection2 True
                LineX = LineX + 1
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgSAMELENGTH"                 '添加P副与参考P副直线的相等约束
                Part.ClearSelection2 True
                If n = 1 Then
                    ReDim Preserve IsDimension(LineX)
                    IsDimension(LineX) = True               '看作P副直线的尺寸已标注上
                    link(m).Line_Empty = LineX              '记录下此空余P的直线序号，方便后续配合时使用
                End If
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + link(m).L(2) / 1000 + 2 * d_ref, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref + link(m).L(2) / 1000, 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgMERGEPOINTS"
                Part.ClearSelection2 True
                boolstatus = Part.Extension.SelectByID2("Line" & LineX - 2, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                Set myDisplayDim = Part.AddDimension2(Point_tail(0) - 0.05, Point_tail(1) + link(m).L(2) / 1000, 0)      '添加上P副的内部角度尺寸（须做更改）
                Part.ClearSelection2 True
                no_dimen = no_dimen + 1
                boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
                Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
                myDimension.SystemValue = link(m).beta(2) / 180 * pi
                Part.ClearSelection2 True
            End If
            If n < 3 Then           '在草图1、2才执行此操作，防止多加LineX、no_dimen
                If link(m).PorR(2) = 2 Then         'PRP(固）
                    LineX = LineX - 4
                    no_dimen = no_dimen - 4
                ElseIf link(m).PorR(2) = 1 Then     'PPP(固）
                    LineX = LineX - 5
                    no_dimen = no_dimen - 5
                End If
            End If
        ElseIf link(m).fixed(0) Then    '固定副为②副
            If link(m - 1).L(0) = 0 Then            '上一尾P副水平
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                Part.SketchAddConstraints "sgVERTICAL2D"
                Part.ClearSelection2 True
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                Part.SketchConstraintsDel 0, "sgVERTICAL2D"                                                             '变换上一P副的位姿
                Part.ClearSelection2 True
            End If
            Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) + d_ref, 0#, Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0#)     '长度3直线
            Part.ClearSelection2 True
            LineX = LineX + 1
            boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            Set myDisplayDim = Part.AddDimension2(Point_tail(0) + link(m).L(0) / 2000, Point_tail(1) + d_ref, 0)
            Part.ClearSelection2 True
            no_dimen = no_dimen + 1
            If n = 1 Then
                ReDim Preserve IsDimension(LineX)
                IsDimension(LineX) = True               '表示长度3的尺寸已标注上
            End If
            boolstatus = Part.Extension.SelectByID2("Point6", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
            Part.SketchAddConstraints "sgFIXED"                                                                '暂时固定首副点
            Part.ClearSelection2 True
            If n = 1 Then
                link(m).Point_unset(0) = Point_tail(0)
                link(m).Point_unset(1) = Point_tail(1) + d_ref          '记录首副点坐标(作最后配合用）
            End If
            boolstatus = Part.Extension.SelectByID2("Point6", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
            Part.SketchAddConstraints "sgFIXED"                                                                '暂时固定尾副点
            Part.ClearSelection2 True
            Set skSegment = Part.SketchManager.CreateLine(Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + 2 * d_ref, 0#, Point_tail(0) + link(m).L(0) / 1000 - 0.6 * link(m).L(1) / 1000, Point_tail(1) + 2 * d_ref + 0.8 * link(m).L(1) / 1000, 0#) '长度2直线
            Part.ClearSelection2 True
            LineX = LineX + 1
            boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            Set myDisplayDim = Part.AddDimension2(Point_tail(0) + link(m).L(0) / 1000 - 0.6 * link(m).L(1) / 2000, Point_tail(1) + 2 * d_ref + 0.8 * link(m).L(1) / 2000, 0)
            Part.ClearSelection2 True
            no_dimen = no_dimen + 1
            If n = 1 Then
                ReDim Preserve IsDimension(LineX)
                IsDimension(LineX) = True               '表示长度2的尺寸已标注上
            End If
            Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) + 2 * d_ref, 0#, Point_tail(0), Point_tail(1) + 2 * d_ref + link(m).L(2) / 1000, 0#)         '长度1直线
            Part.ClearSelection2 True
            LineX = LineX + 1
            boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            Set myDisplayDim = Part.AddDimension2(Point_tail(0) - d_ref, Point_tail(1) + link(m).L(2) / 2000 + 2 * d_ref, 0)
            Part.ClearSelection2 True
            no_dimen = no_dimen + 1
            If n = 1 Then
                ReDim Preserve IsDimension(LineX)
                IsDimension(LineX) = True               '表示长度1的尺寸已标注上
            End If
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + 2 * d_ref, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + 2 * d_ref, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Line" & LineX - 3, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Line" & LineX - 2, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
            Set myDisplayDim = Part.AddDimension2(Point_tail(0) + link(m).L(0) / 4000, Point_tail(1) + d_ref - 0.005, 0) '添加上首P副的内部角度尺寸（须做下面更改）
            Part.ClearSelection2 True
            no_dimen = no_dimen + 1
            boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
            Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
            myDimension.SystemValue = link(m).beta(0) / 180 * pi
            Part.ClearSelection2 True
            Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) + 2 * d_ref + link(m).L(2) / 1000, 0#, Point_tail(0) - 0.045, Point_tail(1) + 2 * d_ref + link(m).L(2) / 1000, 0#)
            Part.ClearSelection2 True
            LineX = LineX + 1
            If n = 1 Then
                link(m).Line_Unfixed = LineX
            End If
            boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgSAMELENGTH"                 '添加P副与参考P副直线的相等约束
            Part.ClearSelection2 True
            If n = 1 Then
                ReDim Preserve IsDimension(LineX)
                IsDimension(LineX) = True               '看作P副直线的尺寸已标注上
            End If
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + link(m).L(2) / 1000 + 2 * d_ref, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + link(m).L(2) / 1000 + d_ref, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
            Set myDisplayDim = Part.AddDimension2(Point_tail(0) - 0.05, Point_tail(1) + link(m).L(2) / 1000, 0)      '添加上P副的内部角度尺寸（须做更改）
            Part.ClearSelection2 True
            no_dimen = no_dimen + 1
            boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
            Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
            myDimension.SystemValue = link(m).beta(2) / 180 * pi
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + link(m).L(2) / 1000 + d_ref, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000 - 0.6 * link(m).L(1) / 1000, Point_tail(1) + d_ref + 0.8 * link(m).L(1) / 1000, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            If link(m).ch(1) = False Then       '尾副不是复合铰链
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除尾副点的固定约束
                Part.ClearSelection2 True
            Else                                '尾副是复合铰链就记录坐标
                If n = 1 Then
                    link(m).Point_ch(1, 0) = Point_tail(0) + link(m).L(0) / 1000
                    link(m).Point_ch(1, 1) = Point_tail(1) + d_ref
                End If
            End If
            If link(m).PorR(1) = 1 Then             '尾副为P副
                Set skSegment = Part.SketchManager.CreateLine(Point_tail(0) + link(m).L(0) / 1000 + d_ref, Point_tail(1) + d_ref, 0#, Point_tail(0) + link(m).L(0) / 1000 + d_ref, Point_tail(1) + d_ref + 0.045, 0#)
                Part.ClearSelection2 True
                LineX = LineX + 1
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgSAMELENGTH"                 '添加P副与参考P副直线的相等约束
                Part.ClearSelection2 True
                If n = 1 Then
                    ReDim Preserve IsDimension(LineX)
                    IsDimension(LineX) = True               '看作P副直线的尺寸已标注上
                End If
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000 + d_ref, Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgMERGEPOINTS"
                Part.ClearSelection2 True
                boolstatus = Part.Extension.SelectByID2("Line" & LineX - 3, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                Set myDisplayDim = Part.AddDimension2(Point_tail(0) + link(m).L(0) / 1000 - 0.005, Point_tail(1) + 2 * d_ref, 0) '添加上P副的内部角度尺寸（须做更改）
                Part.ClearSelection2 True
                no_dimen = no_dimen + 1
                boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
                Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
                myDimension.SystemValue = link(m).beta(1) / 180 * pi
                Part.ClearSelection2 True
            End If
            If n = 3 Then
                Point_tail(0) = Point_tail(0) + link(m).L(0) / 1000
                Point_tail(1) = Point_tail(1) + d_ref
            End If
            If n < 3 Then           '在草图1、2才执行此操作，防止多加LineX、no_dimen
                If link(m).PorR(1) = 2 Then         'RP(固）R
                    LineX = LineX - 4
                    no_dimen = no_dimen - 5
                ElseIf link(m).PorR(1) = 1 Then     'RP(固）P
                    LineX = LineX - 5
                    no_dimen = no_dimen - 6
                End If
            End If
        End If
    End If
End Function
Function TLink_with_Rf()
    If link(m).PorR(0) = 2 Then       '首副为R
        If link(m).fixed(1) Then            '固定副为③副
            If n = 1 Then
                num_of_Empty = num_of_Empty + 1
                link(m).Empty_num = num_of_Empty
            End If
            If link(m - 1).ch(1) = False Then
                boolstatus = Part.Extension.SelectByID2("Point6", "SKETCHPOINT", Point_tail(0), Point_tail(1), 0, False, 0, Nothing, 0)
                Part.SketchAddConstraints "sgFIXED"                                                                 '暂时固定捕捉点
                Part.ClearSelection2 True
            End If
'
'            If link(m).Yf > 0 Then
'                Set skSegment = Part.SketchManager.CreateLine(link(m).Xf / 1000, link(m).Yf / 1000, 0#, link(m).Xf / 1000 - link(m).L(0) / 1000, link(m).Yf / 1000, 0#)   '长度3直线
'                Part.ClearSelection2 True
'            ElseIf link(m).Yf = 0 Then
                Set skSegment = Part.SketchManager.CreateLine(link(m).Xf / 1000, link(m).Yf / 1000, 0#, link(m).Xf / 1000 - link(m).L(0) / 1000, Point_tail(1) / 5, 0#) '长度3直线
                Part.ClearSelection2 True
            'End If
            LineX = LineX + 1
            If link(m).TBS Then
                Get_dimen(1) = LineX
            End If
            boolstatus = Part.Extension.SelectByID2("Point6", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000, 0, False, 0, Nothing, 0)
            Part.SketchAddConstraints "sgFIXED"                                                                 '固定尾副
            Part.ClearSelection2 True
            If Xr > 0 Or Yr > 0 Then          '添加“替换”待求构件的辅助尺寸
                If n = 3 Then                  '仅在草图3里操作
                    TMP_Cancel_fixed
                    If link(m - 1).ch(1) = False Then
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1), 0, False, 0, Nothing, 0)
                        Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除捕捉点的固定约束
                        Part.ClearSelection2 True
                    End If
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000 - link(m).L(0) / 1000, Point_tail(1) / 5, 0, False, 0, Nothing, 0)
                    Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定首副点
                    Part.ClearSelection2 True
                    boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", link(m).Xf / 1000 - link(m).L(0) / 1000, Point_tail(1) / 5, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0.05, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2 - link(m).L(0) / 2000, -d_ref, 0)
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1: Xa(0) = no_dimen           '添加了Xa(0)
                    boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0.05, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", link(m).Xf / 1000 - link(m).L(0) / 1000, Point_tail(1) / 5, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(-2 * d_ref, (Point_tail(1) + d_ref) / 2, 0)
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1: Ya(0) = no_dimen           '添加了Ya(0)
                    no_dimen_Shift = no_dimen_Shift + 2
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000 - link(m).L(0) / 1000, Point_tail(1) / 5, 0, False, 0, Nothing, 0)
                    Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除首副点固定约束
                    Part.ClearSelection2 True
                    Xa(1) = -link(m).Xf: Ya(1) = -link(m).Yf
                End If
            End If
            Set skSegment = Part.SketchManager.CreateLine(link(m).Xf / 1000, link(m).Yf / 1000 + d_ref, 0#, link(m).Xf / 1000, link(m).Yf / 1000 + d_ref + link(m).L(1) / 1000, 0#) '长度2直线
            Part.ClearSelection2 True
            LineX = LineX + 1
            If link(m).TBS Then
                Get_dimen(0) = LineX
            End If
            If n = 1 Then
                ReDim Preserve undimen(LineX)
                undimen(LineX) = link(m).L(1)           '记录下未标注的长度2
            End If
            Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) + d_ref, 0#, Point_tail(0), Point_tail(1) + d_ref + link(m).L(2) / 1000, 0#)          '长度1直线
            Part.ClearSelection2 True
            LineX = LineX + 1
            If Xr > 0 Or Yr > 0 Then          '添加“替换”待求构件的辅助尺寸
                If n = 3 Then                  '仅在草图3里操作
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref + link(m).L(2) / 1000, 0, False, 0, Nothing, 0)
                        Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定未配合的空副点
                        Part.ClearSelection2 True
                        boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref + link(m).L(2) / 1000, 0, False, 0, Nothing, 0)
                        boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0.05, 0, True, 0, Nothing, 0)
                        Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2 - link(m).L(0) / 2000, -3 * d_ref, 0)
                        Part.ClearSelection2 True
                        no_dimen = no_dimen + 1: Xa(2) = no_dimen           '添加了Xa(2)
                        boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0.05, 0, 0, False, 0, Nothing, 0)
                        boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref + link(m).L(2) / 1000, 0, True, 0, Nothing, 0)
                        Set myDisplayDim = Part.AddDimension2(-3 * d_ref, (Point_tail(1) + d_ref) / 2, 0)
                        Part.ClearSelection2 True
                        no_dimen = no_dimen + 1: Ya(2) = no_dimen           '添加了Ya(2)
                        no_dimen_Shift = no_dimen_Shift + 2
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref + link(m).L(2) / 1000, 0, False, 0, Nothing, 0)
                        Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除未配合的空副点固定约束
                        Part.ClearSelection2 True
                    TMP_Cancel_fixed_Recover
                    If link(m - 1).ch(1) = False Then
                        boolstatus = Part.Extension.SelectByID2("Point6", "SKETCHPOINT", Point_tail(0), Point_tail(1), 0, False, 0, Nothing, 0)
                        Part.SketchAddConstraints "sgFIXED"                                                                 '暂时固定捕捉点
                        Part.ClearSelection2 True
                    End If
                    Xr = 0: Yr = 0
                    'dimen_tobe_Delete(0) = no_dimen - no_dimen_Shift            '待删除的长度3，此构件暂时没有，最后补加尺寸时才能知道
                    dimen_tobe_Delete(2) = no_dimen - no_dimen_Shift + 1          '待删除的长度1，此数值是对于草图1/2来说的
                    no_dimen_Shift_A = 2
                End If
            End If
            boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            Set myDisplayDim = Part.AddDimension2(Point_tail(0) - d_ref, Point_tail(1) + d_ref + link(m).L(2) / 2000, 0)
            Part.ClearSelection2 True
            no_dimen = no_dimen + 1
            If n = 1 Then
                ReDim Preserve IsDimension(LineX)
                IsDimension(LineX) = True               '表示长度1的尺寸已标注上
            End If
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1), 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1), 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000 - link(m).L(0) / 1000, Point_tail(1) / 5, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Point6", "SKETCHPOINT", Point_tail(0), Point_tail(1) + link(m).L(2) / 1000, 0, False, 0, Nothing, 0)
            Part.SketchAddConstraints "sgFIXED"                                                                '暂时固定空副点。如果这里是复合铰链，那么在从这里开始下一条链或者其他构件与其配合这两者之一第一次发生时，这个固定约束还不能删除，第二次发生两者之一才能删除
            Part.ClearSelection2 True
            If n = 1 Then
                link(m).Point_Empty(0) = Point_tail(0)
                link(m).Point_Empty(1) = Point_tail(1) + link(m).L(2) / 1000            '记录下空副的位置
                ReDim Preserve Point_undimen_ref(1, LineX - 1)                          '这里用LineX-1是因为 三副构件中 这条未标尺寸直线一定是LineX-1
                Point_undimen_ref(0, LineX - 1) = link(m).Point_Empty(0)
                Point_undimen_ref(1, LineX - 1) = link(m).Point_Empty(1)                  '记录一个补加尺寸的参考点
                If link(m).ch(0) Then                                                       '空副是复合铰链就记录坐标
                    link(m).Point_ch(0, 0) = Point_tail(0)
                    link(m).Point_ch(0, 1) = Point_tail(1) + link(m).L(2) / 1000
                End If
            End If
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000 + d_ref, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + link(m).L(2) / 1000, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000 + link(m).L(1) / 1000, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            If link(m - 1).ch(1) = False Then   '首副不是复合铰链
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1), 0, False, 0, Nothing, 0)
                Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除对应首副点的固定约束
                Part.ClearSelection2 True
                If n = 1 Then
                    undimen(LineX - 2) = link(m).L(0)         '记录下未标注的 长度3
                    Point_undimen_ref(0, LineX - 2) = Point_tail(0)
                    Point_undimen_ref(1, LineX - 2) = Point_tail(1)                         '记录一个补加尺寸的参考点
                End If
            Else                                '首副是复合铰链
                If n = 1 Then
                    undimen(LineX - 2) = link(m).L(0)         '记录下未标注的 长度3
                    Point_undimen_ref(0, LineX - 2) = Point_tail(0)
                    Point_undimen_ref(1, LineX - 2) = Point_tail(1)                         '记录一个补加尺寸的参考点
                End If
            End If
            If link(m).PorR(2) = 1 Then            '空余副为P副
                Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) + d_ref + link(m).L(2) / 1000, 0#, Point_tail(0) - 0.045, Point_tail(1) + d_ref + link(m).L(2) / 1000, 0#)
                Part.ClearSelection2 True
                LineX = LineX + 1
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgSAMELENGTH"                 '添加P副与参考P副直线的相等约束
                Part.ClearSelection2 True
                If n = 1 Then
                    ReDim Preserve IsDimension(LineX)
                    IsDimension(LineX) = True               '看作P副直线的尺寸已标注上
                    link(m).Line_Empty = LineX              '记录下此空余P的直线序号，方便后续配合时使用
                End If
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + link(m).L(2) / 1000, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref + link(m).L(2) / 1000, 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgMERGEPOINTS"
                Part.ClearSelection2 True
                boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                Set myDisplayDim = Part.AddDimension2(Point_tail(0) - 0.05, Point_tail(1) + link(m).L(2) / 1000 - 0.05, 0)     '添加上P副的内部角度尺寸（须做更改）
                Part.ClearSelection2 True
                no_dimen = no_dimen + 1
                boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
                Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
                myDimension.SystemValue = link(m).beta(2) / 180 * pi
                Part.ClearSelection2 True
            End If
            If n < 3 Then           '在草图1、2才执行此操作，防止多加LineX、no_dimen
                If link(m).PorR(2) = 2 Then         'RRR(固）
                    LineX = LineX - 3
                    no_dimen = no_dimen - 1
                ElseIf link(m).PorR(2) = 1 Then     'RPR(固）
                    LineX = LineX - 4
                    no_dimen = no_dimen - 2
                End If
            End If
        ElseIf link(m).fixed(0) Then        '固定副为②副
            If link(m - 1).ch(1) = False Then
                boolstatus = Part.Extension.SelectByID2("Point6", "SKETCHPOINT", Point_tail(0), Point_tail(1), 0, False, 0, Nothing, 0)
                Part.SketchAddConstraints "sgFIXED"                                                                 '暂时固定捕捉点
                Part.ClearSelection2 True
            End If
            Set skSegment = Part.SketchManager.CreateLine(link(m).Xf / 1000, link(m).Yf / 1000, 0#, link(m).Xf / 1000 - link(m).L(2) / 1000, link(m).Yf / 1000, 0#)   '长度1直线
            Part.ClearSelection2 True
            LineX = LineX + 1
            If link(m).TBS Then
                Get_dimen(1) = LineX
            End If
            boolstatus = Part.Extension.SelectByID2("Point6", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000, 0, False, 0, Nothing, 0)
            Part.SketchAddConstraints "sgFIXED"                                                                 '固定空副
            Part.ClearSelection2 True
            If Xr > 0 Or Yr > 0 Then          '添加“替换”待求构件的辅助尺寸
                If n = 3 Then                  '仅在草图3里操作
                    TMP_Cancel_fixed
                    If link(m - 1).ch(1) = False Then
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1), 0, False, 0, Nothing, 0)
                        Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除捕捉点的固定约束
                        Part.ClearSelection2 True
                    End If
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000 - link(m).L(2) / 1000, link(m).Yf / 1000, 0, False, 0, Nothing, 0)
                    Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定首副点
                    Part.ClearSelection2 True
                    boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", link(m).Xf / 1000 - link(m).L(2) / 1000, link(m).Yf / 1000, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0.05, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2 - link(m).L(0) / 2000, -d_ref, 0)
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1: Xa(0) = no_dimen           '添加了Xa(0)
                    boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0.05, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", link(m).Xf / 1000 - link(m).L(2) / 1000, link(m).Yf / 1000, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(-2 * d_ref, (Point_tail(1) + d_ref) / 2, 0)
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1: Ya(0) = no_dimen           '添加了Ya(0)
                    no_dimen_Shift = no_dimen_Shift + 2
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000 - link(m).L(2) / 1000, link(m).Yf / 1000, 0, False, 0, Nothing, 0)
                    Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除首副点固定约束
                    Part.ClearSelection2 True
                    Xa(2) = -link(m).Xf: Ya(2) = -link(m).Yf
                End If
            End If
            Set skSegment = Part.SketchManager.CreateLine(link(m).Xf / 1000, link(m).Yf / 1000 - d_ref, 0#, link(m).Xf / 1000, link(m).Yf / 1000 - d_ref - link(m).L(1) / 1000, 0#) '长度2直线
            Part.ClearSelection2 True
            LineX = LineX + 1
            If link(m).TBS Then
                Get_dimen(0) = LineX
            End If
            If Xr > 0 Or Yr > 0 Then          '添加“替换”待求构件的辅助尺寸
                If n = 3 Then                  '仅在草图3里操作
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000 - d_ref - link(m).L(1) / 1000, 0, False, 0, Nothing, 0)
                        Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定未配合的尾副点
                        Part.ClearSelection2 True
                        boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000 - d_ref - link(m).L(1) / 1000, 0, False, 0, Nothing, 0)
                        boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0.05, 0, True, 0, Nothing, 0)
                        Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2 - link(m).L(0) / 2000, -3 * d_ref, 0)
                        Part.ClearSelection2 True
                        no_dimen = no_dimen + 1: Xa(1) = no_dimen           '添加了Xa(1)
                        boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0.05, 0, 0, False, 0, Nothing, 0)
                        boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000 - d_ref - link(m).L(1) / 1000, 0, True, 0, Nothing, 0)
                        Set myDisplayDim = Part.AddDimension2(-3 * d_ref, (Point_tail(1) + d_ref) / 2, 0)
                        Part.ClearSelection2 True
                        no_dimen = no_dimen + 1: Ya(1) = no_dimen           '添加了Ya(1)
                        no_dimen_Shift = no_dimen_Shift + 2
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000 - d_ref - link(m).L(1) / 1000, 0, False, 0, Nothing, 0)
                        Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除未配合的空副点固定约束
                        Part.ClearSelection2 True
                    TMP_Cancel_fixed_Recover
                    If link(m - 1).ch(1) = False Then
                        boolstatus = Part.Extension.SelectByID2("Point6", "SKETCHPOINT", Point_tail(0), Point_tail(1), 0, False, 0, Nothing, 0)
                        Part.SketchAddConstraints "sgFIXED"                                                                 '暂时固定捕捉点
                        Part.ClearSelection2 True
                    End If
                    Xr = 0: Yr = 0
                    dimen_tobe_Delete(0) = no_dimen - no_dimen_Shift + 1          '待删除的长度3，，此数值是对于草图1/2来说的
                    'dimen_tobe_Delete(2) = no_dimen - no_dimen_Shift + 1          '待删除的长度1此构件暂时没有，最后补加尺寸时才能知道
                    no_dimen_Shift_A = 2
                End If
            End If
            If n = 1 Then
                ReDim Preserve undimen(LineX)
                undimen(LineX) = link(m).L(1)           '记录下未标注的长度2
            End If
            Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) - d_ref, 0#, Point_tail(0), Point_tail(1) - d_ref - link(m).L(0) / 1000, 0#)          '长度3直线
            Part.ClearSelection2 True
            LineX = LineX + 1
            boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            Set myDisplayDim = Part.AddDimension2(Point_tail(0) - d_ref, Point_tail(1) - d_ref - link(m).L(2) / 2000, 0)
            Part.ClearSelection2 True
            no_dimen = no_dimen + 1
            If n = 1 Then
                ReDim Preserve IsDimension(LineX)
                IsDimension(LineX) = True               '表示长度3的尺寸已标注上
            End If
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1), 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) - d_ref, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1), 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000 - link(m).L(2) / 1000, link(m).Yf / 1000, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Point6", "SKETCHPOINT", Point_tail(0), Point_tail(1) - link(m).L(0) / 1000, 0, False, 0, Nothing, 0)
            Part.SketchAddConstraints "sgFIXED"                                                                 '暂时固定尾副
            Part.ClearSelection2 True
            If link(m - 1).ch(1) = False Then   '首副不是复合铰链
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1), 0, False, 0, Nothing, 0)
                Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除对应首副点的固定约束
                Part.ClearSelection2 True
                If n = 1 Then
                    undimen(LineX - 2) = link(m).L(2)         '记录下未标注的 长度1
                    ReDim Preserve Point_undimen_ref(1, LineX - 2)                          '这里用LineX-2是因为 这有复合铰链为首副的情况下 这条未标尺寸直线一定是LineX-2
                    Point_undimen_ref(0, LineX - 2) = Point_tail(0)
                    Point_undimen_ref(1, LineX - 2) = Point_tail(1)                         '记录一个补加 直线1 尺寸的参考点
                End If
            Else                                '首副是复合铰链
                If n = 1 Then
                    undimen(LineX - 2) = link(m).L(2)         '记录下未标注的 长度1
                    ReDim Preserve Point_undimen_ref(1, LineX - 2)                          '这里用LineX-2是因为 这有复合铰链为首副的情况下 这条未标尺寸直线一定是LineX-2
                    Point_undimen_ref(0, LineX - 2) = Point_tail(0)
                    Point_undimen_ref(1, LineX - 2) = Point_tail(1)                         '记录一个补加 直线1 尺寸的参考点
                End If
            End If
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000 - d_ref, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) - link(m).L(0) / 1000, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000 - link(m).L(1) / 1000, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            If n = 1 Then
                ReDim Preserve Point_undimen_ref(1, LineX - 1)                          '这里用LineX-1是因为 三副构件中 这条未标尺寸直线一定是LineX-1
                Point_undimen_ref(0, LineX - 1) = Point_tail(0)
                Point_undimen_ref(1, LineX - 1) = Point_tail(1) - link(m).L(0) / 1000                         '记录一个补加 直线2 尺寸的参考点
            End If
            
            If link(m).ch(1) = False Then       '尾副不是复合铰链
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) - link(m).L(0) / 1000, 0, False, 0, Nothing, 0)
                Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除尾副点的固定约束
                Part.ClearSelection2 True
            Else                                '尾副是复合铰链就记录坐标
                link(m).Point_ch(1, 0) = Point_tail(0)
                link(m).Point_ch(1, 1) = Point_tail(1) - link(m).L(0) / 1000
            End If
            If link(m).PorR(1) = 1 Then             '尾副为P副
                Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) - link(m).L(0) / 1000 - d_ref, 0#, Point_tail(0) + 0.045, Point_tail(1) - link(m).L(0) / 1000 - d_ref, 0#)
                Part.ClearSelection2 True
                LineX = LineX + 1
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgSAMELENGTH"                 '添加P副与参考P副直线的相等约束
                Part.ClearSelection2 True
                If n = 1 Then
                    ReDim Preserve IsDimension(LineX)
                    IsDimension(LineX) = True               '看作P副直线的尺寸已标注上
                End If
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) - link(m).L(0) / 1000, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) - link(m).L(0) / 1000 - d_ref, 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgMERGEPOINTS"
                Part.ClearSelection2 True
                boolstatus = Part.Extension.SelectByID2("Line" & LineX - 2, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                Set myDisplayDim = Part.AddDimension2(Point_tail(0) + d_ref, Point_tail(1) - link(m).L(0) / 1000 + 0.005, 0)  '添加上P副的内部角度尺寸（须做更改）
                Part.ClearSelection2 True
                no_dimen = no_dimen + 1
                boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
                Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
                myDimension.SystemValue = link(m).beta(1) / 180 * pi
                Part.ClearSelection2 True
            End If
            If n < 3 Then           '在草图1、2才执行此操作，防止多加LineX、no_dimen
                If link(m).PorR(1) = 2 Then         'RR(固）R
                    LineX = LineX - 3
                    no_dimen = no_dimen - 1
                ElseIf link(m).PorR(1) = 1 Then     'RR(固）P
                    LineX = LineX - 4
                    no_dimen = no_dimen - 2
                End If
            End If
            If n = 3 Then
                Point_tail(1) = Point_tail(1) - link(m).L(0) / 1000                     '特殊跳转尾副点
            End If
        End If
        
    
    ElseIf link(m).PorR(0) = 1 Then             '首副为P副
        If link(m).fixed(1) Then    '固定副为③副
            If n = 1 Then
                num_of_Empty = num_of_Empty + 1
                link(m).Empty_num = num_of_Empty
            End If
            If link(m - 1).PorR(2) <> 0 Or (link(m - 1).PorR(2) = 0 And link(m - 1).L(0) <> 0) Then         '上一尾P副不水平
                Set skSegment = Part.SketchManager.CreateLine(link(m).Xf / 1000, link(m).Yf / 1000, 0#, link(m).Xf / 1000 - link(m).L(0) / 1000, Point_tail(1) / 5, 0#)   '长度3直线
                Part.ClearSelection2 True
                LineX = LineX + 1
                boolstatus = Part.Extension.SelectByID2("Point6", "SKETCHPOINT", link(m).Xf / 1000 - link(m).L(0) / 1000, Point_tail(1) / 5, 0, False, 0, Nothing, 0)
                Part.SketchAddConstraints "sgFIXED"                                                                 '固定首副点
                Part.ClearSelection2 True
                If Xr > 0 Or Yr > 0 Then          '添加“替换”待求构件的辅助尺寸
                    If n = 3 Then                  '仅在草图3里操作
                        TMP_Cancel_fixed
                        boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", link(m).Xf / 1000 - link(m).L(0) / 1000, Point_tail(1) / 5, 0, False, 0, Nothing, 0)
                        boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0.05, 0, True, 0, Nothing, 0)
                        Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2 - link(m).L(0) / 2000, -d_ref, 0)
                        Part.ClearSelection2 True
                        no_dimen = no_dimen + 1: Xa(0) = no_dimen           '添加了Xa(0)
                        boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0.05, 0, 0, False, 0, Nothing, 0)
                        boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", link(m).Xf / 1000 - link(m).L(0) / 1000, Point_tail(1) / 5, 0, True, 0, Nothing, 0)
                        Set myDisplayDim = Part.AddDimension2(-2 * d_ref, (Point_tail(1) + d_ref) / 2, 0)
                        Part.ClearSelection2 True
                        no_dimen = no_dimen + 1: Ya(0) = no_dimen           '添加了Ya(0)
                        no_dimen_Shift = no_dimen_Shift + 2
                        Xa(1) = -link(m).Xf: Ya(1) = -link(m).Yf
                        dimen_tobe_Delete(0) = no_dimen - no_dimen_Shift + 1         '待删除的长度3，，此数值是对于草图1/2来说的
                    End If
                End If
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                Set myDisplayDim = Part.AddDimension2(link(m).Xf / 1000 - link(m).L(0) / 2000, link(m).Yf / 1000 + d_ref, 0)
                Part.ClearSelection2 True
                no_dimen = no_dimen + 1
                If n = 1 Then
                    ReDim Preserve IsDimension(LineX)
                    IsDimension(LineX) = True               '表示长度3的尺寸已标注上
                End If
                boolstatus = Part.Extension.SelectByID2("Point6", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000, 0, False, 0, Nothing, 0)
                Part.SketchAddConstraints "sgFIXED"                                                                 '固定尾副
                Part.ClearSelection2 True
                
                Set skSegment = Part.SketchManager.CreateLine(link(m).Xf / 1000, link(m).Yf / 1000 + d_ref, 0#, link(m).Xf / 1000, link(m).Yf / 1000 + d_ref + link(m).L(1) / 1000, 0#) '长度2直线
                Part.ClearSelection2 True
                LineX = LineX + 1
                If n = 1 Then
                    ReDim Preserve undimen(LineX)
                    undimen(LineX) = link(m).L(1)           '记录下未标注的长度2
                End If
                If link(m).TBS Then
                    Get_dimen(0) = LineX
                End If
                Set skSegment = Part.SketchManager.CreateLine(link(m).Xf / 1000 - link(m).L(0) / 1000, link(m).Yf / 1000 + d_ref, 0#, link(m).Xf / 1000 - link(m).L(0) / 1000, link(m).Yf / 1000 + d_ref + link(m).L(2) / 1000, 0#)         '长度1直线
                Part.ClearSelection2 True
                LineX = LineX + 1
                If Xr > 0 Or Yr > 0 Then          '添加“替换”待求构件的辅助尺寸
                    If n = 3 Then                  '仅在草图3里操作
                            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000, 0, False, 0, Nothing, 0)
                            Part.SketchConstraintsDel 0, "sgFIXED"                                                              '暂时删除尾副点的固定约束
                            Part.ClearSelection2 True
                            
                            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000 - link(m).L(0) / 1000, link(m).Yf / 1000 + d_ref + link(m).L(2) / 1000, 0, False, 0, Nothing, 0)
                            Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定未配合的空副点
                            Part.ClearSelection2 True
                            boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", link(m).Xf / 1000 - link(m).L(0) / 1000, link(m).Yf / 1000 + d_ref + link(m).L(2) / 1000, 0, False, 0, Nothing, 0)
                            boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0.05, 0, True, 0, Nothing, 0)
                            Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2 - link(m).L(0) / 2000, -3 * d_ref, 0)
                            Part.ClearSelection2 True
                            no_dimen = no_dimen + 1: Xa(2) = no_dimen           '添加了Xa(2)
                            boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0.05, 0, 0, False, 0, Nothing, 0)
                            boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", link(m).Xf / 1000 - link(m).L(0) / 1000, link(m).Yf / 1000 + d_ref + link(m).L(2) / 1000, 0, True, 0, Nothing, 0)
                            Set myDisplayDim = Part.AddDimension2(-3 * d_ref, (Point_tail(1) + d_ref) / 2, 0)
                            Part.ClearSelection2 True
                            no_dimen = no_dimen + 1: Ya(2) = no_dimen           '添加了Ya(2)
                            no_dimen_Shift = no_dimen_Shift + 2
                            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000 - link(m).L(0) / 1000, link(m).Yf / 1000 + d_ref + link(m).L(2) / 1000, 0, False, 0, Nothing, 0)
                            Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除未配合的空副点固定约束
                            Part.ClearSelection2 True
                            boolstatus = Part.Extension.SelectByID2("Point6", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000, 0, False, 0, Nothing, 0)
                            Part.SketchAddConstraints "sgFIXED"                                                                 '固定尾副
                            Part.ClearSelection2 True
                        TMP_Cancel_fixed_Recover
                        Xr = 0: Yr = 0
                        dimen_tobe_Delete(2) = no_dimen - no_dimen_Shift + 1          '待删除的长度1，此数值是对于草图1/2来说的
                    End If
                End If
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                Set myDisplayDim = Part.AddDimension2(link(m).Xf / 1000 - link(m).L(0) / 1000 - d_ref, link(m).Yf / 1000 + d_ref + link(m).L(2) / 2000, 0)
                Part.ClearSelection2 True
                no_dimen = no_dimen + 1
                If n = 1 Then
                    ReDim Preserve IsDimension(LineX)
                    IsDimension(LineX) = True               '表示长度1的尺寸已标注上
                End If
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000 - link(m).L(0) / 1000, Point_tail(1) / 5, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line" & LineX - 3, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgCOINCIDENT"
                Part.ClearSelection2 True
                boolstatus = Part.Extension.SelectByID2("Line" & LineX - 2, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line" & LineX - 3, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                Set myDisplayDim = Part.AddDimension2(link(m).Xf / 1000 - link(m).L(0) / 1000 + d_ref, link(m).Yf / 1000 - 0.015, 0) '添加上P副的内部角度尺寸（须做更改）
                Part.ClearSelection2 True
                no_dimen = no_dimen + 1
                boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
                Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
                myDimension.SystemValue = link(m).beta(0) / 180 * pi
                Part.ClearSelection2 True
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000 - link(m).L(0) / 1000, Point_tail(1) / 5, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000 - link(m).L(0) / 1000, link(m).Yf / 1000 + d_ref, 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgMERGEPOINTS"
                Part.ClearSelection2 True
                boolstatus = Part.Extension.SelectByID2("Point6", "SKETCHPOINT", link(m).Xf / 1000 - link(m).L(0) / 1000, Point_tail(1) / 5 + link(m).L(2) / 1000, 0, False, 0, Nothing, 0)
                Part.SketchAddConstraints "sgFIXED"                                                                '暂时固定空副点。如果这里是复合铰链，那么在从这里开始下一条链或者其他构件与其配合这两者之一第一次发生时，这个固定约束还不能删除，第二次发生两者之一才能删除
                Part.ClearSelection2 True
                If n = 1 Then
                    link(m).Point_Empty(0) = link(m).Xf / 1000 - link(m).L(0) / 1000
                    link(m).Point_Empty(1) = Point_tail(1) / 5 + link(m).L(2) / 1000            '记录下空副的位置
                    ReDim Preserve Point_undimen_ref(1, LineX - 1)                          '这里用LineX-1是因为 三副构件中 这条未标尺寸直线一定是LineX-1
                    Point_undimen_ref(0, LineX - 1) = link(m).Point_Empty(0)
                    Point_undimen_ref(1, LineX - 1) = link(m).Point_Empty(1)                  '记录一个补加尺寸的参考点
                    If link(m).ch(0) Then                                                       '空副是复合铰链就记录坐标
                        link(m).Point_ch(0, 0) = link(m).Point_Empty(0)
                        link(m).Point_ch(0, 1) = link(m).Point_Empty(1)
                    End If
                End If
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000 + d_ref, 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgMERGEPOINTS"
                Part.ClearSelection2 True
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000 - link(m).L(0) / 1000, Point_tail(1) / 5 + link(m).L(2) / 1000, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000 + link(m).L(1) / 1000, 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgMERGEPOINTS"
                Part.ClearSelection2 True
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000 - link(m).L(0) / 1000, Point_tail(1) / 5, 0, False, 0, Nothing, 0)
                Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除对应首副点的固定约束
                Part.ClearSelection2 True
                If link(m).PorR(2) = 1 Then            '空余副为P副
                    Set skSegment = Part.SketchManager.CreateLine(link(m).Xf / 1000 - link(m).L(0) / 1000, Point_tail(1) / 5 + link(m).L(2) / 1000 + d_ref, 0#, link(m).Xf / 1000 - link(m).L(0) / 1000 - 0.045, Point_tail(1) / 5 + link(m).L(2) / 1000 + d_ref, 0#)
                    Part.ClearSelection2 True
                    LineX = LineX + 1
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                    Part.SketchAddConstraints "sgSAMELENGTH"                 '添加P副与参考P副直线的相等约束
                    Part.ClearSelection2 True
                    If n = 1 Then
                        ReDim Preserve IsDimension(LineX)
                        IsDimension(LineX) = True               '看作P副直线的尺寸已标注上
                        link(m).Line_Empty = LineX              '记录下此空余P的直线序号，方便后续配合时使用
                    End If
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000 - link(m).L(0) / 1000, Point_tail(1) / 5 + link(m).L(2) / 1000, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000 - link(m).L(0) / 1000, Point_tail(1) / 5 + link(m).L(2) / 1000 + d_ref, 0, True, 0, Nothing, 0)
                    Part.SketchAddConstraints "sgMERGEPOINTS"
                    Part.ClearSelection2 True
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(link(m).Xf / 1000 - link(m).L(0) / 1000 - 0.05, link(m).Yf / 1000 + link(m).L(2) / 1000 - 0.05, 0)     '添加上P副的内部角度尺寸（须做更改）
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1
                    boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
                    Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
                    myDimension.SystemValue = link(m).beta(2) / 180 * pi
                    Part.ClearSelection2 True
                End If
                If n < 3 Then           '在草图1、2才执行此操作，防止多加LineX、no_dimen
                    If link(m).PorR(2) = 2 Then         'PRR(固）
                        LineX = LineX - 3
                        no_dimen = no_dimen - 3
                    ElseIf link(m).PorR(2) = 1 Then     'PPR(固）
                        LineX = LineX - 4
                        no_dimen = no_dimen - 4
                    End If
                End If
            ElseIf link(m - 1).PorR(2) = 0 And link(m - 1).L(0) = 0 Then                                  '参照OnenNote中2.二.(2).B
                link(m).Line_Unset = LineX            '记录下未与首副点重合的直线序号，其实是上一构件的尾端P副直线
                Set skSegment = Part.SketchManager.CreateLine(link(m).Xf / 1000, link(m).Yf / 1000, 0#, link(m).Xf / 1000, link(m).Yf / 1000 + link(m).L(0) / 1000, 0#)     '长度3直线
                Part.ClearSelection2 True
                LineX = LineX + 1
                If Xr > 0 Or Yr > 0 Then          '添加“替换”待求构件的辅助尺寸
                    If n = 3 Then                  '仅在草图3里操作
                        TMP_Cancel_fixed
                        boolstatus = Part.Extension.SelectByID2("Point6", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000 + link(m).L(0) / 1000, 0, False, 0, Nothing, 0)
                        Part.SketchAddConstraints "sgFIXED"                                                                '暂时固定首副点
                        Part.ClearSelection2 True
                        boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000 + link(m).L(0) / 1000, 0, False, 0, Nothing, 0)
                        boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0.05, 0, True, 0, Nothing, 0)
                        Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2 - link(m).L(0) / 2000, -d_ref, 0)
                        Part.ClearSelection2 True
                        no_dimen = no_dimen + 1: Xa(0) = no_dimen           '添加了Xa(0)
                        boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0.05, 0, 0, False, 0, Nothing, 0)
                        boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000 + link(m).L(0) / 1000, 0, True, 0, Nothing, 0)
                        Set myDisplayDim = Part.AddDimension2(-2 * d_ref, (Point_tail(1) + d_ref) / 2, 0)
                        Part.ClearSelection2 True
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000 + link(m).L(0) / 1000, 0, False, 0, Nothing, 0)
                        Part.SketchConstraintsDel 0, "sgFIXED"                                                              '暂时删除首副点的固定约束
                        Part.ClearSelection2 True
                        no_dimen = no_dimen + 1: Ya(0) = no_dimen           '添加了Ya(0)
                        no_dimen_Shift = no_dimen_Shift + 2
                        Xa(1) = -link(m).Xf: Ya(1) = -link(m).Yf
                        dimen_tobe_Delete(0) = no_dimen - no_dimen_Shift + 1         '待删除的长度3，，此数值是对于草图1/2来说的
                    End If
                End If
                boolstatus = Part.Extension.SelectByID2("Point6", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000, 0, False, 0, Nothing, 0)
                Part.SketchAddConstraints "sgFIXED"                                                                 '固定尾副
                Part.ClearSelection2 True
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                Set myDisplayDim = Part.AddDimension2(link(m).Xf / 1000 - d_ref, link(m).Yf / 1000 + link(m).L(0) / 2000, 0)
                Part.ClearSelection2 True
                no_dimen = no_dimen + 1
                If n = 1 Then
                    ReDim Preserve IsDimension(LineX)
                    IsDimension(LineX) = True               '表示长度3的尺寸已标注上
                End If
                Set skSegment = Part.SketchManager.CreateLine(link(m).Xf / 1000 + d_ref, link(m).Yf / 1000, 0#, link(m).Xf / 1000 + d_ref + link(m).L(1) / 1000, link(m).Yf / 1000, 0#)  '长度2直线
                Part.ClearSelection2 True
                LineX = LineX + 1
                If link(m).TBS Then
                    Get_dimen(0) = LineX
                End If
                If n = 1 Then
                    ReDim Preserve undimen(LineX)
                    undimen(LineX) = link(m).L(1)           '记录下未标注的长度2
                End If
                Set skSegment = Part.SketchManager.CreateLine(link(m).Xf / 1000 + d_ref, link(m).Yf / 1000 + link(m).L(0) / 1000, 0#, link(m).Xf / 1000 + d_ref + link(m).L(2) / 1000, link(m).Yf / 1000 + link(m).L(0) / 1000, 0#) '长度1直线
                Part.ClearSelection2 True
                LineX = LineX + 1
                
                If Xr > 0 Or Yr > 0 Then          '添加“替换”待求构件的辅助尺寸
                    If n = 3 Then                  '仅在草图3里操作
                            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000 + d_ref + link(m).L(2) / 1000, link(m).Yf / 1000 + link(m).L(0) / 1000, 0, False, 0, Nothing, 0)
                            Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定未配合的空副点
                            Part.ClearSelection2 True
                            boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", link(m).Xf / 1000 + d_ref + link(m).L(2) / 1000, link(m).Yf / 1000 + link(m).L(0) / 1000, 0, False, 0, Nothing, 0)
                            boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0.05, 0, True, 0, Nothing, 0)
                            Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2 - link(m).L(0) / 2000, -3 * d_ref, 0)
                            Part.ClearSelection2 True
                            no_dimen = no_dimen + 1: Xa(2) = no_dimen           '添加了Xa(2)
                            boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0.05, 0, 0, False, 0, Nothing, 0)
                            boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", link(m).Xf / 1000 + d_ref + link(m).L(2) / 1000, link(m).Yf / 1000 + link(m).L(0) / 1000, 0, True, 0, Nothing, 0)
                            Set myDisplayDim = Part.AddDimension2(-3 * d_ref, (Point_tail(1) + d_ref) / 2, 0)
                            Part.ClearSelection2 True
                            no_dimen = no_dimen + 1: Ya(2) = no_dimen           '添加了Ya(2)
                            no_dimen_Shift = no_dimen_Shift + 2
                            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000 + d_ref + link(m).L(2) / 1000, link(m).Yf / 1000 + link(m).L(0) / 1000, 0, False, 0, Nothing, 0)
                            Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除未配合的空副点固定约束
                            Part.ClearSelection2 True
                        TMP_Cancel_fixed_Recover
                        Xr = 0: Yr = 0
                        dimen_tobe_Delete(2) = no_dimen - no_dimen_Shift + 1          '待删除的长度1，此数值是对于草图1/2来说的
                    End If
                End If
                
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                Set myDisplayDim = Part.AddDimension2(link(m).Xf / 1000 + d_ref + link(m).L(2) / 2000, link(m).Yf / 1000 + link(m).L(0) / 1000 + 2 * d_ref, 0)
                Part.ClearSelection2 True
                no_dimen = no_dimen + 1
                If n = 1 Then
                    ReDim Preserve IsDimension(LineX)
                    IsDimension(LineX) = True                       '表示长度1直线尺寸已标注
                End If
                boolstatus = Part.Extension.SelectByID2("Point6", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000 + link(m).L(0) / 1000, 0, False, 0, Nothing, 0)
                Part.SketchAddConstraints "sgFIXED"                                                                '暂时固定首副点
                Part.ClearSelection2 True
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000 + d_ref, link(m).Yf / 1000 + link(m).L(0) / 1000, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000 + link(m).L(0) / 1000, 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgMERGEPOINTS"
                Part.ClearSelection2 True
                boolstatus = Part.Extension.SelectByID2("Point6", "SKETCHPOINT", link(m).Xf / 1000 + link(m).L(2) / 1000, link(m).Yf / 1000 + link(m).L(0) / 1000, 0, False, 0, Nothing, 0)
                Part.SketchAddConstraints "sgFIXED"                                                                 '暂时固定空副点。如果这里是复合铰链，那么在从这里开始下一条链或者其他构件与其配合这两者之一第一次发生时，这个固定约束还不能删除，第二次发生两者之一才能删除
                Part.ClearSelection2 True
                If link(m).ch(0) Then
                    If n = 1 Then
                        link(m).Point_ch(0, 0) = link(m).Xf / 1000 + link(m).L(2) / 1000                                '记录复合铰链坐标
                        link(m).Point_ch(0, 1) = link(m).Yf / 1000 + link(m).L(0) / 1000
                    End If
                End If
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000 + d_ref, link(m).Yf / 1000, 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgMERGEPOINTS"
                Part.ClearSelection2 True
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000 + link(m).L(1) / 1000, link(m).Yf / 1000, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000 + link(m).L(2) / 1000, link(m).Yf / 1000 + link(m).L(0) / 1000, 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgMERGEPOINTS"
                Part.ClearSelection2 True
                boolstatus = Part.Extension.SelectByID2("Line" & LineX - 3, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line" & LineX - 2, "SKETCHSEGMENT", link(m).Xf / 1000, Point_tail(1) - 0.1, 0, True, 0, Nothing, 0)
                Set myDisplayDim = Part.AddDimension2(Point_tail(0) - 0.05, Point_tail(1) - 0.1, 0) '添加上首P副的内部角度尺寸（须做更改）
                Part.ClearSelection2 True
                no_dimen = no_dimen + 1
                boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
                Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
                myDimension.SystemValue = link(m).beta(0) / 180 * pi
                Part.ClearSelection2 True
                If n = 1 Then
                    link(m).Point_unset(0) = link(m).Xf / 1000
                    link(m).Point_unset(1) = link(m).Yf / 1000 + link(m).L(0) / 1000          '记录首副点坐标(作最后配合用）
                    link(m).Point_Empty(0) = link(m).Xf / 1000 + link(m).L(2) / 1000
                    link(m).Point_Empty(1) = link(m).Yf / 1000 + link(m).L(0) / 1000          '记录空副点坐标
                    ReDim Preserve Point_undimen_ref(1, LineX - 1)
                    Point_undimen_ref(0, LineX - 1) = link(m).Point_Empty(0)
                    Point_undimen_ref(1, LineX - 1) = link(m).Point_Empty(1)                  '记录一个补加尺寸的参考点
                End If
                If link(m).PorR(2) = 1 Then            '空余副为P副
                    Set skSegment = Part.SketchManager.CreateLine(link(m).Xf / 1000 + link(m).L(2) / 1000 + d_ref, link(m).Yf / 1000 + link(m).L(0) / 1000, 0#, link(m).Xf / 1000 + link(m).L(2) / 1000 + d_ref, link(m).Yf / 1000 + link(m).L(0) / 1000 + 0.045, 0#)
                    Part.ClearSelection2 True
                    LineX = LineX + 1
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                    Part.SketchAddConstraints "sgSAMELENGTH"                 '添加P副与参考P副直线的相等约束
                    Part.ClearSelection2 True
                    If n = 1 Then
                        ReDim Preserve IsDimension(LineX)
                        IsDimension(LineX) = True               '看作P副直线的尺寸已标注上
                        link(m).Line_Empty = LineX              '记录下此空余P的直线序号，方便后续配合时使用
                    End If
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000 + link(m).L(2) / 1000 + d_ref, link(m).Yf / 1000 + link(m).L(0) / 1000, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000 + link(m).L(2) / 1000, link(m).Yf / 1000 + link(m).L(0) / 1000, 0, True, 0, Nothing, 0)
                    Part.SketchAddConstraints "sgMERGEPOINTS"
                    Part.ClearSelection2 True
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(link(m).Xf / 1000 + link(m).L(2) / 1000 - d_ref, link(m).Yf / 1000 + link(m).L(0) / 1000 + d_ref, 0) '添加上P副的内部角度尺寸（须做更改）
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1
                    boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
                    Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
                    myDimension.SystemValue = link(m).beta(2) / 180 * pi
                    Part.ClearSelection2 True
                End If
                If n < 3 Then           '在草图1、2才执行此操作，防止多加LineX、no_dimen
                    If link(m).PorR(2) = 2 Then         'PRR(固）
                        LineX = LineX - 3
                        no_dimen = no_dimen - 3
                    ElseIf link(m).PorR(2) = 1 Then     'PPR(固）
                        LineX = LineX - 4
                        no_dimen = no_dimen - 4
                    End If
                End If
            End If
        ElseIf link(m).fixed(0) Then        '固定副为②副
            link(m).Line_Unset = LineX            '记录下未与首副点重合的直线序号，其实是上一构件的尾端P副直线
            Set skSegment = Part.SketchManager.CreateLine(link(m).Xf / 1000, link(m).Yf / 1000, 0#, link(m).Xf / 1000 - link(m).L(2) / 1000, link(m).Yf / 1000, 0#)   '长度1直线
            Part.ClearSelection2 True
            LineX = LineX + 1
            If Xr > 0 Or Yr > 0 Then          '添加“替换”待求构件的辅助尺寸
                If n = 3 Then                  '仅在草图3里操作
                    TMP_Cancel_fixed
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000 - link(m).L(2) / 1000, link(m).Yf / 1000, 0, False, 0, Nothing, 0)
                    Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定首副点
                    Part.ClearSelection2 True
                    boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", link(m).Xf / 1000 - link(m).L(2) / 1000, link(m).Yf / 1000, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0.05, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2 - link(m).L(0) / 2000, -d_ref, 0)
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1: Xa(0) = no_dimen           '添加了Xa(0)
                    boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0.05, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", link(m).Xf / 1000 - link(m).L(2) / 1000, link(m).Yf / 1000, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(-2 * d_ref, (Point_tail(1) + d_ref) / 2, 0)
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1: Ya(0) = no_dimen           '添加了Ya(0)
                    no_dimen_Shift = no_dimen_Shift + 2
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000 - link(m).L(2) / 1000, link(m).Yf / 1000, 0, False, 0, Nothing, 0)
                    Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除首副点固定约束
                    Part.ClearSelection2 True
                    Xa(2) = -link(m).Xf: Ya(2) = -link(m).Yf
                    
                End If
            End If
            boolstatus = Part.Extension.SelectByID2("Point6", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000, 0, False, 0, Nothing, 0)
            Part.SketchAddConstraints "sgFIXED"                                                                 '固定空副
            Part.ClearSelection2 True
            Set skSegment = Part.SketchManager.CreateLine(link(m).Xf / 1000 + d_ref, link(m).Yf / 1000, 0#, link(m).Xf / 1000 + d_ref, link(m).Yf / 1000 - link(m).L(1) / 1000, 0#)   '长度2直线
            Part.ClearSelection2 True
            LineX = LineX + 1
            If Xr > 0 Or Yr > 0 Then          '添加“替换”待求构件的辅助尺寸
                If n = 3 Then                  '仅在草图3里操作
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000 + d_ref, link(m).Yf / 1000 - link(m).L(1) / 1000, 0, False, 0, Nothing, 0)
                        Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定未配合的尾副点
                        Part.ClearSelection2 True
                        boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", link(m).Xf / 1000 + d_ref, link(m).Yf / 1000 - link(m).L(1) / 1000, 0, False, 0, Nothing, 0)
                        boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0.05, 0, True, 0, Nothing, 0)
                        Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2 - link(m).L(0) / 2000, -3 * d_ref, 0)
                        Part.ClearSelection2 True
                        no_dimen = no_dimen + 1: Xa(1) = no_dimen           '添加了Xa(1)
                        boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0.05, 0, 0, False, 0, Nothing, 0)
                        boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", link(m).Xf / 1000 + d_ref, link(m).Yf / 1000 - link(m).L(1) / 1000, 0, True, 0, Nothing, 0)
                        Set myDisplayDim = Part.AddDimension2(-3 * d_ref, (Point_tail(1) + d_ref) / 2, 0)
                        Part.ClearSelection2 True
                        no_dimen = no_dimen + 1: Ya(1) = no_dimen           '添加了Ya(1)
                        no_dimen_Shift = no_dimen_Shift + 2
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000 + d_ref, link(m).Yf / 1000 - link(m).L(1) / 1000, 0, False, 0, Nothing, 0)
                        Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除未配合的空副点固定约束
                        Part.ClearSelection2 True
                    TMP_Cancel_fixed_Recover
                    Xr = 0: Yr = 0
                    dimen_tobe_Delete(1) = no_dimen - no_dimen_Shift + 2          '待删除的长度2，此数值是对于草图1/2来说的
                    dimen_tobe_Delete(2) = no_dimen - no_dimen_Shift + 1        '待删除的长度1，此数值是对于草图1/2来说的
                    no_dimen_Shift_A = 2
                End If
            End If
            boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            Set myDisplayDim = Part.AddDimension2(link(m).Xf / 1000 - link(m).L(2) / 2000, link(m).Yf / 1000 + d_ref, 0)
            Part.ClearSelection2 True
            no_dimen = no_dimen + 1
            If n = 1 Then
                ReDim Preserve IsDimension(LineX)
                IsDimension(LineX) = True               '表示长度1的尺寸已标注上
            End If
            boolstatus = Part.Extension.SelectByID2("Point6", "SKETCHPOINT", link(m).Xf / 1000 - link(m).L(2) / 1000, link(m).Yf / 1000, 0, False, 0, Nothing, 0)
            Part.SketchAddConstraints "sgFIXED"                                                                 '暂时固定首副
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            Set myDisplayDim = Part.AddDimension2(link(m).Xf / 1000 + 2 * d_ref, link(m).Yf / 1000 - link(m).L(1) / 2000, 0)
            Part.ClearSelection2 True
            no_dimen = no_dimen + 1
            If n = 1 Then
                ReDim Preserve IsDimension(LineX)
                IsDimension(LineX) = True               '表示长度2的尺寸已标注上
            End If
            
            Set skSegment = Part.SketchManager.CreateLine(link(m).Xf / 1000, link(m).Yf / 1000 - link(m).L(1) / 1000 - d_ref, 0#, link(m).Xf / 1000 - link(m).L(0) / 1000, link(m).Yf / 1000 - link(m).L(1) / 1000 - d_ref, 0#) '长度3直线
            Part.ClearSelection2 True
            LineX = LineX + 1
            If n = 1 Then
                ReDim Preserve undimen(LineX)
                undimen(LineX) = link(m).L(0)           '记录下未标注的长度3
                ReDim Preserve Point_undimen_ref(1, LineX)
                Point_undimen_ref(0, LineX) = link(m).Xf / 1000 - link(m).L(2) / 1000
                Point_undimen_ref(1, LineX) = link(m).Yf / 1000                   '记录一个补加尺寸的参考点
            End If
            If link(m).TBS Then
                Get_dimen(1) = LineX
            End If
                    
            If n = 1 Then
                link(m).Point_unset(0) = link(m).Xf / 1000 - link(m).L(2) / 1000
                link(m).Point_unset(1) = link(m).Yf / 1000                          '记录首副点坐标(作补充配合用）
            End If
            
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000 + d_ref, link(m).Yf / 1000, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000 - link(m).L(1) / 1000 - d_ref, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000 - link(m).L(1) / 1000, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Point6", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000 - link(m).L(1) / 1000, 0, False, 0, Nothing, 0)
            Part.SketchAddConstraints "sgFIXED"                                                                 '暂时固定尾副
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000 - link(m).L(2) / 1000, link(m).Yf / 1000, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000 - link(m).L(0) / 1000, link(m).Yf / 1000 - link(m).L(1) / 1000, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            If link(m - 1).L(0) = 0 Then            '变换上一P副的位姿
                boolstatus = Part.Extension.SelectByID2("Line" & LineX - 3, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                Part.SketchAddConstraints "sgVERTICAL2D"
                Part.ClearSelection2 True
                boolstatus = Part.Extension.SelectByID2("Line" & LineX - 3, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                Part.SketchConstraintsDel 0, "sgVERTICAL2D"
                Part.ClearSelection2 True
            End If
            boolstatus = Part.Extension.SelectByID2("Line" & LineX - 3, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", link(m).Xf / 1000, Point_tail(1) - 0.1, 0, True, 0, Nothing, 0)
            Set myDisplayDim = Part.AddDimension2(link(m).Xf / 1000 - 0.05, link(m).Yf / 1000 - link(m).L(1) / 1000 - 0.1, 0)  '添加上首P副的内部角度尺寸（须做更改）
            Part.ClearSelection2 True
            no_dimen = no_dimen + 1
            boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
            Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
            myDimension.SystemValue = link(m).beta(0) / 180 * pi
            Part.ClearSelection2 True
            If link(m).ch(1) Then                                '尾副是复合铰链就记录坐标
                If n = 1 Then
                    link(m).Point_ch(1, 0) = link(m).Xf / 1000
                    link(m).Point_ch(1, 1) = link(m).Yf / 1000 - link(m).L(1) / 1000
                End If
            ElseIf link(m).ch(1) = False Then
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000 - link(m).L(1) / 1000, 0, False, 0, Nothing, 0)
                Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除对应尾副点的固定约束
                Part.ClearSelection2 True
            End If
            If link(m).PorR(1) = 1 Then             '尾副为P副
                Set skSegment = Part.SketchManager.CreateLine(link(m).Xf / 1000, link(m).Yf / 1000 - link(m).L(1) / 1000 - d_ref, 0#, link(m).Xf / 1000 + 0.045, link(m).Yf / 1000 - link(m).L(1) / 1000 - d_ref, 0#)
                Part.ClearSelection2 True
                LineX = LineX + 1
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgSAMELENGTH"                 '添加P副与参考P副直线的相等约束
                Part.ClearSelection2 True
                If n = 1 Then
                    ReDim Preserve IsDimension(LineX)
                    IsDimension(LineX) = True               '看作P副直线的尺寸已标注上
                End If
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000 - link(m).L(1) / 1000, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000 - link(m).L(1) / 1000 - d_ref, 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgMERGEPOINTS"
                Part.ClearSelection2 True
                boolstatus = Part.Extension.SelectByID2("Line" & LineX - 2, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                Set myDisplayDim = Part.AddDimension2(link(m).Xf / 1000 + d_ref, link(m).Yf / 1000 - link(m).L(1) / 1000 + 0.05, 0)  '添加上P副的内部角度尺寸（须做更改）
                Part.ClearSelection2 True
                no_dimen = no_dimen + 1
                boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
                Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
                myDimension.SystemValue = link(m).beta(1) / 180 * pi
                Part.ClearSelection2 True
            End If
            If n = 3 Then
                Point_tail(0) = link(m).Xf / 1000
                Point_tail(1) = link(m).Yf / 1000 - link(m).L(1) / 1000                   '特殊跳转捕捉点
            End If
            If n < 3 Then           '在草图1、2才执行此操作，防止多加LineX、no_dimen
                If link(m).PorR(1) = 2 Then         'PR(固）R
                    LineX = LineX - 3
                    no_dimen = no_dimen - 3
                ElseIf link(m).PorR(1) = 1 Then     'PR(固）P
                    LineX = LineX - 4
                    no_dimen = no_dimen - 4
                End If
            End If
        End If
    End If
End Function
Function Draw_Fixed_P()     '适用于二副构件
    If link(m).D > 0 Then
        Set skSegment = Part.SketchManager.CreateLine(0, d_ref, 0#, 0, d_ref + link(m).D / 1000, 0#)
        Part.ClearSelection2 True
        LineX = LineX + 1
        boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
        Set myDisplayDim = Part.AddDimension2(-d_ref, link(m).D / 2000 + d_ref, 0)
        Part.ClearSelection2 True
        no_dimen = no_dimen + 1
        If n = 1 Then
            ReDim Preserve IsDimension(LineX)
            IsDimension(LineX) = True               '表示LineX的尺寸已标注上
        End If
        Set skSegment = Part.SketchManager.CreateLine(0, link(m).D / 1000 + 2 * d_ref, 0#, d_ref, link(m).D / 1000 + 2 * d_ref, 0#)
        Part.ClearSelection2 True
        LineX = LineX + 1
        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", 0, d_ref + link(m).D / 1000, 0, False, 0, Nothing, 0)
        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", 0, link(m).D / 1000 + 2 * d_ref, 0, True, 0, Nothing, 0)
        Part.SketchAddConstraints "sgMERGEPOINTS"
        Part.ClearSelection2 True
        boolstatus = Part.Extension.SelectByID2("Point8", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", 0, d_ref, 0, True, 0, Nothing, 0)
        Part.SketchAddConstraints "sgMERGEPOINTS"
        Part.ClearSelection2 True
        boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
        boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
        Set myDisplayDim = Part.AddDimension2(link(m).D / 1250, 0.01, 0) '添加上P副与X轴的角度尺寸（须做更改）
        Part.ClearSelection2 True
        no_dimen = no_dimen + 1
        boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
        boolstatus = Part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
        Part.SketchAddConstraints "sgSAMELENGTH"                 '添加P副与参考P副直线的相等约束
        Part.ClearSelection2 True
        boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
        boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
        Part.SketchAddConstraints "sgPERPENDICULAR"                     '添加该直线与D的垂直约束
        Part.ClearSelection2 True
        If n = 1 Then
            ReDim Preserve IsDimension(LineX)
            IsDimension(LineX) = True               '看作P副直线的尺寸已标注上
        End If
        If link(m).alpha > 120 Then
            j = 20: i = 90
            Do                        '此Do循环是为了角度尺寸不出错
                If i > link(m).alpha - 5 Then
                    j = 1
                ElseIf i <= link(m).alpha - 5 And i > link(m).alpha - 10 Then
                    j = 5
                ElseIf i <= link(m).alpha - 10 And i > link(m).alpha - 20 Then
                    j = 10
                End If
                i = i + j
                boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
                Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
                myDimension.SystemValue = i / 180 * pi
                Part.ClearSelection2 True
                
            Loop Until i = link(m).alpha
        Else
            boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
            Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
            myDimension.SystemValue = link(m).alpha / 180 * pi
            Part.ClearSelection2 True
        End If
    Else
        Set skSegment = Part.SketchManager.CreateLine(0, d_ref, 0#, d_ref, 2 * d_ref, 0#)
        Part.ClearSelection2 True
        LineX = LineX + 1
        boolstatus = Part.Extension.SelectByID2("Point8", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", 0, d_ref, 0, True, 0, Nothing, 0)
        Part.SketchAddConstraints "sgMERGEPOINTS"
        Part.ClearSelection2 True
        boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
        boolstatus = Part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
        Part.SketchAddConstraints "sgSAMELENGTH"                 '添加P副与参考P副直线的相等约束
        Part.ClearSelection2 True
        If n = 1 Then
            ReDim Preserve IsDimension(LineX)
            IsDimension(LineX) = True               '看作P副直线的尺寸已标注上
        End If
        boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
        boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
        Set myDisplayDim = Part.AddDimension2(d_ref, 0.01, 0) '添加上P副与X轴的角度尺寸（须做更改）
        Part.ClearSelection2 True
        no_dimen = no_dimen + 1
        If link(m).alpha > 120 Then
            j = 20: i = 90
            Do                        '此Do循环是为了角度尺寸不出错
                If i > link(m).alpha - 5 Then
                    j = 1
                ElseIf i <= link(m).alpha - 5 And i > link(m).alpha - 10 Then
                    j = 5
                ElseIf i <= link(m).alpha - 10 And i > link(m).alpha - 20 Then
                    j = 10
                End If
                i = i + j
                boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
                Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
                myDimension.SystemValue = i / 180 * pi
                Part.ClearSelection2 True
                
            Loop Until i = link(m).alpha
        Else
            boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
            Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
            myDimension.SystemValue = link(m).alpha / 180 * pi
            Part.ClearSelection2 True
        End If
    End If
End Function
Function DLink_with_Pf()
    Draw_Fixed_P
    If link(m).PorR(0) = 2 Then         '判断首副为R
        If link(m - 1).ch(1) = False Then          '首副不是复合铰链
            If link(m).L(0) > 0 Then        'R与P不重合
                Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) + d_ref, 0#, Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0#)
                Part.ClearSelection2 True
                LineX = LineX + 1
                
                If Xr > 0 Or Yr > 0 Then          '添加“替换”待求构件的辅助尺寸
                    If n = 3 Then                  '仅在草图3里操作
                        TMP_Cancel_fixed
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                        Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定首副点
                        Part.ClearSelection2 True
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                        Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定尾副点
                        Part.ClearSelection2 True
                        boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                        boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0.05, 0, True, 0, Nothing, 0)
                        Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2 - link(m).L(0) / 2000, -d_ref, 0)
                        Part.ClearSelection2 True
                        no_dimen = no_dimen + 1: Xa(0) = no_dimen           '添加了Xa(0)
                        boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0.05, 0, 0, False, 0, Nothing, 0)
                        boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                        Set myDisplayDim = Part.AddDimension2(-2 * d_ref, (Point_tail(1) + d_ref) / 2, 0)
                        Part.ClearSelection2 True
                        no_dimen = no_dimen + 1: Ya(0) = no_dimen           '添加了Ya(0)
                        no_dimen_Shift = no_dimen_Shift + 2
                        boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                        Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2, -2 * d_ref, 0)
                        Part.ClearSelection2 True
                        no_dimen = no_dimen + 1: Xa(1) = no_dimen           '添加了Xa(1)
                        boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                        Set myDisplayDim = Part.AddDimension2(-3 * d_ref, Point_tail(1) / 2, 0)
                        Part.ClearSelection2 True
                        no_dimen = no_dimen + 1: Ya(1) = no_dimen           '添加了Ya(1)
                        no_dimen_Shift = no_dimen_Shift + 2
                        TMP_Cancel_fixed_Recover
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                        Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除首副点固定约束
                        Part.ClearSelection2 True
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                        Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除尾副点固定约束
                        Part.ClearSelection2 True
                    End If
                End If
                
                
                
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1), 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgMERGEPOINTS"
                Part.ClearSelection2 True
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                Set myDisplayDim = Part.AddDimension2(Point_tail(0) + link(m).L(0) / 2000, Point_tail(1) + d_ref, 0)
                Part.ClearSelection2 True
                no_dimen = no_dimen + 1
                
                If Xr > 0 Or Yr > 0 Then          '添加“替换”待求构件的辅助尺寸
                    If n = 3 Then                  '仅在草图3里操作
                        dimen_tobe_Delete(0) = no_dimen - no_dimen_Shift           '此数值是对于草图1/2来说的
                        Xr = 0: Yr = 0
                    End If
                End If
                
                If n = 1 Then
                    ReDim Preserve IsDimension(LineX)
                    IsDimension(LineX) = True               '表示LineX的尺寸已标注上
                End If
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1), 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgCOINCIDENT"            '添加左端点与固定P副直线的重合约束
                Part.ClearSelection2 True
                boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgPERPENDICULAR"                     '添加该直线与固定P副的垂直约束
                Part.ClearSelection2 True
            ElseIf link(m).L(0) = 0 Then        'R与P重合
                Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) + d_ref, 0#, Point_tail(0) + 0.045, Point_tail(1) + d_ref, 0#)
                Part.ClearSelection2 True
                LineX = LineX + 1
                
                If Xr > 0 Or Yr > 0 Then          '添加“替换”待求构件的辅助尺寸
                    If n = 3 Then                  '仅在草图3里操作
                        TMP_Cancel_fixed
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                        Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定首副点
                        Part.ClearSelection2 True
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + 0.045, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                        Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定尾副点
                        Part.ClearSelection2 True
                        boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                        boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0.05, 0, True, 0, Nothing, 0)
                        Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2 - link(m).L(0) / 2000, -d_ref, 0)
                        Part.ClearSelection2 True
                        no_dimen = no_dimen + 1: Xa(0) = no_dimen           '添加了Xa(0)
                        boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0.05, 0, 0, False, 0, Nothing, 0)
                        boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                        Set myDisplayDim = Part.AddDimension2(-2 * d_ref, (Point_tail(1) + d_ref) / 2, 0)
                        Part.ClearSelection2 True
                        no_dimen = no_dimen + 1: Ya(0) = no_dimen           '添加了Ya(0)
                        no_dimen_Shift = no_dimen_Shift + 2
                        boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + 0.045, Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                        Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2, -2 * d_ref, 0)
                        Part.ClearSelection2 True
                        no_dimen = no_dimen + 1: Xa(1) = no_dimen           '添加了Xa(1)
                        boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + 0.045, Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                        Set myDisplayDim = Part.AddDimension2(-3 * d_ref, Point_tail(1) / 2, 0)
                        Part.ClearSelection2 True
                        no_dimen = no_dimen + 1: Ya(1) = no_dimen           '添加了Ya(1)
                        no_dimen_Shift = no_dimen_Shift + 2
                        TMP_Cancel_fixed_Recover
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                        Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除首副点固定约束
                        Part.ClearSelection2 True
                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + 0.045, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                        Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除尾副点固定约束
                        Part.ClearSelection2 True
                    End If
                End If
                
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1), 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgMERGEPOINTS"
                Part.ClearSelection2 True
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                Set myDisplayDim = Part.AddDimension2(Point_tail(0) + 0.02, Point_tail(1) + d_ref, 0)
                Part.ClearSelection2 True
                no_dimen = no_dimen + 1
                
                If Xr > 0 Or Yr > 0 Then          '添加“替换”待求构件的辅助尺寸
                    If n = 3 Then                  '仅在草图3里操作
                        dimen_tobe_Delete(0) = no_dimen - no_dimen_Shift           '此数值是对于草图1/2来说的
                        Xr = 0: Yr = 0
                    End If
                End If
                
                If n = 1 Then
                    ReDim Preserve IsDimension(LineX)
                    IsDimension(LineX) = True               '看作P副直线的尺寸已标注上
                End If
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgCOLINEAR"
                Part.ClearSelection2 True
                
            End If
            
            
            If n < 3 Then           '在草图1、2才执行此操作，防止多加LineX、no_dimen
                If link(m).D > 0 Then
                    For i1 = 1 To m
                        If link(i1).PE Or link(i1).RE Then     '若还有空副就减
                            LineX = LineX - 3
                            no_dimen = no_dimen - 3
                            Exit For
                        ElseIf i1 = m Then
                            For i2 = 1 To m
                                If link(i2).ch(0) Then               '若还有②处复合铰链就减
                                    LineX = LineX - 3
                                    no_dimen = no_dimen - 3
                                    Exit For
                                ElseIf i2 = m Then
                                    For i3 = 1 To m
                                        If link(i3).ch(1) Then               '若还有③处复合铰链或者二副构件的尾副是复合铰就减
                                            LineX = LineX - 3
                                            no_dimen = no_dimen - 3
                                            Exit For
                                        ElseIf i3 = m Then
                                            ReDim Preserve undimen(LineX)
                                            For i4 = 3 To LineX
                                                If undimen(i4) > 0 Then          '如果有还未添加尺寸的直线就暂时不减相应尺寸数（前提是程序能够以跳进这个最内层的循环，也就是空副和固定铰链都已经完成）
                                                    no_dimen_not_minus = no_dimen_not_minus + 1
                                                ElseIf i4 = LineX Then
                                                    no_dimen_not_minus = no_dimen_not_minus + 3: LineX_not_minus = LineX_not_minus + 3        '这里+1是因为此RR（固）副的尺寸数和直线数未减，在End_Link_Judge中减去
                                                End If
                                            Next
                                            For i5 = 1 To m
                                                If link(i5).Line_Unfixed Then     '如果有还需要构造但是还没构造的直线就暂时不减相应直线数和相应的尺寸数（前提是程序能够以跳进这个最内层的循环，也就是空副和固定铰链都已经完成）
                                                    If link(i5).D > 0 Then
                                                        LineX_not_minus = LineX_not_minus + 1: no_dimen_not_minus = no_dimen_not_minus + 2      '1、补充直线目前只是三副构件固定P副，这两个变量分别变化1、2
                                                    ElseIf link(i5).D = 0 Then
                                                        LineX_not_minus = LineX_not_minus + 1: no_dimen_not_minus = no_dimen_not_minus + 1      '2、补充直线目前只是三副构件固定P副，这两个变量同时变化1
                                                    End If
                                                End If
                                            Next
                                        End If
                                    Next
                                End If
                            Next
                        End If
                    Next
                Else
                    For i1 = 1 To m
                        If link(i1).PE Or link(i1).RE Then     '若还有空副就减
                            LineX = LineX - 2
                            no_dimen = no_dimen - 2
                            Exit For
                        ElseIf i1 = m Then
                            For i2 = 1 To m
                                If link(i2).ch(0) Then               '若还有②处复合铰链就减
                                    LineX = LineX - 2
                                    no_dimen = no_dimen - 2
                                    Exit For
                                ElseIf i2 = m Then
                                    For i3 = 1 To m
                                        If link(i3).ch(1) Then               '若还有③处复合铰链或者二副构件的尾副是复合铰就减
                                            LineX = LineX - 2
                                            no_dimen = no_dimen - 2
                                            Exit For
                                        ElseIf i3 = m Then
                                            ReDim Preserve undimen(LineX)
                                            For i4 = 3 To LineX
                                                If undimen(i4) > 0 Then          '如果有还未添加尺寸的直线就暂时不减相应尺寸数（前提是程序能够以跳进这个最内层的循环，也就是空副和固定铰链都已经完成）
                                                    no_dimen_not_minus = no_dimen_not_minus + 1
                                                ElseIf i4 = LineX Then
                                                    no_dimen_not_minus = no_dimen_not_minus + 2: LineX_not_minus = LineX_not_minus + 2        '这里+1是因为此RR（固）副的尺寸数和直线数未减，在End_Link_Judge中减去
                                                End If
                                            Next
                                            For i5 = 1 To m
                                                If link(i5).Line_Unfixed Then     '如果有还需要构造但是还没构造的直线就暂时不减相应直线数和相应的尺寸数（前提是程序能够以跳进这个最内层的循环，也就是空副和固定铰链都已经完成）
                                                    If link(i5).D > 0 Then
                                                        LineX_not_minus = LineX_not_minus + 1: no_dimen_not_minus = no_dimen_not_minus + 2      '1、补充直线目前只是三副构件固定P副，这两个变量分别变化1、2
                                                    ElseIf link(i5).D = 0 Then
                                                        LineX_not_minus = LineX_not_minus + 1: no_dimen_not_minus = no_dimen_not_minus + 1      '2、补充直线目前只是三副构件固定P副，这两个变量同时变化1
                                                    End If
                                                End If
                                            Next
                                        End If
                                    Next
                                End If
                            Next
                        End If
                    Next
                End If
            End If
        Else                                 '首副是复合铰链
            Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) + d_ref, 0#, Point_tail(0) + link(m).L(0) / 1000, Point_tail(1) + d_ref, 0#)
            Part.ClearSelection2 True
            LineX = LineX + 1
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1), 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            If n = 1 Then
                ReDim Preserve undimen(LineX)
                undimen(LineX) = link(m).L(0)           '记录下未标注的长度1
                ReDim Preserve Point_undimen_ref(1, LineX)
                Point_undimen_ref(0, LineX) = Point_tail(0)
                Point_undimen_ref(1, LineX) = Point_tail(1)                  '记录一个补加尺寸的参考点
            End If
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + link(m).L(0) / 1000, Point_tail(1), 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgCOINCIDENT"            '添加右端点与固定P副直线的重合约束
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgPERPENDICULAR"                     '添加该直线与固定P副的垂直约束
            Part.ClearSelection2 True
            If n < 3 Then           '在草图1、2才执行此操作，防止多加LineX、no_dimen
                If link(m).D > 0 Then
                    LineX = LineX - 3: no_dimen = no_dimen - 2      '包含了Draw_Fixed_P中的计数
                Else
                    LineX = LineX - 2: no_dimen = no_dimen - 1
                End If
            End If
        End If
    ElseIf link(m).PorR(0) = 1 Then        '判断首副为P
        Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) + d_ref, 0#, Point_tail(0) + 0.045, Point_tail(1) + d_ref, 0#)
        Part.ClearSelection2 True
        LineX = LineX + 1
        
        If Xr > 0 Or Yr > 0 Then          '添加“替换”待求构件的辅助尺寸
            If n = 3 Then                  '仅在草图3里操作
                Equal_tobe_Delete = LineX
                TMP_Cancel_fixed
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定首副点
                Part.ClearSelection2 True
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + 0.045, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定尾副点
                Part.ClearSelection2 True
                boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0.05, 0, True, 0, Nothing, 0)
                Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2 - link(m).L(0) / 2000, -d_ref, 0)
                Part.ClearSelection2 True
                no_dimen = no_dimen + 1: Xa(0) = no_dimen           '添加了Xa(0)
                boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0.05, 0, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                Set myDisplayDim = Part.AddDimension2(-2 * d_ref, (Point_tail(1) + d_ref) / 2, 0)
                Part.ClearSelection2 True
                no_dimen = no_dimen + 1: Ya(0) = no_dimen           '添加了Ya(0)
                no_dimen_Shift = no_dimen_Shift + 2
                boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + 0.045, Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2, -2 * d_ref, 0)
                Part.ClearSelection2 True
                no_dimen = no_dimen + 1: Xa(1) = no_dimen           '添加了Xa(1)
                boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + 0.045, Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                Set myDisplayDim = Part.AddDimension2(-3 * d_ref, Point_tail(1) / 2, 0)
                Part.ClearSelection2 True
                no_dimen = no_dimen + 1: Ya(1) = no_dimen           '添加了Ya(1)
                no_dimen_Shift = no_dimen_Shift + 2
                TMP_Cancel_fixed_Recover
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除首副点固定约束
                Part.ClearSelection2 True
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + 0.045, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除尾副点固定约束
                Part.ClearSelection2 True
                Xr = 0: Yr = 0
            End If
        End If
        
        boolstatus = Part.Extension.SelectByID2("Point6", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
        Part.SketchAddConstraints "sgFIXED"                                                                '固定上直线左端点
        Part.ClearSelection2 True
        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0) + 0.045, Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
        boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
        Part.SketchAddConstraints "sgCOINCIDENT"            '添加右端点与固定P副直线的重合约束
        Part.ClearSelection2 True
        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
        Part.SketchConstraintsDel 0, "sgFIXED"                   '删除上面辅助的固定约束
        Part.ClearSelection2 True
        boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
        boolstatus = Part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
        Part.SketchAddConstraints "sgSAMELENGTH"                 '添加P副与参考P副直线的相等约束
        Part.ClearSelection2 True
        If link(m).alpha <> 90 And link(m).alpha <> 180 And link(m).alpha <> 270 And link(m).alpha Then
            If Point_tail(1) + d_ref < Y_fixed_P(Point_tail(0)) And Point_tail(0) < X_fixed_P(Point_tail(1) + d_ref) Then       '直线在A点的右上方
                boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", Point_tail(0), Y_fixed_P(Point_tail(0)), 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", Point_tail(0), Point_tail(1), 0, True, 0, Nothing, 0)
                Set myDisplayDim = Part.AddDimension2(Point_tail(0), (Point_tail(1) + Y_fixed_P(Point_tail(0))) / 2, 0)         '添加固定P副与首P副的角度尺寸（须做更改）
                Part.ClearSelection2 True
                no_dimen = no_dimen + 1
                boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
                Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
                myDimension.SystemValue = link(m).beta(0) / 180 * pi
                Part.ClearSelection2 True
            ElseIf Point_tail(1) + d_ref < Y_fixed_P(Point_tail(0)) And Point_tail(0) > X_fixed_P(Point_tail(1) + d_ref) Then   '直线在A点的左上方
                boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", X_fixed_P(Point_tail(1)), Point_tail(1), 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", Point_tail(0), Point_tail(1), 0, True, 0, Nothing, 0)
                Set myDisplayDim = Part.AddDimension2((Point_tail(0) + X_fixed_P(Point_tail(1))) / 2, Point_tail(1), 0)        '添加固定P副与首P副的角度尺寸（须做更改）
                Part.ClearSelection2 True
                no_dimen = no_dimen + 1
                boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
                Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
                myDimension.SystemValue = link(m).beta(0) / 180 * pi
                Part.ClearSelection2 True
            ElseIf Point_tail(1) + d_ref > Y_fixed_P(Point_tail(0)) And Point_tail(0) > X_fixed_P(Point_tail(1) + d_ref) Then   '直线在A点的左下方
                boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", X_fixed_P(Point_tail(1)), Point_tail(1), 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", Point_tail(0), Point_tail(1), 0, True, 0, Nothing, 0)
                Set myDisplayDim = Part.AddDimension2(Point_tail(0) + d_ref, Point_tail(1) + d_ref, 0)    '添加固定P副与首P副的角度尺寸（须做更改）
                Part.ClearSelection2 True
                no_dimen = no_dimen + 1
                boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
                Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
                myDimension.SystemValue = link(m).beta(0) / 180 * pi
                Part.ClearSelection2 True
            ElseIf Point_tail(1) + d_ref > Y_fixed_P(Point_tail(0)) And Point_tail(0) < X_fixed_P(Point_tail(1) + d_ref) Then   '直线在A点的右下方
                boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", X_fixed_P(Point_tail(1)), Point_tail(1), 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", Point_tail(0), Point_tail(1), 0, True, 0, Nothing, 0)
                Set myDisplayDim = Part.AddDimension2(Point_tail(0), Point_tail(1) + 2 * d_ref, 0)  '添加固定P副与首P副的角度尺寸（须做更改）
                Part.ClearSelection2 True
                no_dimen = no_dimen + 1
                boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
                Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
                myDimension.SystemValue = link(m).beta(0) / 180 * pi
                Part.ClearSelection2 True
            End If
        ElseIf link(m).alpha = 0 Then
            If link(m).D > 0 Then
                boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", link(m).D / 1000, Point_tail(1), 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", Point_tail(0), Point_tail(1), 0, True, 0, Nothing, 0)
                Set myDisplayDim = Part.AddDimension2(Point_tail(0), Point_tail(1) + 2 * d_ref, 0)  '添加固定P副与首P副的角度尺寸（须做更改）
                Part.ClearSelection2 True
                no_dimen = no_dimen + 1
                boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
                Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
                myDimension.SystemValue = link(m).beta(0) / 180 * pi
                Part.ClearSelection2 True
            ElseIf link(m).D = 0 Then
                If Point_tail(1) >= 0 Then
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", Point_tail(0), 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", Point_tail(0), Point_tail(1), 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(Point_tail(0), Point_tail(1) + 2 * d_ref, 0)  '添加固定P副与首P副的角度尺寸（须做更改）
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1
                    boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
                    Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
                    myDimension.SystemValue = link(m).beta(0) / 180 * pi
                Else
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", Point_tail(0), 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", Point_tail(0), Point_tail(1), 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(Point_tail(0), (Point_tail(1) + d_ref) / 2, 0) '添加固定P副与首P副的角度尺寸（须做更改）
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1
                    boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
                    Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
                    myDimension.SystemValue = link(m).beta(0) / 180 * pi
                End If
            End If
        ElseIf link(m).alpha = 90 Then
            If link(m).D <> 0 Then
                If link(m).D / 1000 >= Point_tail(1) + d_ref Then
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", Point_tail(0), link(m).D / 1000, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", Point_tail(0), Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(Point_tail(0), (Point_tail(1) + d_ref + link(m).D / 1000) / 2, 0) '添加固定P副与首P副的角度尺寸（须做更改）
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1
                    boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
                    Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
                    myDimension.SystemValue = link(m).beta(0) / 180 * pi
                Else
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", Point_tail(0), link(m).D / 1000, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", Point_tail(0), Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(Point_tail(0), Point_tail(1) + 2 * d_ref, 0) '添加固定P副与首P副的角度尺寸（须做更改）
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1
                    boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
                    Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
                    myDimension.SystemValue = link(m).beta(0) / 180 * pi
                End If
            ElseIf link(m).D = 0 Then
                boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", 0, Point_tail(1), 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", Point_tail(0), Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                Set myDisplayDim = Part.AddDimension2(Point_tail(0), Point_tail(1), 0) '添加固定P副与首P副的角度尺寸（须做更改）
                Part.ClearSelection2 True
                no_dimen = no_dimen + 1
                boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
                Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
                myDimension.SystemValue = link(m).beta(0) / 180 * pi
            End If
        ElseIf link(m).alpha = 270 Then
            If link(m).D / 1000 >= Point_tail(1) + d_ref Then
                boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", Point_tail(0), link(m).D / 1000, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", Point_tail(0), Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                Set myDisplayDim = Part.AddDimension2(Point_tail(0), (Point_tail(1) + d_ref + link(m).D / 1000) / 2, 0) '添加固定P副与首P副的角度尺寸（须做更改）
                Part.ClearSelection2 True
                no_dimen = no_dimen + 1
                boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
                Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
                myDimension.SystemValue = link(m).beta(0) / 180 * pi
            Else
                boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", Point_tail(0), link(m).D / 1000, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", Point_tail(0), Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                Set myDisplayDim = Part.AddDimension2(Point_tail(0), Point_tail(1) + 2 * d_ref, 0) '添加固定P副与首P副的角度尺寸（须做更改）
                Part.ClearSelection2 True
                no_dimen = no_dimen + 1
                boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
                Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
                myDimension.SystemValue = link(m).beta(0) / 180 * pi
            End If
        End If
        If link(m).D > 0 Then
            boolstatus = Part.Extension.SelectByID2("Line" & LineX - 3, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgCOLINEAR"                   '选择该直线与上一P副直线共线
            Part.ClearSelection2 True
        Else
            boolstatus = Part.Extension.SelectByID2("Line" & LineX - 2, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgCOLINEAR"                   '选择该直线与上一P副直线共线
            Part.ClearSelection2 True
        End If
        If n < 3 Then           '在草图1、2才执行此操作，防止多加LineX、no_dimen
            If link(m).D > 0 Then
                For i1 = 1 To m
                    If link(i1).PE Or link(i1).RE Then     '若还有空副就减
                        LineX = LineX - 3
                        no_dimen = no_dimen - 3
                        Exit For
                    ElseIf i1 = m Then
                        For i2 = 1 To m
                            If link(i2).ch(0) Then               '若还有②处复合铰链就减
                                LineX = LineX - 3
                                no_dimen = no_dimen - 3
                                Exit For
                            ElseIf i2 = m Then
                                For i3 = 1 To m
                                    If link(i3).ch(1) Then               '若还有③处复合铰链或者二副构件的尾副是复合铰就减
                                        LineX = LineX - 3
                                        no_dimen = no_dimen - 3
                                        Exit For
                                    ElseIf i3 = m Then
                                        ReDim Preserve undimen(LineX)
                                        For i4 = 3 To LineX
                                            If undimen(i4) > 0 Then          '如果有还未添加尺寸的直线就暂时不减相应尺寸数（前提是程序能够以跳进这个最内层的循环，也就是空副和固定铰链都已经完成）
                                                no_dimen_not_minus = no_dimen_not_minus + 1
                                            ElseIf i4 = LineX Then
                                                no_dimen_not_minus = no_dimen_not_minus + 3: LineX_not_minus = LineX_not_minus + 3        '这里+1是因为此RR（固）副的尺寸数和直线数未减，在End_Link_Judge中减去
                                            End If
                                        Next
                                        For i5 = 1 To m
                                            If link(i5).Line_Unfixed Then     '如果有还需要构造但是还没构造的直线就暂时不减相应直线数和相应的尺寸数（前提是程序能够以跳进这个最内层的循环，也就是空副和固定铰链都已经完成）
                                                If link(i5).D > 0 Then
                                                    LineX_not_minus = LineX_not_minus + 1: no_dimen_not_minus = no_dimen_not_minus + 2      '1、补充直线目前只是三副构件固定P副，这两个变量分别变化1、2
                                                ElseIf link(i5).D = 0 Then
                                                    LineX_not_minus = LineX_not_minus + 1: no_dimen_not_minus = no_dimen_not_minus + 1      '2、补充直线目前只是三副构件固定P副，这两个变量同时变化1
                                                End If
                                            End If
                                        Next
                                    End If
                                Next
                            End If
                        Next
                    End If
                Next
            Else
                For i1 = 1 To m
                    If link(i1).PE Or link(i1).RE Then     '若还有空副就减
                        LineX = LineX - 2
                        no_dimen = no_dimen - 2
                        Exit For
                    ElseIf i1 = m Then
                        For i2 = 1 To m
                            If link(i2).ch(0) Then               '若还有②处复合铰链就减
                                LineX = LineX - 2
                                no_dimen = no_dimen - 2
                                Exit For
                            ElseIf i2 = m Then
                                For i3 = 1 To m
                                    If link(i3).ch(1) Then               '若还有③处复合铰链或者二副构件的尾副是复合铰就减
                                        LineX = LineX - 2
                                        no_dimen = no_dimen - 2
                                        Exit For
                                    ElseIf i3 = m Then
                                        ReDim Preserve undimen(LineX)
                                        For i4 = 3 To LineX
                                            If undimen(i4) > 0 Then          '如果有还未添加尺寸的直线就暂时不减相应尺寸数（前提是程序能够以跳进这个最内层的循环，也就是空副和固定铰链都已经完成）
                                                no_dimen_not_minus = no_dimen_not_minus + 1
                                            ElseIf i4 = LineX Then
                                                no_dimen_not_minus = no_dimen_not_minus + 2: LineX_not_minus = LineX_not_minus + 2        '这里+1是因为此RR（固）副的尺寸数和直线数未减，在End_Link_Judge中减去
                                            End If
                                        Next
                                        For i5 = 1 To m
                                            If link(i5).Line_Unfixed Then     '如果有还需要构造但是还没构造的直线就暂时不减相应直线数和相应的尺寸数（前提是程序能够以跳进这个最内层的循环，也就是空副和固定铰链都已经完成）
                                                If link(i5).D > 0 Then
                                                    LineX_not_minus = LineX_not_minus + 1: no_dimen_not_minus = no_dimen_not_minus + 2      '1、补充直线目前只是三副构件固定P副，这两个变量分别变化1、2
                                                ElseIf link(i5).D = 0 Then
                                                    LineX_not_minus = LineX_not_minus + 1: no_dimen_not_minus = no_dimen_not_minus + 1      '2、补充直线目前只是三副构件固定P副，这两个变量同时变化1
                                                End If
                                            End If
                                        Next
                                    End If
                                Next
                            End If
                        Next
                    End If
                Next
            End If
        End If
    End If
    Call End_Link_Judge
End Function
Function DLink_with_Rf()
    If link(m).PorR(0) = 2 Then        '判断首副为R
        If Isch_TMP_fixed = False And (TMP_fixed(0) <> 0 Or TMP_fixed(1) <> 0) Then    '该点不是复合铰链
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", TMP_fixed(0), TMP_fixed(1), 0, False, 0, Nothing, 0)
            Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除暂时固定点的固定约束
            Part.ClearSelection2 True
        End If
        If link(m - 1).ch(1) = False Then          '首副不是复合铰链
            Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) + d_ref, 0#, link(m).Xf / 1000, link(m).Yf / 1000, 0#)       '直线右端点为固定点
            Part.ClearSelection2 True
            LineX = LineX + 1
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000, 0, False, 0, Nothing, 0)
            Part.SketchAddConstraints "sgFIXED"                                                                '固定此固定R副
            Part.ClearSelection2 True
            If Xr > 0 Or Yr > 0 Then          '添加“替换”待求构件的辅助尺寸
                If n = 3 Then                  '仅在草图3里操作
                    TMP_Cancel_fixed
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                    Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定首副点
                    Part.ClearSelection2 True
                    boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0.05, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2 - link(m).L(0) / 2000, -d_ref, 0)
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1: Xa(0) = no_dimen           '添加了Xa(0)
                    boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0.05, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(-2 * d_ref, (Point_tail(1) + d_ref) / 2, 0)
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1: Ya(0) = no_dimen           '添加了Ya(0)
                    no_dimen_Shift = no_dimen_Shift + 2
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                    Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除首副点固定约束
                    Part.ClearSelection2 True
                    TMP_Cancel_fixed_Recover
                    Xa(1) = -link(m).Xf: Ya(1) = -link(m).Yf
                End If
            End If
            If link(m).Active Then                  '此构件为主动构件
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                Part.SketchAddConstraints "sgFIXED"                                                                '暂时固定首副
                Part.ClearSelection2 True
                Dim Angle_of_RR As Integer                '代表此直线绘制时，x轴逆时针到其的角度所在的象限
                Angle_of_RR = Act_Position_test(Point_tail(0), Point_tail(1) + d_ref, link(m).Xf / 1000, link(m).Yf / 1000)
                If Angle_of_RR = 1 Or Angle_of_RR = 2 Then
                    Set skSegment = Part.SketchManager.CreateLine(link(m).Xf / 1000, link(m).Yf / 1000 + d_ref, 0#, link(m).Xf / 1000 + 3 * d_ref, link(m).Yf / 1000 + d_ref, 0#)
                    Part.ClearSelection2 True
                    LineX = LineX + 1
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000 + d_ref, 0, True, 0, Nothing, 0)
                    Part.SketchAddConstraints "sgMERGEPOINTS"
                    Part.ClearSelection2 True
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                    Part.SketchAddConstraints "sgPERPENDICULAR"                 '添加暂时的垂直约束
                    Part.ClearSelection2 True
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                    Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除暂时固定点的固定约束
                    Part.ClearSelection2 True
                ElseIf Angle_of_RR = 3 Or Angle_of_RR = 4 Then
                    Set skSegment = Part.SketchManager.CreateLine(link(m).Xf / 1000, link(m).Yf / 1000 + d_ref, 0#, link(m).Xf / 1000 - 3 * d_ref, link(m).Yf / 1000 + d_ref, 0#)
                    Part.ClearSelection2 True
                    LineX = LineX + 1
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000 + d_ref, 0, True, 0, Nothing, 0)
                    Part.SketchAddConstraints "sgMERGEPOINTS"
                    Part.ClearSelection2 True
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                    Part.SketchAddConstraints "sgPERPENDICULAR"                 '添加暂时的垂直约束
                    Part.ClearSelection2 True
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                    Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除暂时固定点的固定约束
                    Part.ClearSelection2 True
                End If
            End If
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1), 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            If link(m).Active Then                  '此构件为主动构件
                Set skSegment = Part.SketchManager.CreateLine(link(m).Xf / 1000 + d_ref, link(m).Yf / 1000, 0#, link(m).Xf / 1000 + 3 * d_ref, link(m).Yf / 1000, 0#) '画一条加主动位置角度的辅助线
                Part.ClearSelection2 True
                LineX = LineX + 1
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000 + d_ref, link(m).Yf / 1000, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000, 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgMERGEPOINTS"
                Part.ClearSelection2 True
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                Part.SketchAddConstraints "sgHORIZONTAL2D"
                Part.ClearSelection2 True
                boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                Part.SketchConstraintsDel 0, "sgPERPENDICULAR"          '删除垂直约束
                Part.ClearSelection2 True
                If Angle_of_RR = 4 Then
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX - 2, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(link(m).Xf / 1000, link(m).Yf / 1000 - 0.05, 0)               '添加主动位置尺寸
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(link(m).Xf / 1000 + 0.05, link(m).Yf / 1000 - 0.0005, 0)                       '添加主动位置  辅助尺寸
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1
                ElseIf Angle_of_RR = 3 Then
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX - 2, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(link(m).Xf / 1000 - 0.05, link(m).Yf / 1000, 0)              '添加主动位置尺寸
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(link(m).Xf / 1000 + 0.05, link(m).Yf / 1000 + 0.0005, 0)                       '添加主动位置  辅助尺寸
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1
                ElseIf Angle_of_RR = 2 Then
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX - 2, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(link(m).Xf / 1000, link(m).Yf / 1000 + 0.05, 0)               '添加主动位置尺寸
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(link(m).Xf / 1000 + 0.05, link(m).Yf / 1000 + 0.0005, 0)                       '添加主动位置  辅助尺寸
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1
                ElseIf Angle_of_RR = 1 Then
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX - 2, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(link(m).Xf / 1000 + 0.05, link(m).Yf / 1000, 0)               '添加主动位置尺寸
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(link(m).Xf / 1000 + 0.05, link(m).Yf / 1000 - 0.0005, 0)                       '添加主动位置  辅助尺寸
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1
                End If
                If n = 1 Then       '在草图1才执行此操作
                    SD(no_of_SD) = no_dimen - 1
                    SDa(no_of_SD) = no_dimen
                    no_of_SD = no_of_SD + 1
                End If
            End If
            If link(m).Active Then                  '此构件为主动构件
                boolstatus = Part.Extension.SelectByID2("Line" & LineX - 2, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2 + link(m).Xf / 2000, Point_tail(1) / 2 + link(m).Yf / 2000, 0)
                Part.ClearSelection2 True
            Else
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2 + link(m).Xf / 2000, Point_tail(1) / 2 + link(m).Yf / 2000, 0)
                Part.ClearSelection2 True
            End If
            no_dimen = no_dimen + 1
            If Xr > 0 Or Yr > 0 Then          '添加“替换”待求构件的辅助尺寸
                If n = 3 Then                  '仅在草图3里操作
                    dimen_tobe_Delete(0) = no_dimen - no_dimen_Shift           '此数值是对于草图1/2来说的
                    Xr = 0: Yr = 0
                End If
            End If
            boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
            Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
            myDimension.SystemValue = link(m).L(0) / 1000
            Part.ClearSelection2 True
            If n = 1 Then
                ReDim Preserve IsDimension(LineX)
                IsDimension(LineX) = True               '表示LineX的尺寸已标注上
            End If
            If n < 3 Then           '在草图1、2才执行此操作，防止多加LineX、no_dimen
                If link(m).Active Then          '主动构件的情况
                    For i1 = 1 To m
                        If link(i1).PE Or link(i1).RE Then     '若还有空副就减
                            LineX = LineX - 3
                            no_dimen = no_dimen - 3
                            Exit For
                        ElseIf i1 = m Then
                            For i2 = 1 To m
                                If link(i2).ch(0) Then               '若还有②处复合铰链就减
                                    LineX = LineX - 3
                                    no_dimen = no_dimen - 3
                                    Exit For
                                ElseIf i2 = m Then
                                    For i3 = 1 To m
                                        If link(i3).ch(1) Then               '若还有③处复合铰链或者二副构件的尾副是复合铰就减
                                            LineX = LineX - 3
                                            no_dimen = no_dimen - 3
                                            Exit For
                                        ElseIf i3 = m Then
                                            ReDim Preserve undimen(LineX)
                                            For i4 = 3 To LineX
                                                If undimen(i4) > 0 Then          '如果有还未添加尺寸的直线就暂时不减相应尺寸数（前提是程序能够以跳进这个最内层的循环，也就是空副和固定铰链都已经完成）
                                                    no_dimen_not_minus = no_dimen_not_minus + 1
                                                ElseIf i4 = LineX Then
                                                    no_dimen_not_minus = no_dimen_not_minus + 3: LineX_not_minus = LineX_not_minus + 3       '这里+3是因为此RR（固）副的尺寸数和直线数未减，在End_Link_Judge中减去
                                                End If
                                            Next
                                            For i5 = 1 To m
                                                If link(i5).Line_Unfixed Then     '如果有还需要构造但是还没构造的直线就暂时不减相应直线数和相应的尺寸数（前提是程序能够以跳进这个最内层的循环，也就是空副和固定铰链都已经完成）
                                                    If link(i5).D > 0 Then
                                                        LineX_not_minus = LineX_not_minus + 1: no_dimen_not_minus = no_dimen_not_minus + 2      '1、补充直线目前只是三副构件固定P副，这两个变量分别变化1、2
                                                    ElseIf link(i5).D = 0 Then
                                                        LineX_not_minus = LineX_not_minus + 1: no_dimen_not_minus = no_dimen_not_minus + 1      '2、补充直线目前只是三副构件固定P副，这两个变量同时变化1
                                                    End If
                                                End If
                                            Next
                                        End If
                                    Next
                                End If
                            Next
                        End If
                    Next
                Else                            '非主动构件的情况
                    For i1 = 1 To m
                        If link(i1).PE Or link(i1).RE Then     '若还有空副就减
                            LineX = LineX - 1
                            no_dimen = no_dimen - 1
                            Exit For
                        ElseIf i1 = m Then
                            For i2 = 1 To m
                                If link(i2).ch(0) Then               '若还有②处复合铰链就减
                                    LineX = LineX - 1
                                    no_dimen = no_dimen - 1
                                    Exit For
                                ElseIf i2 = m Then
                                    For i3 = 1 To m
                                        If link(i3).ch(1) Then               '若还有③处复合铰链或者二副构件的尾副是复合铰就减
                                            LineX = LineX - 1
                                            no_dimen = no_dimen - 1
                                            Exit For
                                        ElseIf i3 = m Then
                                            ReDim Preserve undimen(LineX)
                                            For i4 = 3 To LineX
                                                If undimen(i4) > 0 Then          '如果有还未添加尺寸的直线就暂时不减相应尺寸数（前提是程序能够以跳进这个最内层的循环，也就是空副和固定铰链都已经完成）
                                                    no_dimen_not_minus = no_dimen_not_minus + 1
                                                ElseIf i4 = LineX Then
                                                    no_dimen_not_minus = no_dimen_not_minus + 1: LineX_not_minus = LineX_not_minus + 1        '这里+1是因为此RR（固）副的尺寸数和直线数未减，在End_Link_Judge中减去
                                                End If
                                            Next
                                            For i5 = 1 To m
                                                If link(i5).Line_Unfixed Then     '如果有还需要构造但是还没构造的直线就暂时不减相应直线数和相应的尺寸数（前提是程序能够以跳进这个最内层的循环，也就是空副和固定铰链都已经完成）
                                                    If link(i5).D > 0 Then
                                                        LineX_not_minus = LineX_not_minus + 1: no_dimen_not_minus = no_dimen_not_minus + 2      '1、补充直线目前只是三副构件固定P副，这两个变量分别变化1、2
                                                    ElseIf link(i5).D = 0 Then
                                                        LineX_not_minus = LineX_not_minus + 1: no_dimen_not_minus = no_dimen_not_minus + 1      '2、补充直线目前只是三副构件固定P副，这两个变量同时变化1
                                                    End If
                                                End If
                                            Next
                                        End If
                                    Next
                                End If
                            Next
                        End If
                    Next
                End If
            End If
            Call End_Link_Judge
        ElseIf link(m - 1).ch(1) Then               '首副是复合铰链
            Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) + d_ref, 0#, link(m).Xf / 1000, link(m).Yf / 1000, 0#)       '直线右端点为固定点
            Part.ClearSelection2 True
            LineX = LineX + 1
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000, 0, False, 0, Nothing, 0)
            Part.SketchAddConstraints "sgFIXED"                                                                '固定此固定R副
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1), 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgMERGEPOINTS"
            Part.ClearSelection2 True
            If n = 1 Then           '草图1才执行此操作
                ReDim Preserve undimen(LineX)
                undimen(LineX) = link(m).L(0)           '记录下未标注的长度1
                ReDim Preserve Point_undimen_ref(1, LineX)
                Point_undimen_ref(0, LineX) = Point_tail(0)
                Point_undimen_ref(1, LineX) = Point_tail(1)                  '记录一个补加尺寸的参考点
            End If
            If n < 3 Then           '在草图1、2才执行此操作，防止多加LineX、no_dimen
                LineX = LineX - 1
            End If
            Call End_Link_Judge
        End If
    ElseIf link(m).PorR(0) = 1 Then       '判断首副为P
        If link(m).L(0) = 0 Then               '判断P与R重合
            Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) + d_ref, 0#, link(m).Xf / 1000, link(m).Yf / 1000, 0#)       '直线右端点为固定点
            Part.ClearSelection2 True
            LineX = LineX + 1
            If Xr > 0 Or Yr > 0 Then          '添加“替换”待求构件的辅助尺寸
                If n = 3 Then                  '仅在草图3里操作
                    Equal_tobe_Delete = LineX
                    TMP_Cancel_fixed
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                    Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定首副点
                    Part.ClearSelection2 True
                    boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0.05, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2 - link(m).L(0) / 2000, -d_ref, 0)
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1: Xa(0) = no_dimen           '添加了Xa(0)
                    boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0.05, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(-2 * d_ref, (Point_tail(1) + d_ref) / 2, 0)
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1: Ya(0) = no_dimen           '添加了Ya(0)
                    no_dimen_Shift = no_dimen_Shift + 2
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                    Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除首副点固定约束
                    Part.ClearSelection2 True
                    TMP_Cancel_fixed_Recover
                    Xa(1) = -link(m).Xf: Ya(1) = -link(m).Yf
                    Xr = 0: Yr = 0
                End If
            End If
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000, 0, False, 0, Nothing, 0)
            Part.SketchAddConstraints "sgFIXED"                                                                '固定此固定R副
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgSAMELENGTH"                 '添加P副与参考P副直线的相等约束
            Part.ClearSelection2 True
            ReDim Preserve IsDimension(LineX)
            IsDimension(LineX) = True               '看作P副直线的尺寸已标注上
            If link(m - 1).Xf Or link(m - 1).P_fixed Then                 '上一构件尾副为固定副，此构件为跳转到空副为P副的情况
                boolstatus = Part.Extension.SelectByID2("Line" & Line_Empty, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgCOLINEAR"                   '选择该直线与空余P副直线共线
                Part.ClearSelection2 True
            Else
                boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgCOLINEAR"                   '选择该直线与上一P副直线共线
                Part.ClearSelection2 True
            End If
            
            If n < 3 Then           '在草图1、2才执行此操作，防止多加LineX、no_dimen
                For i1 = 1 To m
                    If link(i1).PE Or link(i1).RE Then     '若还有空副就减
                        LineX = LineX - 1
                        Exit For
                    ElseIf i1 = m Then
                        For i2 = 1 To m
                            If link(i2).ch(0) Then               '若还有②处复合铰链就减
                                LineX = LineX - 1
                                Exit For
                            ElseIf i2 = m Then
                                For i3 = 1 To m
                                    If link(i3).ch(1) Then               '若还有③处复合铰链或者二副构件的尾副是复合铰就减
                                        LineX = LineX - 1
                                        Exit For
                                    ElseIf i3 = m Then
                                        ReDim Preserve undimen(LineX)
                                        For i4 = 3 To LineX
                                            If undimen(i4) > 0 Then          '如果有还未添加尺寸的直线就暂时不减相应尺寸数（前提是程序能够以跳进这个最内层的循环，也就是空副和固定铰链都已经完成）
                                                no_dimen_not_minus = no_dimen_not_minus + 1
                                            ElseIf i4 = LineX Then
                                                LineX_not_minus = LineX_not_minus + 1        '这里+1是因为此PR（0，固）副的直线数未减，在End_Link_Judge中减去
                                            End If
                                        Next
                                        For i5 = 1 To m
                                            If link(i5).Line_Unfixed Then     '如果有还需要构造但是还没构造的直线就暂时不减相应直线数和相应的尺寸数（前提是程序能够以跳进这个最内层的循环，也就是空副和固定铰链都已经完成）
                                                If link(i5).D > 0 Then
                                                    LineX_not_minus = LineX_not_minus + 1: no_dimen_not_minus = no_dimen_not_minus + 2      '1、补充直线目前只是三副构件固定P副，这两个变量分别变化1、2
                                                ElseIf link(i5).D = 0 Then
                                                    LineX_not_minus = LineX_not_minus + 1: no_dimen_not_minus = no_dimen_not_minus + 1      '2、补充直线目前只是三副构件固定P副，这两个变量同时变化1
                                                End If
                                            End If
                                        Next
                                    End If
                                Next
                            End If
                        Next
                    End If
                Next
            End If
            Call End_Link_Judge
        ElseIf link(m).L(0) <> 0 Then        '判断P与R 不 重合
            Set skSegment = Part.SketchManager.CreateLine(Point_tail(0), Point_tail(1) + d_ref, 0#, link(m).Xf / 1000, link(m).Yf / 1000, 0#)       '直线右端点为固定点
            Part.ClearSelection2 True
            LineX = LineX + 1
            If Xr > 0 Or Yr > 0 Then          '添加“替换”待求构件的辅助尺寸
                If n = 3 Then                  '仅在草图3里操作
                    TMP_Cancel_fixed
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                    Part.SketchAddConstraints "sgFIXED"                                                            '暂时固定首副点
                    Part.ClearSelection2 True
                    boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0.05, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(Point_tail(0) / 2 - link(m).L(0) / 2000, -d_ref, 0)
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1: Xa(0) = no_dimen           '添加了Xa(0)
                    boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0.05, 0, 0, False, 0, Nothing, 0)
                    boolstatus = Part.Extension.SelectByID2("Point100", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, True, 0, Nothing, 0)
                    Set myDisplayDim = Part.AddDimension2(-2 * d_ref, (Point_tail(1) + d_ref) / 2, 0)
                    Part.ClearSelection2 True
                    no_dimen = no_dimen + 1: Ya(0) = no_dimen           '添加了Ya(0)
                    no_dimen_Shift = no_dimen_Shift + 2
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
                    Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除首副点固定约束
                    Part.ClearSelection2 True
                    TMP_Cancel_fixed_Recover
                    Xa(1) = -link(m).Xf: Ya(1) = -link(m).Yf
                End If
            End If
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(m).Xf / 1000, link(m).Yf / 1000, 0, False, 0, Nothing, 0)
            Part.SketchAddConstraints "sgFIXED"                                                                '固定此固定R副
            Part.ClearSelection2 True
            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", Point_tail(0), Point_tail(1) + d_ref, 0, False, 0, Nothing, 0)
            boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
            Part.SketchAddConstraints "sgCOINCIDENT"            '添加左端点与上一P副直线的重合约束
            Part.ClearSelection2 True
            If link(m - 1).Xf Or link(m - 1).P_fixed Then                 '上一构件尾副为固定副，此构件为跳转到空副为P副的情况
                boolstatus = Part.Extension.SelectByID2("Line" & Line_Empty, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgPERPENDICULAR"                     '添加该直线与空余P副的垂直约束
                Part.ClearSelection2 True
            Else
                boolstatus = Part.Extension.SelectByID2("Line" & LineX - 1, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                Part.SketchAddConstraints "sgPERPENDICULAR"                     '添加该直线与上一P副的垂直约束
                Part.ClearSelection2 True
            End If
            boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
            Set myDisplayDim = Part.AddDimension2(Point_tail(0) + link(m).L(0) / 2000, Point_tail(1) + 2 * d_ref, 0)
            Part.ClearSelection2 True
            no_dimen = no_dimen + 1
            If Xr > 0 Or Yr > 0 Then          '添加“替换”待求构件的辅助尺寸
                If n = 3 Then                  '仅在草图3里操作
                    dimen_tobe_Delete(0) = no_dimen - no_dimen_Shift           '此数值是对于草图1/2来说的
                    Xr = 0: Yr = 0
                End If
            End If
            boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
            Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
            myDimension.SystemValue = link(m).L(0) / 1000
            Part.ClearSelection2 True
            If n = 1 Then           '在草图1才执行此操作
                ReDim Preserve IsDimension(LineX)
                IsDimension(LineX) = True               '表示LineX的尺寸已标注上
            End If
            If n < 3 Then           '在草图1、2才执行此操作，防止多加LineX、no_dimen
                For i1 = 1 To m
                    If link(i1).PE Or link(i1).RE Then     '若还有空副就减
                        LineX = LineX - 1
                        no_dimen = no_dimen - 1
                        Exit For
                    ElseIf i1 = m Then
                        For i2 = 1 To m
                            If link(i2).ch(0) Then               '若还有②处复合铰链就减
                                LineX = LineX - 1
                                no_dimen = no_dimen - 1
                                Exit For
                            ElseIf i2 = m Then
                                For i3 = 1 To m
                                    If link(i3).ch(1) Then               '若还有③处复合铰链或者二副构件的尾副是复合铰就减
                                        LineX = LineX - 1
                                        no_dimen = no_dimen - 1
                                        Exit For
                                    ElseIf i3 = m Then
                                        ReDim Preserve undimen(LineX)
                                        For i4 = 3 To LineX
                                            If undimen(i4) > 0 Then          '如果有还未添加尺寸的直线就暂时不减相应尺寸数（前提是程序能够以跳进这个最内层的循环，也就是空副和固定铰链都已经完成）
                                                no_dimen_not_minus = no_dimen_not_minus + 1
                                            ElseIf i4 = LineX Then
                                                no_dimen_not_minus = no_dimen_not_minus + 1: LineX_not_minus = LineX_not_minus + 1        '这里+1是因为此RR（固）副的尺寸数和直线数未减，在End_Link_Judge中减去
                                            End If
                                        Next
                                        For i5 = 1 To m
                                            If link(i5).Line_Unfixed Then     '如果有还需要构造但是还没构造的直线就暂时不减相应直线数和相应的尺寸数（前提是程序能够以跳进这个最内层的循环，也就是空副和固定铰链都已经完成）
                                                If link(i5).D > 0 Then
                                                    LineX_not_minus = LineX_not_minus + 1: no_dimen_not_minus = no_dimen_not_minus + 2      '1、补充直线目前只是三副构件固定P副，这两个变量分别变化1、2
                                                ElseIf link(i5).D = 0 Then
                                                    LineX_not_minus = LineX_not_minus + 1: no_dimen_not_minus = no_dimen_not_minus + 1      '2、补充直线目前只是三副构件固定P副，这两个变量同时变化1
                                                End If
                                            End If
                                        Next
                                    End If
                                Next
                            End If
                        Next
                    End If
                Next
            End If
            Call End_Link_Judge
        End If
    End If
End Function
Function End_Link_Judge()           '尾副判断函数（判断跳转位置，并完成一些补充内容）
    If Isch_TMP_fixed = False And (TMP_fixed(0) <> 0 Or TMP_fixed(1) <> 0) Then    '该暂时固定点不是复合铰链
        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", TMP_fixed(0), TMP_fixed(1), 0, False, 0, Nothing, 0)
        Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除暂时固定点的固定约束
        Part.ClearSelection2 True
    End If
    For i = 0 To m                                                                      '这里的三个变量的初始值都可以优化，但暂时不处理
        If link(i).PE Or link(i).RE Then     '若还有空副就跳转尾副点到空副位置
            If n = 3 Then           '在草图3才执行此操作
                Point_tail(0) = link(i).Point_Empty(0)
                Point_tail(1) = link(i).Point_Empty(1)
            End If
            If link(i).ch(0) = False Then
                boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(i).Point_Empty(0), link(i).Point_Empty(1), 0, False, 0, Nothing, 0)
                Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除空副点的固定约束
                Part.ClearSelection2 True
            End If
            If link(i).PE Then
                Is_Empty_PorR = True            '表明跳转到的空副是P副，此语句未被执行的话就是R副
                Line_Empty = link(i).Line_Empty '赋给另一个变量是考虑到i是此过程内部变量，后续应该不能识别
            End If
            If n = 3 Then           '在草图3才执行此操作
                link(i).PE = False: link(i).RE = False  '清除空副标记
            End If
            Exit For
        ElseIf i = m Then '三副的时候需要改条件，因为最后一构件为三副时有空余副
            For j = 0 To m
                If link(j).ch(0) Then               '若还有②处复合铰链就跳转尾副点到该点（上一条件优先）
                    If n = 3 Then           '在草图3才执行此操作
                        Point_tail(0) = link(j).Point_ch(0, 0)
                        Point_tail(1) = link(j).Point_ch(0, 1)
                    End If
                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(j).Point_ch(0, 0), link(j).Point_ch(0, 1), 0, False, 0, Nothing, 0)
                    Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除②处复合铰链点的固定约束
                    Part.ClearSelection2 True
                    If n = 3 Then           '在草图3才执行此操作
                        link(j).ch(0) = False   '清除复合铰链标记
                    End If
                    Exit For
                ElseIf j = m Then '三副的时候需要改条件，因为最后一构件为三副时空余副可能为复合铰链
                    For k = 0 To m
                        If link(k).ch(1) Then               '若还有③处复合铰链或者二副构件的尾副是复合铰就跳转尾副点到该点（上一条件优先）
                            If n = 3 Then           '在草图3才执行此操作
                                Point_tail(0) = link(k).Point_ch(1, 0)
                                Point_tail(1) = link(k).Point_ch(1, 1)
                            End If
                            boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(k).Point_ch(1, 0), link(k).Point_ch(1, 1), 0, False, 0, Nothing, 0)
                            Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除③处复合铰链点的固定约束
                            Part.ClearSelection2 True
                            If n = 3 Then           '在草图3才执行此操作
                                link(k).ch(1) = False   '清除复合铰链标记
                            End If
                            Exit For
                        ElseIf k = m Then                             '此时应该是机构完成了  注意！！！还有未添加尺寸直线和为添加几何约束的点线的处理 (暂时解决，如下两个for循环）
                            ReDim Preserve undimen(LineX)
                            'Dim undimen_added As Boolean                '定义为一个草图绘制过程中是否补加了直线尺寸的变量，加了为True
                            For u = 3 To LineX                          '补加直线尺寸
                                If undimen(u) Then
                                    boolstatus = Part.Extension.SelectByID2("Line" & u, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                                    Set myDisplayDim = Part.AddDimension2(Point_undimen_ref(0, u) + undimen(u) / 2000, Point_undimen_ref(1, u) + undimen(u) / 2000, 0)
                                    Part.ClearSelection2 True
                                    no_dimen = no_dimen + 1    ': undimen_added = True
                                    boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
                                    Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
                                    myDimension.SystemValue = undimen(u) / 1000
                                    Part.ClearSelection2 True
                                    If n = 1 Then
                                        If Get_dimen(0) = u Then
                                            dimen_tobe_Delete(1) = no_dimen         '记录应删除的长度2(应该也只是在草图1/2里，草图3里应当加上no_dimen_Shift）
                                        End If
                                        If Get_dimen(1) = u Then
                                            For Index = 1 To m
                                                If link(Index).TBS Then
                                                    If link(Index).fixed(0) Then
                                                        If link(Index).PorR(0) = 2 Then
                                                            dimen_tobe_Delete(2) = no_dimen         '记录应删除的长度1(应该也只是在草图1/2里，草图3里应当加上no_dimen_Shift。注意，这个仅当是有固定副的待求构件且为三副构件时才执行）
                                                        ElseIf link(Index).PorR(0) = 1 Then
                                                            dimen_tobe_Delete(0) = no_dimen         '记录应删除的长度3(应该也只是在草图1/2里，草图3里应当加上no_dimen_Shift。注意，这个仅当是有固定副的待求构件且为三副构件时才执行）
                                                        End If
                                                        Exit For
                                                    ElseIf link(Index).fixed(1) Then
                                                        dimen_tobe_Delete(0) = no_dimen         '记录应删除的长度3(应该也只是在草图1/2里，草图3里应当加上no_dimen_Shift。注意，这个仅当是有固定副的待求构件且为三副构件时才执行）
                                                        Exit For
                                                    End If
                                                End If
                                                
                                                'dimen_tobe_Delete(0) = no_dimen         '记录应删除的长度1/3(应该也只是在草图1/2里，草图3里应当加上no_dimen_Shift。注意，这个仅当是有固定副的待求构件且为三副构件时才执行）
                                            Next
                                        End If
                                    End If
                                End If
                            Next
                            
                            'undimen_added = False
                            For o = 0 To m                              '补加点和直线的重合约束
                                If link(o).Line_Unset Then
                                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(o).Point_unset(0), link(o).Point_unset(1), 0, False, 0, Nothing, 0)
                                    boolstatus = Part.Extension.SelectByID2("Line" & link(o).Line_Unset, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                                    Part.SketchAddConstraints "sgCOINCIDENT"
                                    Part.ClearSelection2 True
                                    boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(o).Point_unset(0), link(o).Point_unset(1), 0, False, 0, Nothing, 0)
                                    Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除对应首副点的固定约束
                                    Part.ClearSelection2 True
                                    If n = 3 Then               '在草图3才执行此操作
                                        link(o).Line_Unset = 0              '清除未约束的标记
                                    End If
                                End If
                            Next
                            For q = 0 To no_of_SD                       '让辅助位置尺寸变0
                                If SDa(q) = 0 Then
                                Else
                                    If n = 3 Then
                                        If Xa(0) < SDa(q) Or Xa(1) < SDa(q) Then
                                            SDa(q) = SDa(q) + no_dimen_Shift
                                        End If
                                        
                                    End If
                                    boolstatus = Part.Extension.SelectByID2("D" & SDa(q) & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 10, 10, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
                                    Set myDimension = Part.Parameter("D" & SDa(q) & "@草图" & n & "@求解模块1.SLDPRT")
                                    'datatest.Text2 = myDimension.SystemValue / pi * 180
                                    If myDimension.SystemValue / pi * 180 > 90 Then
                                        j1 = 20: i1 = myDimension.SystemValue / pi * 180
                                        Do
                                            If i1 - 90 > 20 Then
                                                j1 = 20
                                            Else
                                                j1 = 10
                                            End If
                                            i1 = i1 - j1
                                            boolstatus = Part.Extension.SelectByID2("D" & SDa(q) & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 10, 10, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
                                            Set myDimension = Part.Parameter("D" & SDa(q) & "@草图" & n & "@求解模块1.SLDPRT")
                                            myDimension.SystemValue = i1 / 180 * pi                                                     '将主动位置尺寸辅助尺寸递减
                                            Part.ClearSelection2 True
                                        Loop Until i1 < 90
                                        boolstatus = Part.Extension.SelectByID2("D" & SDa(q) & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 10, 10, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
                                        Set myDimension = Part.Parameter("D" & SDa(q) & "@草图" & n & "@求解模块1.SLDPRT")
                                        myDimension.SystemValue = 0                                                     '将主动位置尺寸辅助尺寸置0
                                        Part.ClearSelection2 True
                                    Else
                                        boolstatus = Part.Extension.SelectByID2("D" & SDa(q) & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 10, 10, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
                                        Set myDimension = Part.Parameter("D" & SDa(q) & "@草图" & n & "@求解模块1.SLDPRT")
                                        myDimension.SystemValue = 0                                                     '将主动位置尺寸辅助尺寸置0
                                        Part.ClearSelection2 True
                                    End If
                                End If
                            Next

                            For p = 2 To m                              '补加三副构件的固定P副
                                If link(p).Line_Unfixed Then
                                    If link(p).D > 0 Then
                                        Set skSegment = Part.SketchManager.CreateLine(0, d_ref, 0#, 0, link(p).D / 1000 + d_ref, 0#)
                                        Part.ClearSelection2 True
                                        LineX = LineX + 1
                                        boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                                        Set myDisplayDim = Part.AddDimension2(-d_ref, link(p).D / 2000 + d_ref, 0)
                                        Part.ClearSelection2 True
                                        no_dimen = no_dimen + 1
                                        If n = 1 Then
                                            ReDim Preserve IsDimension(LineX)
                                            IsDimension(LineX) = True               '表示LineX的尺寸已标注上
                                        End If
                                        boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0.05, 0, 0, False, 0, Nothing, 0)
                                        boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                                        Set myDisplayDim = Part.AddDimension2(link(p).D / 1250, 0.01, 0) '添加上P副与X轴的角度尺寸（须做更改）
                                        Part.ClearSelection2 True
                                        no_dimen = no_dimen + 1
                                        If link(p).alpha > 120 Then
                                            j = 20: i = 90
                                            Do                        '此Do循环是为了角度尺寸不出错
                                                If i > link(p).alpha - 5 Then
                                                    j = 1
                                                ElseIf i <= link(p).alpha - 5 And i > link(p).alpha - 10 Then
                                                    j = 5
                                                ElseIf i <= link(p).alpha - 10 And i > link(p).alpha - 20 Then
                                                    j = 10
                                                End If
                                                i = i + j
                                                boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
                                                Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
                                                myDimension.SystemValue = i / 180 * pi
                                                Part.ClearSelection2 True

                                            Loop Until i = link(p).alpha
                                        Else
                                            boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
                                            Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
                                            myDimension.SystemValue = link(p).alpha / 180 * pi
                                            Part.ClearSelection2 True
                                        End If
                                        boolstatus = Part.Extension.SelectByID2("Point8", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", d_ref * Cos(link(p).alpha / 180 * pi), d_ref * Sin(link(p).alpha / 180 * pi), 0, True, 0, Nothing, 0)
                                        Part.SketchAddConstraints "sgMERGEPOINTS"
                                        Part.ClearSelection2 True
                                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(p).D / 1000 * Cos(link(p).alpha * pi / 180), link(p).D / 1000 * Sin(link(p).alpha * pi / 180), 0, False, 0, Nothing, 0)
                                        boolstatus = Part.Extension.SelectByID2("Line" & link(p).Line_Unfixed, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                                        Part.SketchAddConstraints "sgCOINCIDENT"                        '添加该固定P副与D的尾端点的重合约束
                                        Part.ClearSelection2 True
                                        boolstatus = Part.Extension.SelectByID2("Line" & link(p).Line_Unfixed, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                                        boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                                        Part.SketchAddConstraints "sgPERPENDICULAR"                     '添加该直线与D的垂直约束
                                        Part.ClearSelection2 True
                                    ElseIf link(p).D = 0 Then
                                        Set skSegment = Part.SketchManager.CreateLine(d_ref, d_ref, 0#, 2 * d_ref, 2 * d_ref, 0#)
                                        Part.ClearSelection2 True
                                        LineX = LineX + 1
                                        boolstatus = Part.Extension.SelectByID2("Point8", "SKETCHPOINT", 0, 0, 0, False, 0, Nothing, 0)
                                        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", d_ref, d_ref, 0, True, 0, Nothing, 0)
                                        Part.SketchAddConstraints "sgMERGEPOINTS"
                                        Part.ClearSelection2 True
                                        boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                                        boolstatus = Part.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                                        Part.SketchAddConstraints "sgSAMELENGTH"                 '添加P副与参考P副直线的相等约束
                                        Part.ClearSelection2 True
                                        If n = 1 Then
                                            ReDim Preserve IsDimension(LineX)
                                            IsDimension(LineX) = True               '看作P副直线的尺寸已标注上
                                        End If
                                        boolstatus = Part.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                                        boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                                        Set myDisplayDim = Part.AddDimension2(d_ref, 0.01, 0) '添加上P副与X轴的角度尺寸（须做更改）
                                        Part.ClearSelection2 True
                                        no_dimen = no_dimen + 1
                                        If link(p).alpha > 120 Then
                                            j = 20: i = 90
                                            Do                        '此Do循环是为了角度尺寸不出错
                                                If i > link(p).alpha - 5 Then
                                                    j = 1
                                                ElseIf i <= link(p).alpha - 5 And i > link(p).alpha - 10 Then
                                                    j = 5
                                                ElseIf i <= link(p).alpha - 10 And i > link(p).alpha - 20 Then
                                                    j = 10
                                                End If
                                                i = i + j
                                                boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
                                                Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
                                                myDimension.SystemValue = i / 180 * pi
                                                Part.ClearSelection2 True
                                                
                                            Loop Until i = link(p).alpha
                                        Else
                                            boolstatus = Part.Extension.SelectByID2("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT", "DIMENSION", 0, 0, 0, False, 0, Nothing, 0)    '画草图2和3的时候需要再改名称
                                            Set myDimension = Part.Parameter("D" & no_dimen & "@草图" & n & "@求解模块1.SLDPRT")
                                            myDimension.SystemValue = link(p).alpha / 180 * pi
                                            Part.ClearSelection2 True
                                        End If
                                        boolstatus = Part.Extension.SelectByID2("Line" & link(p).Line_Unfixed, "SKETCHSEGMENT", 0, 0, 0, False, 0, Nothing, 0)
                                        boolstatus = Part.Extension.SelectByID2("Line" & LineX, "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, 0)
                                        Part.SketchAddConstraints "sgCOLINEAR"                   '选择该直线与为固定P副直线共线
                                        Part.ClearSelection2 True
                                    End If
                                    If n = 3 Then
                                        link(p).Line_Unfixed = 0        '清除未固定P副的标记
                                    End If
                                End If
                            Next
                            If n < 3 Then         '在草图1、2才执行此操作，防止多加no_dimen、LineX
                                no_dimen = no_dimen - no_dimen_not_minus: LineX = LineX - LineX_not_minus
                                no_dimen_not_minus = 0: LineX_not_minus = 0                                 '每个草图完成后清零
                            End If
                            If n = 3 Then
                                Form2.Frame1.Enabled = False
                                Form2.Command2.Enabled = False
                                Form2.Command3.Enabled = True
                                To_Be_Replace = True            '表示可以用块去替换了
                            End If
                            'Exit For
                        End If
                    Next
                End If
            Next
        End If
    Next
End Function
Function Act_Position_test(x1, y1, Xf, Yf)
    dy = y1 - Yf: dx = x1 - Xf
    ang = Atn(dy / dx) / pi * 180
    If dy > 0 And dx > 0 Then
        Act_Position_test = 1
    ElseIf dy > 0 And dx < 0 Then
        Act_Position_test = 2
    ElseIf dy < 0 And dx < 0 Then
        Act_Position_test = 3
    ElseIf dy < 0 And dx > 0 Then
        Act_Position_test = 4
    End If
End Function
Function Y_fixed_P(Xp As Double) As Double      '函数需要分为D=0和D<>0，下同
    If link(m).D Then
        Y_fixed_P = -Cos(link(m).alpha * pi / 180) / Sin(link(m).alpha * pi / 180) * Xp + (link(m).D / 1000) / Sin(link(m).alpha * pi / 180)
    Else    'link(m).D=0
        Y_fixed_P = Tan(link(m).alpha * pi / 180) * Xp
    End If
End Function
Function X_fixed_P(Yp As Double) As Double
    If link(m).D Then
        X_fixed_P = (link(m).D / 1000) / Cos(link(m).alpha * pi / 180) - Sin(link(m).alpha * pi / 180) / Cos(link(m).alpha * pi / 180) * Yp
    Else    'link(m).D=0
        X_fixed_P = Yp / Tan(link(m).alpha * pi / 180)
    End If
End Function

Function TMP_Cancel_fixed()         '因软件的影响，如果在准备加被动尺寸之前草图有警告之类的错误，会导致被动尺寸加不上，而我造成错误的原因基本上是某些点的固定，所以先取消固定，等到被动尺添加完成再通过TMP_Cancle_fixed_Recover恢复固定
 For i = 1 To m - 1
    If link(i).ch(0) Then
        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(i).Point_ch(0, 0), link(i).Point_ch(0, 1), 0, False, 0, Nothing, 0)
        Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除空副复合铰链点固定约束
        Part.ClearSelection2 True
    End If
    If link(i).ch(1) Then
        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(i).Point_ch(1, 0), link(i).Point_ch(1, 1), 0, False, 0, Nothing, 0)
        Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除尾副复合铰链点固定约束
        Part.ClearSelection2 True
    End If
    If link(i).PE Or link(i).RE Then
        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(i).Point_Empty(0), link(i).Point_Empty(1), 0, False, 0, Nothing, 0)
        Part.SketchConstraintsDel 0, "sgFIXED"                                                              '删除空副点固定约束
        Part.ClearSelection2 True
    End If
 Next
End Function

Function TMP_Cancel_fixed_Recover()
For i = 1 To m - 1
    If link(i).ch(0) Then
        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(i).Point_ch(0, 0), link(i).Point_ch(0, 1), 0, False, 0, Nothing, 0)
        Part.SketchAddConstraints "sgFIXED"
        Part.ClearSelection2 True
    End If
    If link(i).ch(1) Then
        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(i).Point_ch(1, 0), link(i).Point_ch(1, 1), 0, False, 0, Nothing, 0)
        Part.SketchAddConstraints "sgFIXED"
        Part.ClearSelection2 True
    End If
    If link(i).PE Or link(i).RE Then
        boolstatus = Part.Extension.SelectByID2("Point1", "SKETCHPOINT", link(i).Point_Empty(0), link(i).Point_Empty(1), 0, False, 0, Nothing, 0)
        Part.SketchAddConstraints "sgFIXED"
        Part.ClearSelection2 True
    End If
Next
End Function
